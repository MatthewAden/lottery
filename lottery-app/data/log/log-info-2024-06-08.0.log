24-06-08.09:50:00.192 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=10h18m12s164ms).
24-06-08.09:50:00.192 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=10h18m11s810ms).
24-06-08.09:50:00.192 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=10h18m11s767ms).
24-06-08.09:50:00.217 [kafka-producer-network-thread | producer-1] INFO  NetworkClient          - [Producer clientId=producer-1] Node -1 disconnected.
24-06-08.09:50:00.222 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Node -1 disconnected.
24-06-08.09:50:00.224 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Node -1 disconnected.
24-06-08.09:50:00.224 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Node 2147483646 disconnected.
24-06-08.09:50:00.225 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Node 2147483646 disconnected.
24-06-08.09:50:00.225 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
24-06-08.09:50:00.228 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
24-06-08.09:50:00.229 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Node 1 disconnected.
24-06-08.09:50:00.229 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cancelled in-flight METADATA request with correlation id 11 due to node 1 being disconnected (elapsed time since creation: 43ms, elapsed time since send: 43ms, request timeout: 30000ms)
24-06-08.09:50:00.229 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cancelled in-flight FIND_COORDINATOR request with correlation id 12 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
24-06-08.09:50:00.230 [kafka-producer-network-thread | producer-1] INFO  NetworkClient          - [Producer clientId=producer-1] Node 1 disconnected.
24-06-08.09:50:03.375 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:50:03.375 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:50:03.375 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.09:50:03.382 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:50:03.382 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:50:03.382 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:50:03.383 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:50:03.383 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:50:03.383 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.09:50:03.385 [kafka-coordinator-heartbeat-thread | matthew-group] WARN  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
24-06-08.09:50:03.386 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Member consumer-matthew-group-1-62405b61-614d-4719-8ae9-5e463ef3203c sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to consumer poll timeout has expired.
24-06-08.09:50:03.387 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:50:03.387 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:50:03.389 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.09:50:03.390 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.09:50:03.399 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Offset commit failed on partition matthew-topic-0 at offset 86: The coordinator is not aware of this member.
24-06-08.09:50:03.399 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] OffsetCommit failed with Generation{generationId=11, memberId='consumer-matthew-group-1-62405b61-614d-4719-8ae9-5e463ef3203c', protocol='range'}: The coordinator is not aware of this member.
24-06-08.09:50:03.399 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from OFFSET_COMMIT response
24-06-08.09:50:03.399 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: encountered UNKNOWN_MEMBER_ID from OFFSET_COMMIT response
24-06-08.09:50:03.403 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"45974709970","timestamp":1717774308183}
org.apache.kafka.clients.consumer.CommitFailedException: Commit cannot be completed since the group has already rebalanced and assigned the partitions to another member. This means that the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time message processing. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetCommitResponseHandler.handle(ConsumerCoordinator.java:1303)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator$OffsetCommitResponseHandler.handle(ConsumerCoordinator.java:1204)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator$CoordinatorResponseHandler.onSuccess(AbstractCoordinator.java:1196)
	at org.apache.kafka.clients.consumer.internals.AbstractCoordinator$CoordinatorResponseHandler.onSuccess(AbstractCoordinator.java:1171)
	at org.apache.kafka.clients.consumer.internals.RequestFuture$1.onSuccess(RequestFuture.java:206)
	at org.apache.kafka.clients.consumer.internals.RequestFuture.fireSuccess(RequestFuture.java:169)
	at org.apache.kafka.clients.consumer.internals.RequestFuture.complete(RequestFuture.java:129)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient$RequestFutureCompletionHandler.fireCompletion(ConsumerNetworkClient.java:602)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.firePendingCompletedRequests(ConsumerNetworkClient.java:412)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:297)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:236)
	at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:215)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1046)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.407 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.407 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] LeaveGroup request with Generation{generationId=11, memberId='consumer-matthew-group-1-62405b61-614d-4719-8ae9-5e463ef3203c', protocol='range'} failed with error: The coordinator is not aware of this member.
24-06-08.09:50:03.408 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91187954698","timestamp":1717774308307}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.410 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.411 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"51902517006","timestamp":1717774308332}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.412 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.413 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91039434907","timestamp":1717774308342}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.414 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.415 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"63575981332","timestamp":1717774308354}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.416 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.417 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"87330925079","timestamp":1717774308368}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.419 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.419 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94657527585","timestamp":1717774308381}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.420 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.421 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"20443037785","timestamp":1717774308405}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.422 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.423 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"38017135700","timestamp":1717774308449}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.424 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.424 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"31865488146","timestamp":1717774308476}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.426 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.426 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94148025502","timestamp":1717774308505}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.428 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.428 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99273173842","timestamp":1717774308527}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.429 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.429 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"40095072682","timestamp":1717774308547}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.431 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.431 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"76404243376","timestamp":1717774308580}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.433 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.433 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"41374618103","timestamp":1717774308603}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.435 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.436 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"47390983852","timestamp":1717774308628}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.437 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.438 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"32623008578","timestamp":1717774308654}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.439 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.440 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"37841440789","timestamp":1717774308690}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.442 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"43751897676","timestamp":1717774308706}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.446 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.448 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"54220054138","timestamp":1717774308719}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.454 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Failing OffsetCommit request since the consumer is not part of an active group
24-06-08.09:50:03.455 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"38016911811","timestamp":1717774308722}
org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)
	at org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)
	at org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)
	at sun.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy162.commitSync(Unknown Source)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3040)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3035)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.ackImmediate(KafkaMessageListenerContainer.java:1943)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processAck(KafkaMessageListenerContainer.java:1854)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doAck(KafkaMessageListenerContainer.java:1834)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.access$2500(KafkaMessageListenerContainer.java:550)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer$ConsumerAcknowledgment.acknowledge(KafkaMessageListenerContainer.java:3181)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:33)
	at sun.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:50:03.457 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Lost previously assigned partitions matthew-topic-0
24-06-08.09:50:03.459 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions lost: [matthew-topic-0]
24-06-08.09:50:03.460 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.09:50:03.460 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:50:03.460 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:50:03.460 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.09:50:03.461 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:50:03.461 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:50:03.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:50:03.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:50:03.463 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.09:50:03.465 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.09:50:03.465 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.09:50:03.470 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.09:50:03.474 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:50:03.474 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:50:03.474 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.09:50:03.474 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.09:52:34.621 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 97300 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.09:52:34.621 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.09:52:35.140 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.09:52:35.142 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.09:52:35.162 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
24-06-08.09:52:36.054 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.09:52:36.116 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.09:52:36.257 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.09:52:36.265 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.09:52:37.383 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.09:52:37.480 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.09:52:37.554 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.09:52:37.554 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.09:52:37.554 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717811557553
24-06-08.09:52:37.566 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.09:52:37.576 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.09:52:37.581 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.09:52:37.581 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.09:52:37.581 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717811557581
24-06-08.09:52:37.585 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.09:52:37.598 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.209 seconds (JVM running for 3.698)
24-06-08.09:52:37.804 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.09:52:37.890 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.09:52:37.890 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.09:52:37.891 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.09:52:37.891 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.09:52:37.891 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:52:37.891 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:52:38.023 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.09:52:38.053 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.09:52:38.105 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.09:52:38.106 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 849426872195 sku: 9011 outBusinessNo: 1-1174251741
24-06-08.09:52:38.127 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.09:52:38.127 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.09:52:38.151 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.09:52:38.151 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.09:52:38.151 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.09:52:38.151 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.09:52:38.240 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.241 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.241 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.243 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.255 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.09:52:38.255 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.09:52:38.276 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.09:52:38.276 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.09:52:38.276 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717811558276
24-06-08.09:52:38.287 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.09:52:38.287 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.09:52:38.302 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"15165134622","timestamp":1717811558245}
24-06-08.09:52:38.305 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.09:52:38.321 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.09:52:38.344 [main            ] INFO  RaffleOrderTest        - 测试结果：772280812471
24-06-08.09:52:38.344 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 548203534584 sku: 9011 outBusinessNo: 1-616166744
24-06-08.09:52:38.347 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.347 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.347 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.349 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.349 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"00922061687","timestamp":1717811558349}
24-06-08.09:52:38.356 [main            ] INFO  RaffleOrderTest        - 测试结果：660779821442
24-06-08.09:52:38.356 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 716202905704 sku: 9011 outBusinessNo: 1-392485055
24-06-08.09:52:38.359 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.359 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.359 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.360 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.360 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"78904428517","timestamp":1717811558360}
24-06-08.09:52:38.360 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.09:52:38.370 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.09:52:38.378 [main            ] INFO  RaffleOrderTest        - 测试结果：551069666057
24-06-08.09:52:38.378 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 539811948854 sku: 9011 outBusinessNo: 11279480774
24-06-08.09:52:38.380 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.381 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.381 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.382 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.382 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"19002208820","timestamp":1717811558382}
24-06-08.09:52:38.387 [main            ] INFO  RaffleOrderTest        - 测试结果：372337578786
24-06-08.09:52:38.388 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 216963619870 sku: 9011 outBusinessNo: 1658876291
24-06-08.09:52:38.390 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.390 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.390 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.391 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.391 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"12613353685","timestamp":1717811558391}
24-06-08.09:52:38.396 [main            ] INFO  RaffleOrderTest        - 测试结果：832452425502
24-06-08.09:52:38.396 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 424693948336 sku: 9011 outBusinessNo: 1-441905934
24-06-08.09:52:38.398 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.398 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.398 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.399 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.399 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"71560576523","timestamp":1717811558399}
24-06-08.09:52:38.404 [main            ] INFO  RaffleOrderTest        - 测试结果：408596586256
24-06-08.09:52:38.404 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 827926810312 sku: 9011 outBusinessNo: 11494692392
24-06-08.09:52:38.406 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.406 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.406 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.407 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.407 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"45766513253","timestamp":1717811558407}
24-06-08.09:52:38.417 [main            ] INFO  RaffleOrderTest        - 测试结果：362406368415
24-06-08.09:52:38.417 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 798683540825 sku: 9011 outBusinessNo: 1707519976
24-06-08.09:52:38.419 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.419 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.419 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.420 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.421 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"30327525720","timestamp":1717811558420}
24-06-08.09:52:38.426 [main            ] INFO  RaffleOrderTest        - 测试结果：987862426724
24-06-08.09:52:38.427 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 346989205982 sku: 9011 outBusinessNo: 11059095915
24-06-08.09:52:38.429 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.429 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.429 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.430 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.431 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"14288785479","timestamp":1717811558431}
24-06-08.09:52:38.440 [main            ] INFO  RaffleOrderTest        - 测试结果：175395359596
24-06-08.09:52:38.440 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 656515775773 sku: 9011 outBusinessNo: 1-1899529889
24-06-08.09:52:38.444 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.444 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.444 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.445 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.446 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"34389652235","timestamp":1717811558446}
24-06-08.09:52:38.451 [main            ] INFO  RaffleOrderTest        - 测试结果：949361125892
24-06-08.09:52:38.451 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 911040313339 sku: 9011 outBusinessNo: 11554169551
24-06-08.09:52:38.455 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.455 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.455 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.456 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.457 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"91531823680","timestamp":1717811558457}
24-06-08.09:52:38.465 [main            ] INFO  RaffleOrderTest        - 测试结果：470248189335
24-06-08.09:52:38.465 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 385169188262 sku: 9011 outBusinessNo: 1856185986
24-06-08.09:52:38.471 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.471 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.471 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.474 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.474 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"16407564671","timestamp":1717811558474}
24-06-08.09:52:38.487 [main            ] INFO  RaffleOrderTest        - 测试结果：320458123605
24-06-08.09:52:38.487 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 730820050521 sku: 9011 outBusinessNo: 1-1024338585
24-06-08.09:52:38.492 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.492 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.492 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.494 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.494 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"00948122978","timestamp":1717811558494}
24-06-08.09:52:38.506 [main            ] INFO  RaffleOrderTest        - 测试结果：405101832189
24-06-08.09:52:38.506 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 416497816916 sku: 9011 outBusinessNo: 1-659924133
24-06-08.09:52:38.512 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.512 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.513 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.516 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.516 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"79463860216","timestamp":1717811558516}
24-06-08.09:52:38.524 [main            ] INFO  RaffleOrderTest        - 测试结果：694069186348
24-06-08.09:52:38.524 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 987242577004 sku: 9011 outBusinessNo: 1-1276024411
24-06-08.09:52:38.528 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.528 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.528 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.530 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.530 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"60596169421","timestamp":1717811558530}
24-06-08.09:52:38.543 [main            ] INFO  RaffleOrderTest        - 测试结果：258059916986
24-06-08.09:52:38.543 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 314772188862 sku: 9011 outBusinessNo: 11187535524
24-06-08.09:52:38.566 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.566 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.566 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.575 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.576 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"98266685356","timestamp":1717811558576}
24-06-08.09:52:38.589 [main            ] INFO  RaffleOrderTest        - 测试结果：650387024488
24-06-08.09:52:38.589 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 887722701203 sku: 9011 outBusinessNo: 11480601720
24-06-08.09:52:38.593 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.593 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.593 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.595 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.595 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"75510920627","timestamp":1717811558595}
24-06-08.09:52:38.606 [main            ] INFO  RaffleOrderTest        - 测试结果：971151234497
24-06-08.09:52:38.606 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 810178686008 sku: 9011 outBusinessNo: 11539628053
24-06-08.09:52:38.610 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.610 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.610 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.612 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.612 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"89142378107","timestamp":1717811558612}
24-06-08.09:52:38.621 [main            ] INFO  RaffleOrderTest        - 测试结果：297389359144
24-06-08.09:52:38.621 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 602770380765 sku: 9011 outBusinessNo: 1-209624818
24-06-08.09:52:38.624 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.625 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.625 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.626 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.627 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"16040415489","timestamp":1717811558626}
24-06-08.09:52:38.635 [main            ] INFO  RaffleOrderTest        - 测试结果：737945797600
24-06-08.09:52:38.636 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 507676769620 sku: 9011 outBusinessNo: 1-1975721255
24-06-08.09:52:38.638 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:52:38.638 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:52:38.638 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:52:38.639 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":9011,"id":"65930998743","timestamp":1717811558638}
24-06-08.09:52:38.640 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:52:38.640 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"99785810427","timestamp":1717811558640}
24-06-08.09:52:38.646 [main            ] INFO  RaffleOrderTest        - 测试结果：727354984636
24-06-08.09:52:41.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully joined group with generation Generation{generationId=13, memberId='consumer-matthew-group-1-d8882807-89f1-47ec-a993-6625bd7e01ca', protocol='range'}
24-06-08.09:52:41.169 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully joined group with generation Generation{generationId=13, memberId='consumer-matthew-group-2-4ace7a37-a830-4dca-bd35-b853d860cf5d', protocol='range'}
24-06-08.09:52:41.175 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Finished assignment for group at generation 13: {consumer-matthew-group-1-d8882807-89f1-47ec-a993-6625bd7e01ca=Assignment(partitions=[matthew-topic-0]), consumer-matthew-group-2-4ace7a37-a830-4dca-bd35-b853d860cf5d=Assignment(partitions=[])}
24-06-08.09:52:41.187 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully synced group in generation Generation{generationId=13, memberId='consumer-matthew-group-1-d8882807-89f1-47ec-a993-6625bd7e01ca', protocol='range'}
24-06-08.09:52:41.187 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully synced group in generation Generation{generationId=13, memberId='consumer-matthew-group-2-4ace7a37-a830-4dca-bd35-b853d860cf5d', protocol='range'}
24-06-08.09:52:41.187 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[])
24-06-08.09:52:41.187 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[matthew-topic-0])
24-06-08.09:52:41.187 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Adding newly assigned partitions: 
24-06-08.09:52:41.188 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: []
24-06-08.09:52:41.191 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Adding newly assigned partitions: matthew-topic-0
24-06-08.09:52:41.202 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Setting offset for partition matthew-topic-0 to the committed offset FetchPosition{offset=85, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.09:52:41.202 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: [matthew-topic-0]
24-06-08.09:52:41.247 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"45974709970","timestamp":1717774308183}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.248 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91187954698","timestamp":1717774308307}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.248 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"51902517006","timestamp":1717774308332}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.249 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91039434907","timestamp":1717774308342}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.249 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"63575981332","timestamp":1717774308354}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.250 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"87330925079","timestamp":1717774308368}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.250 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94657527585","timestamp":1717774308381}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.250 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"20443037785","timestamp":1717774308405}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"38017135700","timestamp":1717774308449}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"31865488146","timestamp":1717774308476}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94148025502","timestamp":1717774308505}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99273173842","timestamp":1717774308527}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"40095072682","timestamp":1717774308547}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"76404243376","timestamp":1717774308580}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"41374618103","timestamp":1717774308603}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.253 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"47390983852","timestamp":1717774308628}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.253 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"32623008578","timestamp":1717774308654}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.254 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"37841440789","timestamp":1717774308690}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.254 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"43751897676","timestamp":1717774308706}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.254 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"54220054138","timestamp":1717774308719}
java.lang.ClassCastException: java.lang.Integer cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.255 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"38016911811","timestamp":1717774308722}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.255 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"15165134622","timestamp":1717811558245}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.255 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00922061687","timestamp":1717811558349}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.255 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"78904428517","timestamp":1717811558360}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"19002208820","timestamp":1717811558382}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"12613353685","timestamp":1717811558391}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"71560576523","timestamp":1717811558399}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"45766513253","timestamp":1717811558407}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"30327525720","timestamp":1717811558420}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"14288785479","timestamp":1717811558431}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.257 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"34389652235","timestamp":1717811558446}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.257 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91531823680","timestamp":1717811558457}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.257 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"16407564671","timestamp":1717811558474}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.257 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00948122978","timestamp":1717811558494}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.257 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"79463860216","timestamp":1717811558516}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.257 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"60596169421","timestamp":1717811558530}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"98266685356","timestamp":1717811558576}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"75510920627","timestamp":1717811558595}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"89142378107","timestamp":1717811558612}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"16040415489","timestamp":1717811558626}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"65930998743","timestamp":1717811558638}
java.lang.ClassCastException: java.lang.Integer cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:52:41.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99785810427","timestamp":1717811558640}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:53:04.037 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Revoke previously assigned partitions matthew-topic-0
24-06-08.09:53:04.037 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Member consumer-matthew-group-2-4ace7a37-a830-4dca-bd35-b853d860cf5d sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.09:53:04.037 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.09:53:04.037 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Member consumer-matthew-group-1-d8882807-89f1-47ec-a993-6625bd7e01ca sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:53:04.038 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:53:04.042 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:53:04.042 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:53:04.042 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.09:53:04.043 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:53:04.043 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:53:04.043 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.09:53:04.049 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.09:53:04.050 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.09:53:04.050 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.09:53:04.050 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.09:53:04.053 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.09:53:04.056 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:53:04.056 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:53:04.056 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.09:53:04.056 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.09:53:22.786 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 98319 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.09:53:22.787 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.09:53:23.351 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.09:53:23.353 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.09:53:23.376 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
24-06-08.09:53:24.302 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.09:53:24.356 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.09:53:24.495 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.09:53:24.508 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.09:53:25.753 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.09:53:25.838 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.09:53:25.911 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.09:53:25.912 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.09:53:25.912 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717811605911
24-06-08.09:53:25.923 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.09:53:25.931 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.09:53:25.937 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.09:53:25.937 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.09:53:25.937 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717811605937
24-06-08.09:53:25.943 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.09:53:25.957 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.453 seconds (JVM running for 4.039)
24-06-08.09:53:26.172 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.09:53:26.254 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.09:53:26.254 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.09:53:26.257 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.09:53:26.257 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.09:53:26.258 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:53:26.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:53:26.261 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.09:53:26.261 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.09:53:26.281 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.09:53:26.281 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.09:53:26.282 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.09:53:26.282 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.09:53:26.432 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.09:53:26.462 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.09:53:26.505 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.09:53:26.507 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 577528838580 sku: 9011 outBusinessNo: 1588467470
24-06-08.09:53:26.624 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.624 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.624 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.628 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.636 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.09:53:26.636 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.09:53:26.656 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.09:53:26.656 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.09:53:26.656 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717811606656
24-06-08.09:53:26.668 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.09:53:26.677 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.09:53:26.700 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"25910158305","timestamp":1717811606629}
24-06-08.09:53:26.709 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.09:53:26.733 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.09:53:26.763 [main            ] INFO  RaffleOrderTest        - 测试结果：925551070905
24-06-08.09:53:26.763 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 876788022332 sku: 9011 outBusinessNo: 1-1175268741
24-06-08.09:53:26.769 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.769 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.769 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.771 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.772 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"42064819469","timestamp":1717811606771}
24-06-08.09:53:26.779 [main            ] INFO  RaffleOrderTest        - 测试结果：398431712852
24-06-08.09:53:26.779 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 175861177821 sku: 9011 outBusinessNo: 11971434309
24-06-08.09:53:26.782 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.782 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.782 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.784 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.784 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"11667036838","timestamp":1717811606784}
24-06-08.09:53:26.792 [main            ] INFO  RaffleOrderTest        - 测试结果：987748225131
24-06-08.09:53:26.792 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 542153709655 sku: 9011 outBusinessNo: 1-1702831141
24-06-08.09:53:26.797 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.797 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.797 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.798 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.799 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"99742086668","timestamp":1717811606798}
24-06-08.09:53:26.799 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.09:53:26.813 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.09:53:26.821 [main            ] INFO  RaffleOrderTest        - 测试结果：564767271489
24-06-08.09:53:26.821 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 048495966141 sku: 9011 outBusinessNo: 1-1235911636
24-06-08.09:53:26.824 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.824 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.824 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.826 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.826 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"39566179547","timestamp":1717811606826}
24-06-08.09:53:26.833 [main            ] INFO  RaffleOrderTest        - 测试结果：117224965766
24-06-08.09:53:26.833 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 187929776416 sku: 9011 outBusinessNo: 1-207890447
24-06-08.09:53:26.836 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.836 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.836 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.837 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.837 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"97016093218","timestamp":1717811606837}
24-06-08.09:53:26.846 [main            ] INFO  RaffleOrderTest        - 测试结果：261625520009
24-06-08.09:53:26.846 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 982182294245 sku: 9011 outBusinessNo: 11110881367
24-06-08.09:53:26.850 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.850 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.850 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.852 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.852 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"60961460420","timestamp":1717811606852}
24-06-08.09:53:26.865 [main            ] INFO  RaffleOrderTest        - 测试结果：408952638701
24-06-08.09:53:26.865 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 545943332702 sku: 9011 outBusinessNo: 1989514712
24-06-08.09:53:26.872 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.873 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.873 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.875 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.875 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"74618837857","timestamp":1717811606875}
24-06-08.09:53:26.898 [main            ] INFO  RaffleOrderTest        - 测试结果：928749082629
24-06-08.09:53:26.898 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 011183020213 sku: 9011 outBusinessNo: 1457450708
24-06-08.09:53:26.909 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.909 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.909 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.912 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.913 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"82545756602","timestamp":1717811606912}
24-06-08.09:53:26.928 [main            ] INFO  RaffleOrderTest        - 测试结果：693333492029
24-06-08.09:53:26.928 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 554809729089 sku: 9011 outBusinessNo: 1-751851355
24-06-08.09:53:26.941 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.942 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.942 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.946 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.946 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"26347416447","timestamp":1717811606946}
24-06-08.09:53:26.961 [main            ] INFO  RaffleOrderTest        - 测试结果：579891325378
24-06-08.09:53:26.961 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 054789587076 sku: 9011 outBusinessNo: 1-407824401
24-06-08.09:53:26.965 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.965 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.965 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.967 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.968 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"41963176530","timestamp":1717811606968}
24-06-08.09:53:26.978 [main            ] INFO  RaffleOrderTest        - 测试结果：414395832551
24-06-08.09:53:26.978 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 687218465006 sku: 9011 outBusinessNo: 11623129583
24-06-08.09:53:26.983 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.983 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.983 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.986 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.986 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"11467377517","timestamp":1717811606986}
24-06-08.09:53:26.993 [main            ] INFO  RaffleOrderTest        - 测试结果：495904730955
24-06-08.09:53:26.993 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 215894107032 sku: 9011 outBusinessNo: 1-299342726
24-06-08.09:53:26.997 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:26.997 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:26.998 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:26.999 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:26.999 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"10574997055","timestamp":1717811606999}
24-06-08.09:53:27.005 [main            ] INFO  RaffleOrderTest        - 测试结果：366600865927
24-06-08.09:53:27.005 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 088330223644 sku: 9011 outBusinessNo: 12127021838
24-06-08.09:53:27.008 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:27.008 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:27.008 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:27.010 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:27.010 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"29617037543","timestamp":1717811607010}
24-06-08.09:53:27.020 [main            ] INFO  RaffleOrderTest        - 测试结果：710977858653
24-06-08.09:53:27.020 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 831521012750 sku: 9011 outBusinessNo: 1-873852134
24-06-08.09:53:27.025 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:27.025 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:27.025 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:27.026 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:27.026 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"75911183246","timestamp":1717811607026}
24-06-08.09:53:27.035 [main            ] INFO  RaffleOrderTest        - 测试结果：076031466006
24-06-08.09:53:27.035 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 139392181905 sku: 9011 outBusinessNo: 1207229472
24-06-08.09:53:27.038 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:27.038 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:27.038 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:27.039 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:27.040 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"11854641018","timestamp":1717811607039}
24-06-08.09:53:27.050 [main            ] INFO  RaffleOrderTest        - 测试结果：779308578269
24-06-08.09:53:27.051 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 672242355116 sku: 9011 outBusinessNo: 1-1708291139
24-06-08.09:53:27.078 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:27.078 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:27.078 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:27.080 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:27.081 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"19886192133","timestamp":1717811607080}
24-06-08.09:53:27.090 [main            ] INFO  RaffleOrderTest        - 测试结果：023924067066
24-06-08.09:53:27.090 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 901942442971 sku: 9011 outBusinessNo: 11694712928
24-06-08.09:53:27.094 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:27.094 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:27.094 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:27.096 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:27.096 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"18286111500","timestamp":1717811607096}
24-06-08.09:53:27.105 [main            ] INFO  RaffleOrderTest        - 测试结果：221975603765
24-06-08.09:53:27.106 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 849642804423 sku: 9011 outBusinessNo: 1-1060023148
24-06-08.09:53:27.111 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:27.111 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:27.111 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:27.113 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:27.113 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"80029585034","timestamp":1717811607113}
24-06-08.09:53:27.130 [main            ] INFO  RaffleOrderTest        - 测试结果：736405133278
24-06-08.09:53:27.130 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 152351223795 sku: 9011 outBusinessNo: 1-910538822
24-06-08.09:53:27.136 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.09:53:27.136 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.09:53:27.136 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.09:53:27.138 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":9011,"id":"14243296568","timestamp":1717811607137}
24-06-08.09:53:27.140 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.09:53:27.141 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"37231214725","timestamp":1717811607141}
24-06-08.09:53:27.155 [main            ] INFO  RaffleOrderTest        - 测试结果：917988787181
24-06-08.09:53:29.291 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully joined group with generation Generation{generationId=15, memberId='consumer-matthew-group-2-19f270a4-09d1-4df0-82f4-3324169ab0dc', protocol='range'}
24-06-08.09:53:29.291 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully joined group with generation Generation{generationId=15, memberId='consumer-matthew-group-1-94516b20-2ecb-4fb0-8a3a-af215944819d', protocol='range'}
24-06-08.09:53:29.297 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Finished assignment for group at generation 15: {consumer-matthew-group-1-94516b20-2ecb-4fb0-8a3a-af215944819d=Assignment(partitions=[matthew-topic-0]), consumer-matthew-group-2-19f270a4-09d1-4df0-82f4-3324169ab0dc=Assignment(partitions=[])}
24-06-08.09:53:29.308 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully synced group in generation Generation{generationId=15, memberId='consumer-matthew-group-2-19f270a4-09d1-4df0-82f4-3324169ab0dc', protocol='range'}
24-06-08.09:53:29.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully synced group in generation Generation{generationId=15, memberId='consumer-matthew-group-1-94516b20-2ecb-4fb0-8a3a-af215944819d', protocol='range'}
24-06-08.09:53:29.308 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[])
24-06-08.09:53:29.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[matthew-topic-0])
24-06-08.09:53:29.308 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Adding newly assigned partitions: 
24-06-08.09:53:29.310 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: []
24-06-08.09:53:29.313 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Adding newly assigned partitions: matthew-topic-0
24-06-08.09:53:29.322 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Setting offset for partition matthew-topic-0 to the committed offset FetchPosition{offset=85, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.09:53:29.322 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: [matthew-topic-0]
24-06-08.09:54:32.930 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=50s975ms).
24-06-08.09:54:32.931 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-08.09:54:32.931 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:54:32.930 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=51s353ms).
24-06-08.09:54:32.930 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-08.09:54:32.937 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:54:32.930 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=51s53ms).
24-06-08.09:54:32.949 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Client requested disconnect from node 2147483646
24-06-08.09:54:32.949 [kafka-coordinator-heartbeat-thread | matthew-group] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Client requested disconnect from node 2147483646
24-06-08.09:54:32.952 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"45974709970","timestamp":1717774308183}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.953 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91187954698","timestamp":1717774308307}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"51902517006","timestamp":1717774308332}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.955 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91039434907","timestamp":1717774308342}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.955 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"63575981332","timestamp":1717774308354}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.957 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"87330925079","timestamp":1717774308368}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.958 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94657527585","timestamp":1717774308381}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.958 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"20443037785","timestamp":1717774308405}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.959 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"38017135700","timestamp":1717774308449}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.960 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"31865488146","timestamp":1717774308476}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.960 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94148025502","timestamp":1717774308505}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99273173842","timestamp":1717774308527}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.961 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:54:32.961 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:54:32.961 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-08.09:54:32.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"40095072682","timestamp":1717774308547}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.961 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:54:32.962 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"76404243376","timestamp":1717774308580}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"41374618103","timestamp":1717774308603}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.964 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"47390983852","timestamp":1717774308628}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.964 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"32623008578","timestamp":1717774308654}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.965 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"37841440789","timestamp":1717774308690}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.965 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"43751897676","timestamp":1717774308706}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"54220054138","timestamp":1717774308719}
java.lang.ClassCastException: java.lang.Integer cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"38016911811","timestamp":1717774308722}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.967 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"15165134622","timestamp":1717811558245}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.967 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00922061687","timestamp":1717811558349}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.967 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"78904428517","timestamp":1717811558360}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"19002208820","timestamp":1717811558382}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"12613353685","timestamp":1717811558391}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"71560576523","timestamp":1717811558399}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"45766513253","timestamp":1717811558407}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"30327525720","timestamp":1717811558420}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"14288785479","timestamp":1717811558431}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"34389652235","timestamp":1717811558446}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91531823680","timestamp":1717811558457}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"16407564671","timestamp":1717811558474}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.970 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00948122978","timestamp":1717811558494}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"79463860216","timestamp":1717811558516}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"60596169421","timestamp":1717811558530}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"98266685356","timestamp":1717811558576}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"75510920627","timestamp":1717811558595}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"89142378107","timestamp":1717811558612}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"16040415489","timestamp":1717811558626}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.972 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"65930998743","timestamp":1717811558638}
java.lang.ClassCastException: java.lang.Integer cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.973 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99785810427","timestamp":1717811558640}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.973 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"25910158305","timestamp":1717811606629}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.973 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"42064819469","timestamp":1717811606771}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.973 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"11667036838","timestamp":1717811606784}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99742086668","timestamp":1717811606798}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.974 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"39566179547","timestamp":1717811606826}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"97016093218","timestamp":1717811606837}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"60961460420","timestamp":1717811606852}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"74618837857","timestamp":1717811606875}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"82545756602","timestamp":1717811606912}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"26347416447","timestamp":1717811606946}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"41963176530","timestamp":1717811606968}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"11467377517","timestamp":1717811606986}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"10574997055","timestamp":1717811606999}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"29617037543","timestamp":1717811607010}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.977 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"75911183246","timestamp":1717811607026}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.977 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"11854641018","timestamp":1717811607039}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.977 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"19886192133","timestamp":1717811607080}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"18286111500","timestamp":1717811607096}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"80029585034","timestamp":1717811607113}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"14243296568","timestamp":1717811607137}
java.lang.ClassCastException: java.lang.Integer cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.979 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"37231214725","timestamp":1717811607141}
java.lang.ClassCastException: com.alibaba.fastjson.JSONObject cannot be cast to cn.matthew.domain.activity.model.valobj.ActivitySkuStockKeyVO
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.09:54:32.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:54:32.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:54:32.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-08.09:54:32.980 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.09:54:33.068 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:54:33.068 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:54:33.068 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.09:54:33.069 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:54:33.069 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:54:33.069 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:54:33.069 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:54:33.069 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.09:54:33.073 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.09:54:33.074 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.09:54:33.085 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Revoke previously assigned partitions matthew-topic-0
24-06-08.09:54:33.085 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.09:54:33.085 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:54:33.085 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:54:33.085 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.09:54:33.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.09:54:33.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.09:54:33.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:54:33.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:54:33.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.09:54:33.089 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.09:54:33.089 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.09:54:33.094 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.09:54:33.095 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.09:54:33.095 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.09:54:33.095 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.09:54:33.095 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.10:02:10.560 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 9848 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:02:10.561 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:02:11.100 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:02:11.101 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:02:11.122 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
24-06-08.10:02:12.010 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:02:12.057 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:02:12.191 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:02:12.207 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:02:13.293 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:02:13.371 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:02:13.450 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:02:13.450 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:02:13.450 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812133449
24-06-08.10:02:13.460 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:02:13.469 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:02:13.475 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:02:13.475 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:02:13.475 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812133475
24-06-08.10:02:13.478 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:02:13.488 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.164 seconds (JVM running for 3.794)
24-06-08.10:02:13.667 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:02:13.741 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:02:13.741 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:02:13.743 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:02:13.743 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:02:13.744 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:02:13.744 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:02:13.747 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:02:13.747 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:02:13.761 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:02:13.761 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:02:13.761 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:02:13.762 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:02:13.898 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:02:13.929 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.10:02:13.961 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.10:02:13.962 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 022217525930 sku: 9011 outBusinessNo: 1-805624263
24-06-08.10:02:14.125 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.125 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.125 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.137 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_19
24-06-08.10:02:14.139 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.140 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 615982477973 sku: 9011 outBusinessNo: 1-228007016
24-06-08.10:02:14.168 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.169 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.169 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.174 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_18
24-06-08.10:02:14.174 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.174 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 944875190084 sku: 9011 outBusinessNo: 1-1730223505
24-06-08.10:02:14.185 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.185 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.185 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.189 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_17
24-06-08.10:02:14.189 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.189 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 302855170354 sku: 9011 outBusinessNo: 11795140563
24-06-08.10:02:14.197 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.197 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.197 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.204 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_16
24-06-08.10:02:14.204 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.204 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 005020122722 sku: 9011 outBusinessNo: 1-785742997
24-06-08.10:02:14.215 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.216 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.216 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.228 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_15
24-06-08.10:02:14.228 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.228 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 641222881435 sku: 9011 outBusinessNo: 11588004292
24-06-08.10:02:14.236 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.236 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.236 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.239 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_14
24-06-08.10:02:14.239 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.239 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 612372873742 sku: 9011 outBusinessNo: 1736292442
24-06-08.10:02:14.245 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.246 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.246 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.249 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_13
24-06-08.10:02:14.250 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.250 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 333146522035 sku: 9011 outBusinessNo: 1-44881728
24-06-08.10:02:14.257 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.257 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.257 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.261 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_12
24-06-08.10:02:14.261 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.262 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 768792957319 sku: 9011 outBusinessNo: 11824586502
24-06-08.10:02:14.268 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.268 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.268 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.272 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_11
24-06-08.10:02:14.272 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.272 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 135448866569 sku: 9011 outBusinessNo: 1483985022
24-06-08.10:02:14.281 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.281 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.281 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.283 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_10
24-06-08.10:02:14.283 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.283 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 954372907509 sku: 9011 outBusinessNo: 1-251018624
24-06-08.10:02:14.289 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.289 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.289 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.292 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_9
24-06-08.10:02:14.292 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.292 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 513184478785 sku: 9011 outBusinessNo: 11436100612
24-06-08.10:02:14.296 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.296 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.296 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.298 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_8
24-06-08.10:02:14.298 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.298 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 236660633101 sku: 9011 outBusinessNo: 1939818197
24-06-08.10:02:14.302 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.302 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.302 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.304 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_7
24-06-08.10:02:14.304 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.304 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 993321783342 sku: 9011 outBusinessNo: 1-244451748
24-06-08.10:02:14.309 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.309 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.309 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.311 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_6
24-06-08.10:02:14.311 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.311 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 958032147199 sku: 9011 outBusinessNo: 11091130638
24-06-08.10:02:14.318 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.318 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.318 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.319 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_5
24-06-08.10:02:14.320 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.320 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 579342275432 sku: 9011 outBusinessNo: 1-777993791
24-06-08.10:02:14.328 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.328 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.328 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.330 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_4
24-06-08.10:02:14.330 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.330 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 401647071699 sku: 9011 outBusinessNo: 11373263821
24-06-08.10:02:14.334 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.334 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.334 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.336 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_3
24-06-08.10:02:14.336 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.336 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 623704605051 sku: 9011 outBusinessNo: 1-1082874081
24-06-08.10:02:14.341 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.341 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.341 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.343 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_2
24-06-08.10:02:14.343 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.343 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 726893583040 sku: 9011 outBusinessNo: 12100603322
24-06-08.10:02:14.347 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.347 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.347 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.351 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_1
24-06-08.10:02:14.351 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:14.351 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 868273982230 sku: 9011 outBusinessNo: 1-781357034
24-06-08.10:02:14.357 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:14.357 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:14.357 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:02:14.371 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.10:02:14.371 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.10:02:14.411 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:02:14.411 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:02:14.411 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812134411
24-06-08.10:02:14.424 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:02:14.439 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:02:14.463 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":9011,"id":"15494567878","timestamp":1717812134359}
24-06-08.10:02:14.465 [main            ] INFO  ActivityRepository     - 活动sku库存加锁失败 big_market_activity_sku_stock_count_key9011_0
24-06-08.10:02:14.465 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:16.770 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully joined group with generation Generation{generationId=17, memberId='consumer-matthew-group-2-0b6c11b7-77c4-4b9c-af15-e96dcb02fa8e', protocol='range'}
24-06-08.10:02:16.770 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully joined group with generation Generation{generationId=17, memberId='consumer-matthew-group-1-78f92cfa-aacf-4b20-92cf-71fcbbb9ce9c', protocol='range'}
24-06-08.10:02:16.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Finished assignment for group at generation 17: {consumer-matthew-group-2-0b6c11b7-77c4-4b9c-af15-e96dcb02fa8e=Assignment(partitions=[]), consumer-matthew-group-1-78f92cfa-aacf-4b20-92cf-71fcbbb9ce9c=Assignment(partitions=[matthew-topic-0])}
24-06-08.10:02:16.780 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully synced group in generation Generation{generationId=17, memberId='consumer-matthew-group-1-78f92cfa-aacf-4b20-92cf-71fcbbb9ce9c', protocol='range'}
24-06-08.10:02:16.780 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully synced group in generation Generation{generationId=17, memberId='consumer-matthew-group-2-0b6c11b7-77c4-4b9c-af15-e96dcb02fa8e', protocol='range'}
24-06-08.10:02:16.780 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[])
24-06-08.10:02:16.780 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[matthew-topic-0])
24-06-08.10:02:16.781 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Adding newly assigned partitions: 
24-06-08.10:02:16.781 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: []
24-06-08.10:02:16.783 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Adding newly assigned partitions: matthew-topic-0
24-06-08.10:02:16.788 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Setting offset for partition matthew-topic-0 to the committed offset FetchPosition{offset=85, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.10:02:16.788 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: [matthew-topic-0]
24-06-08.10:02:16.853 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"45974709970","timestamp":1717774308183}
24-06-08.10:02:16.858 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91187954698","timestamp":1717774308307}
24-06-08.10:02:16.863 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"51902517006","timestamp":1717774308332}
24-06-08.10:02:16.866 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91039434907","timestamp":1717774308342}
24-06-08.10:02:16.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"63575981332","timestamp":1717774308354}
24-06-08.10:02:16.875 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"87330925079","timestamp":1717774308368}
24-06-08.10:02:16.878 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94657527585","timestamp":1717774308381}
24-06-08.10:02:16.883 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"20443037785","timestamp":1717774308405}
24-06-08.10:02:16.887 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"38017135700","timestamp":1717774308449}
24-06-08.10:02:16.890 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"31865488146","timestamp":1717774308476}
24-06-08.10:02:16.895 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94148025502","timestamp":1717774308505}
24-06-08.10:02:16.897 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99273173842","timestamp":1717774308527}
24-06-08.10:02:16.900 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"40095072682","timestamp":1717774308547}
24-06-08.10:02:16.903 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"76404243376","timestamp":1717774308580}
24-06-08.10:02:16.906 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"41374618103","timestamp":1717774308603}
24-06-08.10:02:16.910 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"47390983852","timestamp":1717774308628}
24-06-08.10:02:16.913 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"32623008578","timestamp":1717774308654}
24-06-08.10:02:16.915 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"37841440789","timestamp":1717774308690}
24-06-08.10:02:16.918 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"43751897676","timestamp":1717774308706}
24-06-08.10:02:16.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"54220054138","timestamp":1717774308719}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 23 common frames omitted
24-06-08.10:02:16.925 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"38016911811","timestamp":1717774308722}
24-06-08.10:02:16.927 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"15165134622","timestamp":1717811558245}
24-06-08.10:02:16.929 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00922061687","timestamp":1717811558349}
24-06-08.10:02:16.931 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"78904428517","timestamp":1717811558360}
24-06-08.10:02:16.933 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"19002208820","timestamp":1717811558382}
24-06-08.10:02:16.935 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"12613353685","timestamp":1717811558391}
24-06-08.10:02:16.937 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"71560576523","timestamp":1717811558399}
24-06-08.10:02:16.939 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"45766513253","timestamp":1717811558407}
24-06-08.10:02:16.941 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"30327525720","timestamp":1717811558420}
24-06-08.10:02:16.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"14288785479","timestamp":1717811558431}
24-06-08.10:02:16.945 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"34389652235","timestamp":1717811558446}
24-06-08.10:02:16.947 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91531823680","timestamp":1717811558457}
24-06-08.10:02:16.949 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"16407564671","timestamp":1717811558474}
24-06-08.10:02:16.950 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00948122978","timestamp":1717811558494}
24-06-08.10:02:16.952 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"79463860216","timestamp":1717811558516}
24-06-08.10:02:16.954 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"60596169421","timestamp":1717811558530}
24-06-08.10:02:16.956 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"98266685356","timestamp":1717811558576}
24-06-08.10:02:16.959 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"75510920627","timestamp":1717811558595}
24-06-08.10:02:16.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"89142378107","timestamp":1717811558612}
24-06-08.10:02:16.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"16040415489","timestamp":1717811558626}
24-06-08.10:02:16.963 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"65930998743","timestamp":1717811558638}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 23 common frames omitted
24-06-08.10:02:16.965 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99785810427","timestamp":1717811558640}
24-06-08.10:02:16.967 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"25910158305","timestamp":1717811606629}
24-06-08.10:02:16.968 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"42064819469","timestamp":1717811606771}
24-06-08.10:02:16.969 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"11667036838","timestamp":1717811606784}
24-06-08.10:02:16.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"99742086668","timestamp":1717811606798}
24-06-08.10:02:16.975 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"39566179547","timestamp":1717811606826}
24-06-08.10:02:16.979 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"97016093218","timestamp":1717811606837}
24-06-08.10:02:16.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"60961460420","timestamp":1717811606852}
24-06-08.10:02:16.983 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"74618837857","timestamp":1717811606875}
24-06-08.10:02:16.987 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"82545756602","timestamp":1717811606912}
24-06-08.10:02:16.990 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"26347416447","timestamp":1717811606946}
24-06-08.10:02:16.995 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"41963176530","timestamp":1717811606968}
24-06-08.10:02:16.999 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"11467377517","timestamp":1717811606986}
24-06-08.10:02:17.002 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"10574997055","timestamp":1717811606999}
24-06-08.10:02:17.007 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"29617037543","timestamp":1717811607010}
24-06-08.10:02:17.012 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"75911183246","timestamp":1717811607026}
24-06-08.10:02:17.018 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"11854641018","timestamp":1717811607039}
24-06-08.10:02:17.022 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"19886192133","timestamp":1717811607080}
24-06-08.10:02:17.025 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"18286111500","timestamp":1717811607096}
24-06-08.10:02:17.028 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"80029585034","timestamp":1717811607113}
24-06-08.10:02:17.029 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"14243296568","timestamp":1717811607137}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 23 common frames omitted
24-06-08.10:02:17.032 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"37231214725","timestamp":1717811607141}
24-06-08.10:02:17.032 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"15494567878","timestamp":1717812134359}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 23 common frames omitted
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Revoke previously assigned partitions matthew-topic-0
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Member consumer-matthew-group-2-0b6c11b7-77c4-4b9c-af15-e96dcb02fa8e sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Member consumer-matthew-group-1-78f92cfa-aacf-4b20-92cf-71fcbbb9ce9c sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:02:17.062 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:02:17.066 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:02:17.066 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:02:17.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:02:17.066 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:02:17.066 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:02:17.067 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:02:17.067 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:02:17.067 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:02:17.067 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:02:17.067 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:02:17.081 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.10:02:17.081 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:02:17.082 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.10:02:17.082 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:02:17.086 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.10:02:17.090 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:02:17.090 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:02:17.090 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.10:02:17.091 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.10:02:27.195 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 10210 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:02:27.196 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:02:27.688 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:02:27.690 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:02:27.709 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
24-06-08.10:02:28.529 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:02:28.569 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:02:28.696 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:02:28.705 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:02:29.779 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:02:29.847 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:02:29.930 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:02:29.930 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:02:29.930 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812149929
24-06-08.10:02:29.942 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:02:29.951 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:02:29.959 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:02:29.959 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:02:29.959 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812149959
24-06-08.10:02:29.963 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:02:29.978 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.057 seconds (JVM running for 3.601)
24-06-08.10:02:30.148 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:02:30.242 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:02:30.242 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:02:30.243 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:02:30.243 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:02:30.245 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:02:30.245 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:02:30.249 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:02:30.249 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:02:30.268 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:02:30.269 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:02:30.269 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:02:30.269 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:02:30.373 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:02:30.408 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.10:02:30.446 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.10:02:30.447 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 170432364821 sku: 9011 outBusinessNo: 1-1341663802
24-06-08.10:02:30.567 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.567 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.567 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.567 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 200475090090 sku: 9011 outBusinessNo: 11705470927
24-06-08.10:02:30.570 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.571 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.571 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.571 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 709084297209 sku: 9011 outBusinessNo: 11884984285
24-06-08.10:02:30.573 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.573 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.573 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.573 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 724279332310 sku: 9011 outBusinessNo: 1-428597237
24-06-08.10:02:30.576 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.577 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.577 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.577 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 179919243775 sku: 9011 outBusinessNo: 1-1692968510
24-06-08.10:02:30.579 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.579 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.579 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.579 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 925793033024 sku: 9011 outBusinessNo: 1370720571
24-06-08.10:02:30.582 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.582 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.582 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.582 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 652939310335 sku: 9011 outBusinessNo: 1-1962520555
24-06-08.10:02:30.585 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.585 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.585 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.585 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 305744389676 sku: 9011 outBusinessNo: 1-1618277659
24-06-08.10:02:30.588 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.588 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.588 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.588 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 428700161245 sku: 9011 outBusinessNo: 1275360467
24-06-08.10:02:30.591 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.591 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.591 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.591 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 243659404802 sku: 9011 outBusinessNo: 11990262700
24-06-08.10:02:30.594 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.594 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.594 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.594 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 725860352946 sku: 9011 outBusinessNo: 1-1991896563
24-06-08.10:02:30.597 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.597 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.597 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.597 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 688687035427 sku: 9011 outBusinessNo: 1-2080762852
24-06-08.10:02:30.602 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.602 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.602 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.602 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 942639087180 sku: 9011 outBusinessNo: 1-1671351698
24-06-08.10:02:30.605 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.605 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.605 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.605 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 365375628914 sku: 9011 outBusinessNo: 1-956405572
24-06-08.10:02:30.608 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.608 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.608 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.608 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 714100828128 sku: 9011 outBusinessNo: 1369421101
24-06-08.10:02:30.613 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.613 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.613 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.614 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 054257472839 sku: 9011 outBusinessNo: 1649029191
24-06-08.10:02:30.617 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.617 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.617 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.617 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 099748773900 sku: 9011 outBusinessNo: 1-1968230702
24-06-08.10:02:30.623 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.623 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.623 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.624 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 112458904535 sku: 9011 outBusinessNo: 1196191560
24-06-08.10:02:30.630 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.630 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.630 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.631 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 013722612709 sku: 9011 outBusinessNo: 11516083789
24-06-08.10:02:30.636 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.636 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.636 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:30.636 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 551166815840 sku: 9011 outBusinessNo: 1164642835
24-06-08.10:02:30.642 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:02:30.642 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:02:30.642 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:02:33.285 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully joined group with generation Generation{generationId=19, memberId='consumer-matthew-group-1-7a9ebcfb-7ddb-4656-96dc-e55450d4f616', protocol='range'}
24-06-08.10:02:33.285 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully joined group with generation Generation{generationId=19, memberId='consumer-matthew-group-2-5d12ade0-eebc-4db4-94c7-581c245c8c1e', protocol='range'}
24-06-08.10:02:33.292 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Finished assignment for group at generation 19: {consumer-matthew-group-2-5d12ade0-eebc-4db4-94c7-581c245c8c1e=Assignment(partitions=[]), consumer-matthew-group-1-7a9ebcfb-7ddb-4656-96dc-e55450d4f616=Assignment(partitions=[matthew-topic-0])}
24-06-08.10:02:33.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully synced group in generation Generation{generationId=19, memberId='consumer-matthew-group-1-7a9ebcfb-7ddb-4656-96dc-e55450d4f616', protocol='range'}
24-06-08.10:02:33.299 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully synced group in generation Generation{generationId=19, memberId='consumer-matthew-group-2-5d12ade0-eebc-4db4-94c7-581c245c8c1e', protocol='range'}
24-06-08.10:02:33.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[matthew-topic-0])
24-06-08.10:02:33.299 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[])
24-06-08.10:02:33.300 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Adding newly assigned partitions: 
24-06-08.10:02:33.300 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: []
24-06-08.10:02:33.302 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Adding newly assigned partitions: matthew-topic-0
24-06-08.10:02:33.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Setting offset for partition matthew-topic-0 to the committed offset FetchPosition{offset=148, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.10:02:33.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: [matthew-topic-0]
24-06-08.10:02:33.356 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"15494567878","timestamp":1717812134359}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 24 common frames omitted
24-06-08.10:02:45.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Revoke previously assigned partitions matthew-topic-0
24-06-08.10:02:45.773 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Member consumer-matthew-group-2-5d12ade0-eebc-4db4-94c7-581c245c8c1e sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:02:45.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.10:02:45.774 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Member consumer-matthew-group-1-7a9ebcfb-7ddb-4656-96dc-e55450d4f616 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:02:45.774 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:02:45.774 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:02:45.774 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:02:45.774 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:02:45.774 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:02:45.774 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:02:45.775 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:02:45.775 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:02:45.775 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:02:45.776 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:02:45.780 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:02:45.780 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:02:45.780 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:02:45.781 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:02:45.781 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:02:45.781 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:02:45.789 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.10:02:45.791 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:02:45.792 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.10:02:45.792 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:03:10.517 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 11133 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:03:10.518 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:03:11.026 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:03:11.028 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:03:11.047 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
24-06-08.10:03:11.873 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:03:11.921 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:03:12.073 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:03:12.084 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:03:13.186 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:03:13.280 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:03:13.350 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:03:13.350 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:03:13.350 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812193349
24-06-08.10:03:13.362 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:03:13.371 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:03:13.377 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:03:13.377 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:03:13.377 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812193377
24-06-08.10:03:13.384 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:03:13.396 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.111 seconds (JVM running for 3.662)
24-06-08.10:03:13.589 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:03:13.675 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:03:13.675 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:03:13.676 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:03:13.676 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:03:13.677 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:03:13.677 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:03:13.681 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:03:13.682 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:03:13.698 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:03:13.698 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:03:13.698 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:03:13.698 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:03:13.837 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:03:13.864 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.10:03:13.902 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.10:03:13.903 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 784219909515 sku: 9011 outBusinessNo: 11848587852
24-06-08.10:03:14.029 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.029 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.029 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.031 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.038 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.10:03:14.038 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.10:03:14.057 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:03:14.058 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:03:14.058 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812194057
24-06-08.10:03:14.070 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:03:14.080 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:03:14.098 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"34885869974","timestamp":1717812194032}
24-06-08.10:03:14.103 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:03:14.124 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:03:14.156 [main            ] INFO  RaffleOrderTest        - 测试结果：606734492347
24-06-08.10:03:14.156 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 448691961214 sku: 9011 outBusinessNo: 1-1801132205
24-06-08.10:03:14.161 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.161 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.161 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.162 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.163 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"50140315671","timestamp":1717812194162}
24-06-08.10:03:14.170 [main            ] INFO  RaffleOrderTest        - 测试结果：583417626717
24-06-08.10:03:14.170 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 552869649778 sku: 9011 outBusinessNo: 1565282558
24-06-08.10:03:14.173 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.173 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.173 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.174 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.174 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"95997387489","timestamp":1717812194174}
24-06-08.10:03:14.181 [main            ] INFO  RaffleOrderTest        - 测试结果：355697599341
24-06-08.10:03:14.181 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 426873803992 sku: 9011 outBusinessNo: 11626183977
24-06-08.10:03:14.185 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.185 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.185 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.186 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.186 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"65886410550","timestamp":1717812194186}
24-06-08.10:03:14.186 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:03:14.194 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:03:14.200 [main            ] INFO  RaffleOrderTest        - 测试结果：487253969389
24-06-08.10:03:14.200 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 964668516141 sku: 9011 outBusinessNo: 11253967587
24-06-08.10:03:14.202 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.202 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.202 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.203 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.203 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"06500493096","timestamp":1717812194203}
24-06-08.10:03:14.208 [main            ] INFO  RaffleOrderTest        - 测试结果：272141692730
24-06-08.10:03:14.208 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 590104206283 sku: 9011 outBusinessNo: 11935710560
24-06-08.10:03:14.211 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.211 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.211 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.213 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.214 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"09193925499","timestamp":1717812194213}
24-06-08.10:03:14.219 [main            ] INFO  RaffleOrderTest        - 测试结果：540809787988
24-06-08.10:03:14.219 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 425386431070 sku: 9011 outBusinessNo: 1-1436387128
24-06-08.10:03:14.221 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.221 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.221 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.222 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.222 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"78083936700","timestamp":1717812194222}
24-06-08.10:03:14.227 [main            ] INFO  RaffleOrderTest        - 测试结果：098666494123
24-06-08.10:03:14.227 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 927056551646 sku: 9011 outBusinessNo: 1-657907564
24-06-08.10:03:14.229 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.229 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.229 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.230 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.230 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"78541089553","timestamp":1717812194230}
24-06-08.10:03:14.236 [main            ] INFO  RaffleOrderTest        - 测试结果：804467378657
24-06-08.10:03:14.236 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 646344279504 sku: 9011 outBusinessNo: 1575867213
24-06-08.10:03:14.239 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.239 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.239 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.239 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.240 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"82400963577","timestamp":1717812194239}
24-06-08.10:03:14.245 [main            ] INFO  RaffleOrderTest        - 测试结果：553759016541
24-06-08.10:03:14.245 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 469165327264 sku: 9011 outBusinessNo: 1-2064314503
24-06-08.10:03:14.247 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.247 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.247 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.247 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.248 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"57568960206","timestamp":1717812194248}
24-06-08.10:03:14.253 [main            ] INFO  RaffleOrderTest        - 测试结果：295282161938
24-06-08.10:03:14.253 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 341309135435 sku: 9011 outBusinessNo: 1-1773905331
24-06-08.10:03:14.255 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.255 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.255 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.256 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.256 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"70172068055","timestamp":1717812194256}
24-06-08.10:03:14.263 [main            ] INFO  RaffleOrderTest        - 测试结果：963847959832
24-06-08.10:03:14.264 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 134942218468 sku: 9011 outBusinessNo: 1-1740173265
24-06-08.10:03:14.267 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.267 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.267 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.268 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.269 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"53824849426","timestamp":1717812194268}
24-06-08.10:03:14.279 [main            ] INFO  RaffleOrderTest        - 测试结果：400535121443
24-06-08.10:03:14.279 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 301960415903 sku: 9011 outBusinessNo: 11827846860
24-06-08.10:03:14.283 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.283 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.283 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.285 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.285 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"83220486168","timestamp":1717812194285}
24-06-08.10:03:14.296 [main            ] INFO  RaffleOrderTest        - 测试结果：588610456593
24-06-08.10:03:14.296 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 529128937672 sku: 9011 outBusinessNo: 1-1634623713
24-06-08.10:03:14.303 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.303 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.303 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.312 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.313 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"06827317861","timestamp":1717812194313}
24-06-08.10:03:14.332 [main            ] INFO  RaffleOrderTest        - 测试结果：643669755758
24-06-08.10:03:14.332 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 542172332270 sku: 9011 outBusinessNo: 1836666110
24-06-08.10:03:14.355 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.356 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.356 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.361 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.362 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"03579809791","timestamp":1717812194361}
24-06-08.10:03:14.373 [main            ] INFO  RaffleOrderTest        - 测试结果：704424092012
24-06-08.10:03:14.373 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 053498245578 sku: 9011 outBusinessNo: 1-1995763594
24-06-08.10:03:14.379 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.379 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.379 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.382 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.382 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"65320476880","timestamp":1717812194382}
24-06-08.10:03:14.391 [main            ] INFO  RaffleOrderTest        - 测试结果：296835296473
24-06-08.10:03:14.391 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 225512853558 sku: 9011 outBusinessNo: 1377006054
24-06-08.10:03:14.395 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.395 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.395 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.397 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.397 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"64791050974","timestamp":1717812194397}
24-06-08.10:03:14.405 [main            ] INFO  RaffleOrderTest        - 测试结果：967073578104
24-06-08.10:03:14.405 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 114190281551 sku: 9011 outBusinessNo: 1352905257
24-06-08.10:03:14.407 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.407 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.407 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.408 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.408 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"35703041165","timestamp":1717812194408}
24-06-08.10:03:14.415 [main            ] INFO  RaffleOrderTest        - 测试结果：521249898239
24-06-08.10:03:14.415 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 828472257392 sku: 9011 outBusinessNo: 1364764271
24-06-08.10:03:14.417 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.417 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.417 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.418 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.419 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"74191592302","timestamp":1717812194418}
24-06-08.10:03:14.426 [main            ] INFO  RaffleOrderTest        - 测试结果：892568335485
24-06-08.10:03:14.426 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 292716234074 sku: 9011 outBusinessNo: 1-1818782471
24-06-08.10:03:14.428 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:03:14.428 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:03:14.428 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:03:14.429 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":9011,"id":"96441677784","timestamp":1717812194428}
24-06-08.10:03:14.430 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:03:14.430 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"74384599286","timestamp":1717812194430}
24-06-08.10:03:14.436 [main            ] INFO  RaffleOrderTest        - 测试结果：294515492887
24-06-08.10:03:16.708 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully joined group with generation Generation{generationId=21, memberId='consumer-matthew-group-1-6c430ff5-f972-402a-b807-592f25246f00', protocol='range'}
24-06-08.10:03:16.708 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully joined group with generation Generation{generationId=21, memberId='consumer-matthew-group-2-f86e920d-a8e4-499f-b05c-ee1066082fa7', protocol='range'}
24-06-08.10:03:16.714 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Finished assignment for group at generation 21: {consumer-matthew-group-1-6c430ff5-f972-402a-b807-592f25246f00=Assignment(partitions=[matthew-topic-0]), consumer-matthew-group-2-f86e920d-a8e4-499f-b05c-ee1066082fa7=Assignment(partitions=[])}
24-06-08.10:03:16.723 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully synced group in generation Generation{generationId=21, memberId='consumer-matthew-group-2-f86e920d-a8e4-499f-b05c-ee1066082fa7', protocol='range'}
24-06-08.10:03:16.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully synced group in generation Generation{generationId=21, memberId='consumer-matthew-group-1-6c430ff5-f972-402a-b807-592f25246f00', protocol='range'}
24-06-08.10:03:16.724 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[])
24-06-08.10:03:16.724 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[matthew-topic-0])
24-06-08.10:03:16.724 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Adding newly assigned partitions: 
24-06-08.10:03:16.726 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: []
24-06-08.10:03:16.728 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Adding newly assigned partitions: matthew-topic-0
24-06-08.10:03:16.738 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Setting offset for partition matthew-topic-0 to the committed offset FetchPosition{offset=148, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.10:03:16.738 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: [matthew-topic-0]
24-06-08.10:03:16.786 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"15494567878","timestamp":1717812134359}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 24 common frames omitted
24-06-08.10:03:16.798 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"34885869974","timestamp":1717812194032}
24-06-08.10:03:16.804 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"50140315671","timestamp":1717812194162}
24-06-08.10:03:16.809 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"95997387489","timestamp":1717812194174}
24-06-08.10:03:16.813 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"65886410550","timestamp":1717812194186}
24-06-08.10:03:16.817 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"06500493096","timestamp":1717812194203}
24-06-08.10:03:16.822 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"09193925499","timestamp":1717812194213}
24-06-08.10:03:16.825 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"78083936700","timestamp":1717812194222}
24-06-08.10:03:16.829 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"78541089553","timestamp":1717812194230}
24-06-08.10:03:16.832 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"82400963577","timestamp":1717812194239}
24-06-08.10:03:16.835 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"57568960206","timestamp":1717812194248}
24-06-08.10:03:16.837 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"70172068055","timestamp":1717812194256}
24-06-08.10:03:16.840 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"53824849426","timestamp":1717812194268}
24-06-08.10:03:16.843 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"83220486168","timestamp":1717812194285}
24-06-08.10:03:16.846 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"06827317861","timestamp":1717812194313}
24-06-08.10:03:16.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"03579809791","timestamp":1717812194361}
24-06-08.10:03:16.852 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"65320476880","timestamp":1717812194382}
24-06-08.10:03:16.854 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"64791050974","timestamp":1717812194397}
24-06-08.10:03:16.857 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"35703041165","timestamp":1717812194408}
24-06-08.10:03:16.859 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"74191592302","timestamp":1717812194418}
24-06-08.10:03:16.860 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"96441677784","timestamp":1717812194428}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 23 common frames omitted
24-06-08.10:03:16.863 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"74384599286","timestamp":1717812194430}
24-06-08.10:07:04.843 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Member consumer-matthew-group-2-f86e920d-a8e4-499f-b05c-ee1066082fa7 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:07:04.844 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:07:04.844 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:07:04.844 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:07:04.844 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Revoke previously assigned partitions matthew-topic-0
24-06-08.10:07:04.845 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.10:07:04.845 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Member consumer-matthew-group-1-6c430ff5-f972-402a-b807-592f25246f00 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:07:04.845 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:07:04.845 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:07:04.845 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:07:04.848 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:07:04.848 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:07:04.853 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:07:04.853 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:07:04.853 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:07:04.853 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:07:04.854 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:07:04.858 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:07:04.858 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:07:04.858 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:07:04.858 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.10:07:04.858 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:07:04.860 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.10:07:04.860 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:07:04.863 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.10:07:04.865 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:07:04.865 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:07:04.865 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.10:07:04.865 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.10:07:11.737 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 16263 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:07:11.738 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:07:12.234 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:07:12.236 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:07:12.255 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
24-06-08.10:07:13.111 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:07:13.156 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:07:13.283 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:07:13.291 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:07:14.392 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:07:14.476 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:07:14.543 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:07:14.543 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:07:14.543 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812434542
24-06-08.10:07:14.556 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:07:14.565 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:07:14.569 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:07:14.569 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:07:14.569 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812434569
24-06-08.10:07:14.576 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:07:14.587 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.089 seconds (JVM running for 3.525)
24-06-08.10:07:14.780 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:07:14.867 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:07:14.867 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:07:14.869 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:07:14.869 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:07:14.870 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:07:14.870 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:07:14.874 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:07:14.874 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:07:14.889 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:07:14.889 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:07:14.889 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:07:14.889 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:07:15.017 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:07:15.060 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.10:07:15.095 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.10:07:15.096 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 297608052037 sku: 9011 outBusinessNo: 1-2108391076
24-06-08.10:07:15.203 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.203 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.204 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.204 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 334370156083 sku: 9011 outBusinessNo: 1102020690
24-06-08.10:07:15.208 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.208 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.208 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.208 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 989768936545 sku: 9011 outBusinessNo: 1664987366
24-06-08.10:07:15.211 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.212 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.212 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.212 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 465454500005 sku: 9011 outBusinessNo: 11517116791
24-06-08.10:07:15.215 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.215 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.215 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.215 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 924967245495 sku: 9011 outBusinessNo: 1-1562342738
24-06-08.10:07:15.218 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.218 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.218 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.218 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 034892102092 sku: 9011 outBusinessNo: 1-74935392
24-06-08.10:07:15.222 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.222 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.222 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.222 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 597057709721 sku: 9011 outBusinessNo: 11482040592
24-06-08.10:07:15.225 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.225 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.226 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.226 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 662565078194 sku: 9011 outBusinessNo: 12145488244
24-06-08.10:07:15.229 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.229 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.229 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.229 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 170017358984 sku: 9011 outBusinessNo: 180507801
24-06-08.10:07:15.234 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.234 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.234 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.234 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 488759031554 sku: 9011 outBusinessNo: 1-1537123624
24-06-08.10:07:15.241 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.241 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.241 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.241 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 968236103245 sku: 9011 outBusinessNo: 1-2063191799
24-06-08.10:07:15.246 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.246 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.246 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.246 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 088562874542 sku: 9011 outBusinessNo: 1-670271303
24-06-08.10:07:15.251 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.251 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.252 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.252 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 646323041380 sku: 9011 outBusinessNo: 1-1436086540
24-06-08.10:07:15.268 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.268 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.268 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.268 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 318216560574 sku: 9011 outBusinessNo: 11058454563
24-06-08.10:07:15.274 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.274 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.274 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.274 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 823127229990 sku: 9011 outBusinessNo: 12014183438
24-06-08.10:07:15.279 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.279 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.279 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.279 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 046890273268 sku: 9011 outBusinessNo: 1-437591850
24-06-08.10:07:15.283 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.283 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.283 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.283 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 866765969510 sku: 9011 outBusinessNo: 1-1131796488
24-06-08.10:07:15.286 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.286 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.286 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.286 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 016847152459 sku: 9011 outBusinessNo: 1477280978
24-06-08.10:07:15.290 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.290 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.291 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.291 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 401350968767 sku: 9011 outBusinessNo: 1-869003843
24-06-08.10:07:15.295 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.295 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.295 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:15.296 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 051344354116 sku: 9011 outBusinessNo: 1-2043707033
24-06-08.10:07:15.299 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":0} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:15.299 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:15.299 [main            ] WARN  RaffleOrderTest        - 活动库存不足
24-06-08.10:07:17.897 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully joined group with generation Generation{generationId=23, memberId='consumer-matthew-group-2-e981c2ba-c774-4dd8-8599-5544a9e36b27', protocol='range'}
24-06-08.10:07:17.897 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully joined group with generation Generation{generationId=23, memberId='consumer-matthew-group-1-866361d4-f3fc-4102-960a-ce2741ffd55c', protocol='range'}
24-06-08.10:07:17.903 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Finished assignment for group at generation 23: {consumer-matthew-group-1-866361d4-f3fc-4102-960a-ce2741ffd55c=Assignment(partitions=[matthew-topic-0]), consumer-matthew-group-2-e981c2ba-c774-4dd8-8599-5544a9e36b27=Assignment(partitions=[])}
24-06-08.10:07:17.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully synced group in generation Generation{generationId=23, memberId='consumer-matthew-group-1-866361d4-f3fc-4102-960a-ce2741ffd55c', protocol='range'}
24-06-08.10:07:17.912 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully synced group in generation Generation{generationId=23, memberId='consumer-matthew-group-2-e981c2ba-c774-4dd8-8599-5544a9e36b27', protocol='range'}
24-06-08.10:07:17.913 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[])
24-06-08.10:07:17.913 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[matthew-topic-0])
24-06-08.10:07:17.913 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Adding newly assigned partitions: 
24-06-08.10:07:17.915 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: []
24-06-08.10:07:17.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Adding newly assigned partitions: matthew-topic-0
24-06-08.10:07:17.926 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Setting offset for partition matthew-topic-0 to the committed offset FetchPosition{offset=170, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.10:07:17.927 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: [matthew-topic-0]
24-06-08.10:07:31.703 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Member consumer-matthew-group-2-e981c2ba-c774-4dd8-8599-5544a9e36b27 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:07:31.703 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Revoke previously assigned partitions matthew-topic-0
24-06-08.10:07:31.704 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:07:31.704 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:07:31.704 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:07:31.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.10:07:31.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Member consumer-matthew-group-1-866361d4-f3fc-4102-960a-ce2741ffd55c sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:07:31.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:07:31.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:07:31.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:07:31.705 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:07:31.705 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:07:31.705 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:07:31.705 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:07:31.707 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:07:31.707 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:07:31.707 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:07:31.712 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:07:31.712 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:07:31.712 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:07:31.714 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.10:07:31.714 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:07:31.717 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.10:07:31.717 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:07:41.659 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 16907 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:07:41.659 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:07:42.184 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:07:42.187 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:07:42.208 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
24-06-08.10:07:43.137 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:07:43.182 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:07:43.309 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:07:43.317 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:07:44.433 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:07:44.510 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:07:44.581 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:07:44.581 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:07:44.582 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812464581
24-06-08.10:07:44.593 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:07:44.603 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:07:44.611 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:07:44.611 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:07:44.611 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812464611
24-06-08.10:07:44.618 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:07:44.638 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.198 seconds (JVM running for 3.654)
24-06-08.10:07:44.806 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:07:44.881 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:07:44.881 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:07:44.882 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:07:44.882 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:07:44.883 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:07:44.883 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:07:44.886 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:07:44.886 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:07:44.900 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:07:44.901 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:07:44.901 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:07:44.901 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:07:45.017 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:07:45.049 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.10:07:45.094 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.10:07:45.095 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 639680157415 sku: 9011 outBusinessNo: 12020955282
24-06-08.10:07:45.203 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.203 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.203 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.205 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.213 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.10:07:45.213 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.10:07:45.231 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:07:45.231 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:07:45.231 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717812465231
24-06-08.10:07:45.246 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:07:45.259 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:07:45.279 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"23112475279","timestamp":1717812465206}
24-06-08.10:07:45.281 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:07:45.298 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:07:45.325 [main            ] INFO  RaffleOrderTest        - 测试结果：401847384676
24-06-08.10:07:45.325 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 410652044701 sku: 9011 outBusinessNo: 11862474305
24-06-08.10:07:45.330 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.330 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.330 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.331 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.332 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"00447588755","timestamp":1717812465331}
24-06-08.10:07:45.342 [main            ] INFO  RaffleOrderTest        - 测试结果：254138938983
24-06-08.10:07:45.342 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 485501760107 sku: 9011 outBusinessNo: 1-2081852913
24-06-08.10:07:45.345 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.345 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.345 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.346 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.346 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"98657711472","timestamp":1717812465346}
24-06-08.10:07:45.346 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:07:45.357 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:07:45.365 [main            ] INFO  RaffleOrderTest        - 测试结果：974716959380
24-06-08.10:07:45.365 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 773775732710 sku: 9011 outBusinessNo: 1-1618477728
24-06-08.10:07:45.368 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.368 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.368 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.369 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.369 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"51456703746","timestamp":1717812465369}
24-06-08.10:07:45.375 [main            ] INFO  RaffleOrderTest        - 测试结果：912116492226
24-06-08.10:07:45.375 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 159632762982 sku: 9011 outBusinessNo: 11877882292
24-06-08.10:07:45.378 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.378 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.378 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.379 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.379 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"90184206026","timestamp":1717812465379}
24-06-08.10:07:45.386 [main            ] INFO  RaffleOrderTest        - 测试结果：744586986732
24-06-08.10:07:45.386 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 361689554024 sku: 9011 outBusinessNo: 1-27252188
24-06-08.10:07:45.388 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.388 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.388 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.389 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.389 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"49069162531","timestamp":1717812465389}
24-06-08.10:07:45.394 [main            ] INFO  RaffleOrderTest        - 测试结果：243268997000
24-06-08.10:07:45.394 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 852000971331 sku: 9011 outBusinessNo: 1-918844241
24-06-08.10:07:45.396 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.396 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.396 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.397 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.397 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"60592601393","timestamp":1717812465397}
24-06-08.10:07:45.402 [main            ] INFO  RaffleOrderTest        - 测试结果：806611322564
24-06-08.10:07:45.402 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 184245963013 sku: 9011 outBusinessNo: 1-1273618452
24-06-08.10:07:45.404 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.404 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.404 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.405 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.405 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"97456821747","timestamp":1717812465405}
24-06-08.10:07:45.412 [main            ] INFO  RaffleOrderTest        - 测试结果：557375410582
24-06-08.10:07:45.412 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 623720915318 sku: 9011 outBusinessNo: 11433100289
24-06-08.10:07:45.415 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.415 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.415 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.417 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.417 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"19406766780","timestamp":1717812465417}
24-06-08.10:07:45.423 [main            ] INFO  RaffleOrderTest        - 测试结果：982432501241
24-06-08.10:07:45.423 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 863089937556 sku: 9011 outBusinessNo: 1-1717875927
24-06-08.10:07:45.428 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.428 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.428 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.429 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.429 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"77101253534","timestamp":1717812465429}
24-06-08.10:07:45.437 [main            ] INFO  RaffleOrderTest        - 测试结果：204001629613
24-06-08.10:07:45.437 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 606106011248 sku: 9011 outBusinessNo: 11179684894
24-06-08.10:07:45.441 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.441 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.441 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.443 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.444 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"12213677422","timestamp":1717812465443}
24-06-08.10:07:45.454 [main            ] INFO  RaffleOrderTest        - 测试结果：044380634169
24-06-08.10:07:45.455 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 995491790146 sku: 9011 outBusinessNo: 11381673762
24-06-08.10:07:45.464 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.464 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.464 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.475 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.475 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"20229771617","timestamp":1717812465475}
24-06-08.10:07:45.492 [main            ] INFO  RaffleOrderTest        - 测试结果：075951075091
24-06-08.10:07:45.492 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 555980627240 sku: 9011 outBusinessNo: 11608024871
24-06-08.10:07:45.496 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.497 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.497 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.499 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.499 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"53925128141","timestamp":1717812465499}
24-06-08.10:07:45.519 [main            ] INFO  RaffleOrderTest        - 测试结果：570878815091
24-06-08.10:07:45.519 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 962245650722 sku: 9011 outBusinessNo: 1210821081
24-06-08.10:07:45.528 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.528 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.528 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.533 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.534 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"52977212352","timestamp":1717812465534}
24-06-08.10:07:45.548 [main            ] INFO  RaffleOrderTest        - 测试结果：696280126510
24-06-08.10:07:45.549 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 015441473572 sku: 9011 outBusinessNo: 11356537111
24-06-08.10:07:45.559 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.559 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.559 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.560 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.561 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"27161270300","timestamp":1717812465561}
24-06-08.10:07:45.570 [main            ] INFO  RaffleOrderTest        - 测试结果：186656735443
24-06-08.10:07:45.570 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 673889041275 sku: 9011 outBusinessNo: 11703938101
24-06-08.10:07:45.574 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.574 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.574 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.576 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.576 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"91325927937","timestamp":1717812465576}
24-06-08.10:07:45.588 [main            ] INFO  RaffleOrderTest        - 测试结果：876742908575
24-06-08.10:07:45.588 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 954659936389 sku: 9011 outBusinessNo: 1-2078884221
24-06-08.10:07:45.591 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.591 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.591 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.592 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.593 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"63225042278","timestamp":1717812465592}
24-06-08.10:07:45.598 [main            ] INFO  RaffleOrderTest        - 测试结果：371092956337
24-06-08.10:07:45.598 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 096185735457 sku: 9011 outBusinessNo: 1510742543
24-06-08.10:07:45.600 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.600 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.600 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.602 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.602 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"35395724089","timestamp":1717812465602}
24-06-08.10:07:45.609 [main            ] INFO  RaffleOrderTest        - 测试结果：621712063784
24-06-08.10:07:45.609 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 480842637273 sku: 9011 outBusinessNo: 1-1045100713
24-06-08.10:07:45.613 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.613 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.613 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.614 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.615 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"07138646110","timestamp":1717812465614}
24-06-08.10:07:45.622 [main            ] INFO  RaffleOrderTest        - 测试结果：252298963028
24-06-08.10:07:45.622 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 635771923058 sku: 9011 outBusinessNo: 11103143076
24-06-08.10:07:45.624 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:07:45.625 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:07:45.625 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:07:45.626 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":9011,"id":"80237448000","timestamp":1717812465625}
24-06-08.10:07:45.628 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:07:45.628 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"72424559580","timestamp":1717812465628}
24-06-08.10:07:45.635 [main            ] INFO  RaffleOrderTest        - 测试结果：808079146576
24-06-08.10:07:47.907 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully joined group with generation Generation{generationId=25, memberId='consumer-matthew-group-1-8da5b77b-1777-4f7c-857b-09d2b9dd778f', protocol='range'}
24-06-08.10:07:47.907 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully joined group with generation Generation{generationId=25, memberId='consumer-matthew-group-2-ddbf0d0c-1c59-4963-b335-d442097bd811', protocol='range'}
24-06-08.10:07:47.911 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Finished assignment for group at generation 25: {consumer-matthew-group-2-ddbf0d0c-1c59-4963-b335-d442097bd811=Assignment(partitions=[]), consumer-matthew-group-1-8da5b77b-1777-4f7c-857b-09d2b9dd778f=Assignment(partitions=[matthew-topic-0])}
24-06-08.10:07:47.916 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully synced group in generation Generation{generationId=25, memberId='consumer-matthew-group-1-8da5b77b-1777-4f7c-857b-09d2b9dd778f', protocol='range'}
24-06-08.10:07:47.916 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully synced group in generation Generation{generationId=25, memberId='consumer-matthew-group-2-ddbf0d0c-1c59-4963-b335-d442097bd811', protocol='range'}
24-06-08.10:07:47.916 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[])
24-06-08.10:07:47.916 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[matthew-topic-0])
24-06-08.10:07:47.916 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Adding newly assigned partitions: 
24-06-08.10:07:47.917 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: []
24-06-08.10:07:47.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Adding newly assigned partitions: matthew-topic-0
24-06-08.10:07:47.925 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Setting offset for partition matthew-topic-0 to the committed offset FetchPosition{offset=170, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.10:07:47.925 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: [matthew-topic-0]
24-06-08.10:07:47.976 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"23112475279","timestamp":1717812465206}
24-06-08.10:07:47.979 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00447588755","timestamp":1717812465331}
24-06-08.10:07:47.982 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"98657711472","timestamp":1717812465346}
24-06-08.10:07:47.984 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"51456703746","timestamp":1717812465369}
24-06-08.10:07:47.985 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"90184206026","timestamp":1717812465379}
24-06-08.10:07:47.987 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"49069162531","timestamp":1717812465389}
24-06-08.10:07:47.990 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"60592601393","timestamp":1717812465397}
24-06-08.10:07:47.992 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"97456821747","timestamp":1717812465405}
24-06-08.10:07:47.994 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"19406766780","timestamp":1717812465417}
24-06-08.10:07:47.997 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"77101253534","timestamp":1717812465429}
24-06-08.10:07:47.999 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"12213677422","timestamp":1717812465443}
24-06-08.10:07:48.001 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"20229771617","timestamp":1717812465475}
24-06-08.10:07:48.003 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"53925128141","timestamp":1717812465499}
24-06-08.10:07:48.005 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"52977212352","timestamp":1717812465534}
24-06-08.10:07:48.007 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"27161270300","timestamp":1717812465561}
24-06-08.10:07:48.010 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91325927937","timestamp":1717812465576}
24-06-08.10:07:48.011 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"63225042278","timestamp":1717812465592}
24-06-08.10:07:48.013 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"35395724089","timestamp":1717812465602}
24-06-08.10:07:48.015 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"07138646110","timestamp":1717812465614}
24-06-08.10:07:48.017 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"80237448000","timestamp":1717812465625}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.topic_test(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 23 common frames omitted
24-06-08.10:07:48.019 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"72424559580","timestamp":1717812465628}
24-06-08.10:16:44.967 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Node -1 disconnected.
24-06-08.10:16:45.092 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Node -1 disconnected.
24-06-08.10:16:45.259 [kafka-producer-network-thread | producer-1] INFO  NetworkClient          - [Producer clientId=producer-1] Node -1 disconnected.
24-06-08.10:22:40.045 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Member consumer-matthew-group-2-ddbf0d0c-1c59-4963-b335-d442097bd811 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:22:40.045 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Revoke previously assigned partitions matthew-topic-0
24-06-08.10:22:40.045 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.10:22:40.046 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:22:40.046 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:22:40.046 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:22:40.046 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Member consumer-matthew-group-1-8da5b77b-1777-4f7c-857b-09d2b9dd778f sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:22:40.046 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:22:40.046 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:22:40.046 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:22:40.061 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:22:40.061 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:22:40.063 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:22:40.063 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:22:40.063 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:22:40.063 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:22:40.064 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:22:40.064 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:22:40.064 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:22:40.064 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:22:40.072 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.10:22:40.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.10:22:40.073 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:22:40.073 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:22:40.083 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.10:22:40.087 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:22:40.087 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:22:40.087 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.10:22:40.087 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.10:22:52.217 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 36296 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:22:52.217 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:22:52.918 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:22:52.920 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:22:52.946 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
24-06-08.10:22:54.063 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:22:54.112 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:22:54.244 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:22:54.258 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:22:55.511 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:22:55.585 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:22:55.695 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:22:55.695 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:22:55.695 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717813375694
24-06-08.10:22:55.713 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:22:55.732 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:22:55.741 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:22:55.741 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:22:55.742 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717813375741
24-06-08.10:22:55.752 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:22:55.787 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.901 seconds (JVM running for 4.621)
24-06-08.10:22:56.001 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:22:56.055 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:22:56.055 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:22:56.055 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:22:56.055 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:22:56.055 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:22:56.055 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:22:56.057 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:22:56.057 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:22:56.059 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:22:56.060 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:22:56.061 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:22:56.061 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:22:56.061 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:22:56.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:22:56.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:22:56.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:22:56.070 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.10:22:56.070 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:22:56.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.10:22:56.073 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:23:11.450 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 36723 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:23:11.451 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:23:12.516 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:23:12.518 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:23:12.545 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
24-06-08.10:23:13.469 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:23:13.511 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:23:13.635 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:23:13.644 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:23:15.013 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:23:15.108 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:23:15.237 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:23:15.239 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:23:15.239 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717813395235
24-06-08.10:23:15.281 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:23:15.298 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-matthew-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = matthew-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:23:15.336 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:23:15.336 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:23:15.336 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717813395336
24-06-08.10:23:15.346 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Subscribed to topic(s): matthew-topic
24-06-08.10:23:15.364 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 4.135 seconds (JVM running for 4.81)
24-06-08.10:23:15.556 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:23:15.643 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:23:15.643 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:23:15.644 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:23:15.644 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:23:15.645 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:23:15.645 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:23:15.650 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:23:15.650 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:23:15.670 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:23:15.671 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:23:15.671 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] (Re-)joining group
24-06-08.10:23:15.671 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] (Re-)joining group
24-06-08.10:23:15.837 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:23:15.865 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.10:23:15.905 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.10:23:15.907 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 476828091552 sku: 9011 outBusinessNo: 11423491972
24-06-08.10:23:16.077 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.077 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.077 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.082 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.102 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.10:23:16.102 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.10:23:16.130 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:23:16.130 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:23:16.130 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717813396130
24-06-08.10:23:16.137 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:23:16.146 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition matthew-topic-0 to 0 since the associated topicId changed from null to EDAxDyEwSDCWXg5fa2bdCQ
24-06-08.10:23:16.163 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"83971955192","timestamp":1717813396084}
24-06-08.10:23:16.166 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:23:16.190 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:23:16.231 [main            ] INFO  RaffleOrderTest        - 测试结果：300381048857
24-06-08.10:23:16.231 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 549729740226 sku: 9011 outBusinessNo: 1-76961440
24-06-08.10:23:16.235 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.235 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.235 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.236 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.237 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"17943112954","timestamp":1717813396237}
24-06-08.10:23:16.237 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:23:16.250 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:23:16.262 [main            ] INFO  RaffleOrderTest        - 测试结果：605373391695
24-06-08.10:23:16.262 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 019938470197 sku: 9011 outBusinessNo: 1-2111333002
24-06-08.10:23:16.266 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.267 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.267 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.268 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.269 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"02092766268","timestamp":1717813396268}
24-06-08.10:23:16.278 [main            ] INFO  RaffleOrderTest        - 测试结果：752687102047
24-06-08.10:23:16.278 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 957450459135 sku: 9011 outBusinessNo: 12140448731
24-06-08.10:23:16.283 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.283 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.283 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.285 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.286 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"59105590782","timestamp":1717813396286}
24-06-08.10:23:16.295 [main            ] INFO  RaffleOrderTest        - 测试结果：199661061229
24-06-08.10:23:16.296 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 669664637751 sku: 9011 outBusinessNo: 1-66194359
24-06-08.10:23:16.301 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.301 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.301 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.303 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.304 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"44024464951","timestamp":1717813396304}
24-06-08.10:23:16.313 [main            ] INFO  RaffleOrderTest        - 测试结果：372581237546
24-06-08.10:23:16.313 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 289882980992 sku: 9011 outBusinessNo: 1488536513
24-06-08.10:23:16.317 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.318 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.318 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.319 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.320 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"76844155560","timestamp":1717813396320}
24-06-08.10:23:16.334 [main            ] INFO  RaffleOrderTest        - 测试结果：061633105856
24-06-08.10:23:16.335 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 026059766514 sku: 9011 outBusinessNo: 1-1043686305
24-06-08.10:23:16.344 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.344 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.344 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.347 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.347 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"06494235621","timestamp":1717813396347}
24-06-08.10:23:16.368 [main            ] INFO  RaffleOrderTest        - 测试结果：340097093563
24-06-08.10:23:16.368 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 109356013566 sku: 9011 outBusinessNo: 11381207606
24-06-08.10:23:16.378 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.378 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.378 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.387 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.388 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"62820327698","timestamp":1717813396388}
24-06-08.10:23:16.409 [main            ] INFO  RaffleOrderTest        - 测试结果：005206415117
24-06-08.10:23:16.410 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 700256945995 sku: 9011 outBusinessNo: 1-599842929
24-06-08.10:23:16.418 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.418 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.418 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.421 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.421 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"50109128586","timestamp":1717813396421}
24-06-08.10:23:16.432 [main            ] INFO  RaffleOrderTest        - 测试结果：170490268839
24-06-08.10:23:16.433 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 044397341850 sku: 9011 outBusinessNo: 11159410732
24-06-08.10:23:16.436 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.436 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.436 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.438 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.438 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"41332993722","timestamp":1717813396438}
24-06-08.10:23:16.449 [main            ] INFO  RaffleOrderTest        - 测试结果：653731793199
24-06-08.10:23:16.449 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 797601702365 sku: 9011 outBusinessNo: 1-957143059
24-06-08.10:23:16.454 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.454 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.454 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.456 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.456 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"91179236647","timestamp":1717813396456}
24-06-08.10:23:16.465 [main            ] INFO  RaffleOrderTest        - 测试结果：382848643485
24-06-08.10:23:16.465 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 740649018887 sku: 9011 outBusinessNo: 11841227904
24-06-08.10:23:16.470 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.470 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.470 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.473 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.473 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"30152778628","timestamp":1717813396473}
24-06-08.10:23:16.482 [main            ] INFO  RaffleOrderTest        - 测试结果：792020201818
24-06-08.10:23:16.482 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 393943697692 sku: 9011 outBusinessNo: 11960066668
24-06-08.10:23:16.486 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.486 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.486 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.487 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.488 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"69658745221","timestamp":1717813396487}
24-06-08.10:23:16.498 [main            ] INFO  RaffleOrderTest        - 测试结果：115126088578
24-06-08.10:23:16.498 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 455812961038 sku: 9011 outBusinessNo: 1-904911142
24-06-08.10:23:16.501 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.501 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.502 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.504 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.504 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"82591736269","timestamp":1717813396504}
24-06-08.10:23:16.514 [main            ] INFO  RaffleOrderTest        - 测试结果：912752264798
24-06-08.10:23:16.514 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 828296351964 sku: 9011 outBusinessNo: 1-1368107461
24-06-08.10:23:16.520 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.520 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.520 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.522 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.522 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"44662480605","timestamp":1717813396522}
24-06-08.10:23:16.538 [main            ] INFO  RaffleOrderTest        - 测试结果：527047785095
24-06-08.10:23:16.538 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 174624783105 sku: 9011 outBusinessNo: 1-1926602440
24-06-08.10:23:16.543 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.543 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.543 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.545 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.546 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"49528022402","timestamp":1717813396545}
24-06-08.10:23:16.558 [main            ] INFO  RaffleOrderTest        - 测试结果：088667494457
24-06-08.10:23:16.559 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 243783963044 sku: 9011 outBusinessNo: 1-1633313896
24-06-08.10:23:16.573 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.573 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.573 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.578 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.578 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"02940110234","timestamp":1717813396578}
24-06-08.10:23:16.588 [main            ] INFO  RaffleOrderTest        - 测试结果：198810299792
24-06-08.10:23:16.588 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 541319486701 sku: 9011 outBusinessNo: 1-1516084431
24-06-08.10:23:16.593 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.593 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.593 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.595 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.596 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"92704309764","timestamp":1717813396595}
24-06-08.10:23:16.608 [main            ] INFO  RaffleOrderTest        - 测试结果：513863351411
24-06-08.10:23:16.608 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 424142876288 sku: 9011 outBusinessNo: 131449702
24-06-08.10:23:16.614 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.614 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.614 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.618 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.619 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"17918034705","timestamp":1717813396619}
24-06-08.10:23:16.625 [main            ] INFO  RaffleOrderTest        - 测试结果：428173717596
24-06-08.10:23:16.625 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 934451495686 sku: 9011 outBusinessNo: 1-475388695
24-06-08.10:23:16.627 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:23:16.627 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:23:16.627 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:23:16.628 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":9011,"id":"35647362967","timestamp":1717813396627}
24-06-08.10:23:16.629 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:23:16.631 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:matthew-topic message:{"data":{"activityId":100301,"sku":9011},"id":"79311865267","timestamp":1717813396630}
24-06-08.10:23:16.634 [main            ] INFO  RaffleOrderTest        - 测试结果：645859242702
24-06-08.10:23:18.678 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully joined group with generation Generation{generationId=27, memberId='consumer-matthew-group-2-e689d858-b926-4d6d-8753-5534b8dc96be', protocol='range'}
24-06-08.10:23:18.678 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully joined group with generation Generation{generationId=27, memberId='consumer-matthew-group-1-2b87ac33-59ac-49b7-81cf-b06d59ff3ca1', protocol='range'}
24-06-08.10:23:18.682 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Finished assignment for group at generation 27: {consumer-matthew-group-1-2b87ac33-59ac-49b7-81cf-b06d59ff3ca1=Assignment(partitions=[matthew-topic-0]), consumer-matthew-group-2-e689d858-b926-4d6d-8753-5534b8dc96be=Assignment(partitions=[])}
24-06-08.10:23:18.689 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Successfully synced group in generation Generation{generationId=27, memberId='consumer-matthew-group-1-2b87ac33-59ac-49b7-81cf-b06d59ff3ca1', protocol='range'}
24-06-08.10:23:18.689 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Successfully synced group in generation Generation{generationId=27, memberId='consumer-matthew-group-2-e689d858-b926-4d6d-8753-5534b8dc96be', protocol='range'}
24-06-08.10:23:18.689 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[])
24-06-08.10:23:18.689 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Notifying assignor about the new Assignment(partitions=[matthew-topic-0])
24-06-08.10:23:18.689 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Adding newly assigned partitions: 
24-06-08.10:23:18.690 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: []
24-06-08.10:23:18.691 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Adding newly assigned partitions: matthew-topic-0
24-06-08.10:23:18.696 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Setting offset for partition matthew-topic-0 to the committed offset FetchPosition{offset=191, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.10:23:18.697 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions assigned: [matthew-topic-0]
24-06-08.10:23:18.747 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"83971955192","timestamp":1717813396084}
24-06-08.10:23:18.752 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"17943112954","timestamp":1717813396237}
24-06-08.10:23:18.758 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"02092766268","timestamp":1717813396268}
24-06-08.10:23:18.761 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"59105590782","timestamp":1717813396286}
24-06-08.10:23:18.764 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"44024464951","timestamp":1717813396304}
24-06-08.10:23:18.767 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"76844155560","timestamp":1717813396320}
24-06-08.10:23:18.770 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"06494235621","timestamp":1717813396347}
24-06-08.10:23:18.773 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"62820327698","timestamp":1717813396388}
24-06-08.10:23:18.776 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"50109128586","timestamp":1717813396421}
24-06-08.10:23:18.778 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"41332993722","timestamp":1717813396438}
24-06-08.10:23:18.781 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91179236647","timestamp":1717813396456}
24-06-08.10:23:18.785 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"30152778628","timestamp":1717813396473}
24-06-08.10:23:18.787 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"69658745221","timestamp":1717813396487}
24-06-08.10:23:18.789 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"82591736269","timestamp":1717813396504}
24-06-08.10:23:18.791 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"44662480605","timestamp":1717813396522}
24-06-08.10:23:18.794 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"49528022402","timestamp":1717813396545}
24-06-08.10:23:18.797 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"02940110234","timestamp":1717813396578}
24-06-08.10:23:18.799 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"92704309764","timestamp":1717813396595}
24-06-08.10:23:18.801 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"17918034705","timestamp":1717813396619}
24-06-08.10:23:18.803 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费失败！Topic:matthew-topic,Message:{"data":9011,"id":"35647362967","timestamp":1717813396627}
com.alibaba.fastjson.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:574)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.matthew.trigger.listener.ActivitySkuStockConsumeMessageListener.consumeActivitySkuStockMessage(ActivitySkuStockConsumeMessageListener.java:32)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
Caused by: com.alibaba.fastjson2.JSONException: error, offset 13, char ,
	at com.alibaba.fastjson2.JSONReaderUTF16.skipValue(JSONReaderUTF16.java:4089)
	at com.alibaba.fastjson2.reader.ObjectReaderBean.processExtra(ObjectReaderBean.java:117)
	at com.alibaba.fastjson2.reader.ORG_2_2_ActivitySkuStockKeyVO.readObject(Unknown Source)
	at com.alibaba.fastjson2.reader.ORG_1_3_EventMessage.readObject(Unknown Source)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:564)
	... 23 common frames omitted
24-06-08.10:23:18.806 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:matthew-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"79311865267","timestamp":1717813396630}
24-06-08.10:32:15.710 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Node -1 disconnected.
24-06-08.10:32:15.885 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Node -1 disconnected.
24-06-08.10:32:16.152 [kafka-producer-network-thread | producer-1] INFO  NetworkClient          - [Producer clientId=producer-1] Node -1 disconnected.
24-06-08.10:39:59.385 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Revoke previously assigned partitions matthew-topic-0
24-06-08.10:39:59.385 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Member consumer-matthew-group-2-e689d858-b926-4d6d-8753-5534b8dc96be sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:39:59.386 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: partitions revoked: [matthew-topic-0]
24-06-08.10:39:59.386 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:39:59.386 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:39:59.386 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:39:59.386 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Member consumer-matthew-group-1-2b87ac33-59ac-49b7-81cf-b06d59ff3ca1 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:39:59.386 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:39:59.386 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:39:59.386 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:39:59.389 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:39:59.389 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-1, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:39:59.390 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:39:59.390 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-matthew-group-2, groupId=matthew-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:39:59.401 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:39:59.401 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:39:59.401 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:39:59.405 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-1 unregistered
24-06-08.10:39:59.405 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:39:59.408 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:39:59.408 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:39:59.408 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:39:59.410 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-matthew-group-2 unregistered
24-06-08.10:39:59.410 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - matthew-group: Consumer stopped
24-06-08.10:39:59.415 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.10:39:59.417 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:39:59.417 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:39:59.417 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.10:39:59.417 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.10:57:02.253 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 79998 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:57:02.254 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:57:02.886 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:57:02.888 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:57:02.908 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
24-06-08.10:57:03.886 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:57:03.938 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:57:04.080 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:57:04.088 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:57:05.253 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:57:05.327 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-deduct-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-deduct-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:57:05.394 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:57:05.394 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:57:05.394 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815425393
24-06-08.10:57:05.407 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Subscribed to topic(s): sku-deduct-topic
24-06-08.10:57:05.416 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-clear-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-clear-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:57:05.423 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:57:05.423 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:57:05.423 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815425423
24-06-08.10:57:05.432 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Subscribed to topic(s): sku-clear-topic
24-06-08.10:57:05.444 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.483 seconds (JVM running for 3.932)
24-06-08.10:57:05.626 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:57:05.735 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Error while fetching metadata with correlation id 2 : {sku-deduct-topic=LEADER_NOT_AVAILABLE}
24-06-08.10:57:05.736 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Error while fetching metadata with correlation id 2 : {sku-clear-topic=LEADER_NOT_AVAILABLE}
24-06-08.10:57:05.736 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:57:05.736 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:57:05.738 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:57:05.738 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:57:05.743 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-08.10:57:05.745 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-08.10:57:05.772 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:57:05.772 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:57:05.772 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-08.10:57:05.772 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-08.10:57:05.839 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-08.10:57:05.839 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-08.10:57:05.892 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:57:05.919 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.10:57:05.968 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.10:57:05.969 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 495362817767 sku: 9011 outBusinessNo: 1-439162218
24-06-08.10:57:06.113 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.113 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.113 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.116 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.126 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.10:57:06.126 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.10:57:06.146 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:57:06.147 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:57:06.147 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815426146
24-06-08.10:57:06.152 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:57:06.157 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-08.10:57:06.168 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"16471721466","timestamp":1717815426117}
24-06-08.10:57:06.172 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:57:06.184 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:57:06.212 [main            ] INFO  RaffleOrderTest        - 测试结果：720444171884
24-06-08.10:57:06.212 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 059000407343 sku: 9011 outBusinessNo: 11656977168
24-06-08.10:57:06.215 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.215 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.215 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.217 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.217 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"22893109498","timestamp":1717815426217}
24-06-08.10:57:06.217 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:57:06.232 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:57:06.240 [main            ] INFO  RaffleOrderTest        - 测试结果：320086403969
24-06-08.10:57:06.241 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 631013075284 sku: 9011 outBusinessNo: 1541957195
24-06-08.10:57:06.243 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.243 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.243 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.244 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.244 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"88555625019","timestamp":1717815426244}
24-06-08.10:57:06.251 [main            ] INFO  RaffleOrderTest        - 测试结果：038681116694
24-06-08.10:57:06.251 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 851771952626 sku: 9011 outBusinessNo: 1-1585511877
24-06-08.10:57:06.253 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.253 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.253 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.254 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.255 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"49117284094","timestamp":1717815426255}
24-06-08.10:57:06.262 [main            ] INFO  RaffleOrderTest        - 测试结果：343816859103
24-06-08.10:57:06.262 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 086202692832 sku: 9011 outBusinessNo: 11624890776
24-06-08.10:57:06.264 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.264 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.264 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.266 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.266 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"24348769551","timestamp":1717815426266}
24-06-08.10:57:06.273 [main            ] INFO  RaffleOrderTest        - 测试结果：252981386274
24-06-08.10:57:06.273 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 915992424702 sku: 9011 outBusinessNo: 1-661260560
24-06-08.10:57:06.276 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.276 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.276 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.277 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.277 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"05916654245","timestamp":1717815426277}
24-06-08.10:57:06.284 [main            ] INFO  RaffleOrderTest        - 测试结果：802580435997
24-06-08.10:57:06.284 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 883841788646 sku: 9011 outBusinessNo: 11530711776
24-06-08.10:57:06.286 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.286 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.286 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.287 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.287 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"58853909273","timestamp":1717815426287}
24-06-08.10:57:06.293 [main            ] INFO  RaffleOrderTest        - 测试结果：087651671632
24-06-08.10:57:06.293 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 196915601273 sku: 9011 outBusinessNo: 1-1556237941
24-06-08.10:57:06.295 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.295 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.296 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.297 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.297 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"06897672622","timestamp":1717815426297}
24-06-08.10:57:06.305 [main            ] INFO  RaffleOrderTest        - 测试结果：156306264239
24-06-08.10:57:06.305 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 992443778077 sku: 9011 outBusinessNo: 1-1680327946
24-06-08.10:57:06.307 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.307 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.307 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.308 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.308 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"88707969030","timestamp":1717815426308}
24-06-08.10:57:06.315 [main            ] INFO  RaffleOrderTest        - 测试结果：438569137050
24-06-08.10:57:06.318 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 951127946158 sku: 9011 outBusinessNo: 1-1905453743
24-06-08.10:57:06.322 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.322 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.322 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.323 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.324 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"88305109791","timestamp":1717815426323}
24-06-08.10:57:06.332 [main            ] INFO  RaffleOrderTest        - 测试结果：683163297650
24-06-08.10:57:06.332 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 631137334893 sku: 9011 outBusinessNo: 1-971436117
24-06-08.10:57:06.336 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.336 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.336 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.338 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.338 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"71304127245","timestamp":1717815426338}
24-06-08.10:57:06.348 [main            ] INFO  RaffleOrderTest        - 测试结果：666570658892
24-06-08.10:57:06.348 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 531510001889 sku: 9011 outBusinessNo: 11015091329
24-06-08.10:57:06.353 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.353 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.353 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.355 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.355 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"64088212158","timestamp":1717815426355}
24-06-08.10:57:06.367 [main            ] INFO  RaffleOrderTest        - 测试结果：495109065844
24-06-08.10:57:06.367 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 617677366451 sku: 9011 outBusinessNo: 11802300141
24-06-08.10:57:06.377 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.377 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.377 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.379 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.380 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"67744525317","timestamp":1717815426379}
24-06-08.10:57:06.396 [main            ] INFO  RaffleOrderTest        - 测试结果：969744993008
24-06-08.10:57:06.397 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 915474140312 sku: 9011 outBusinessNo: 1-381429376
24-06-08.10:57:06.402 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.402 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.402 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.407 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.407 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"46717799787","timestamp":1717815426407}
24-06-08.10:57:06.426 [main            ] INFO  RaffleOrderTest        - 测试结果：989908621849
24-06-08.10:57:06.426 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 118203907481 sku: 9011 outBusinessNo: 1-1196040419
24-06-08.10:57:06.440 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.440 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.440 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.442 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.442 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"94770049716","timestamp":1717815426442}
24-06-08.10:57:06.448 [main            ] INFO  RaffleOrderTest        - 测试结果：212487309754
24-06-08.10:57:06.448 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 945945817215 sku: 9011 outBusinessNo: 11939092760
24-06-08.10:57:06.451 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.451 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.451 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.453 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.453 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"93330002233","timestamp":1717815426453}
24-06-08.10:57:06.463 [main            ] INFO  RaffleOrderTest        - 测试结果：048233650946
24-06-08.10:57:06.463 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 384577359156 sku: 9011 outBusinessNo: 1-1403291427
24-06-08.10:57:06.465 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.465 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.465 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.467 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.467 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"81266821737","timestamp":1717815426467}
24-06-08.10:57:06.472 [main            ] INFO  RaffleOrderTest        - 测试结果：057539017081
24-06-08.10:57:06.472 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 148028285844 sku: 9011 outBusinessNo: 11233155276
24-06-08.10:57:06.474 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.475 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.475 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.476 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.476 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"51646792551","timestamp":1717815426476}
24-06-08.10:57:06.481 [main            ] INFO  RaffleOrderTest        - 测试结果：652997104933
24-06-08.10:57:06.482 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 815769788115 sku: 9011 outBusinessNo: 1-791961563
24-06-08.10:57:06.484 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.484 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.484 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.484 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.485 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"69668408318","timestamp":1717815426484}
24-06-08.10:57:06.491 [main            ] INFO  RaffleOrderTest        - 测试结果：799709914471
24-06-08.10:57:06.491 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 079726927380 sku: 9011 outBusinessNo: 11128364281
24-06-08.10:57:06.494 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:57:06.494 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:57:06.494 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:57:06.496 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-08.10:57:06.496 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-clear-topic message:{"data":9011,"id":"04408948439","timestamp":1717815426494}
24-06-08.10:57:06.497 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:57:06.498 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"19075507163","timestamp":1717815426498}
24-06-08.10:57:06.502 [main            ] INFO  RaffleOrderTest        - 测试结果：528970400822
24-06-08.10:57:08.781 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-sku-deduct-group-1-75f27a07-d420-4ba3-b3e4-aa5dc58085ed', protocol='range'}
24-06-08.10:57:08.783 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-sku-clear-group-2-1c0713c5-e4e3-44ee-95ee-f170a0a72fca', protocol='range'}
24-06-08.10:57:08.786 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Finished assignment for group at generation 1: {consumer-sku-clear-group-2-1c0713c5-e4e3-44ee-95ee-f170a0a72fca=Assignment(partitions=[sku-clear-topic-0])}
24-06-08.10:57:08.786 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Finished assignment for group at generation 1: {consumer-sku-deduct-group-1-75f27a07-d420-4ba3-b3e4-aa5dc58085ed=Assignment(partitions=[sku-deduct-topic-0])}
24-06-08.10:57:08.798 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-sku-clear-group-2-1c0713c5-e4e3-44ee-95ee-f170a0a72fca', protocol='range'}
24-06-08.10:57:08.798 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-sku-deduct-group-1-75f27a07-d420-4ba3-b3e4-aa5dc58085ed', protocol='range'}
24-06-08.10:57:08.798 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Notifying assignor about the new Assignment(partitions=[sku-clear-topic-0])
24-06-08.10:57:08.798 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Notifying assignor about the new Assignment(partitions=[sku-deduct-topic-0])
24-06-08.10:57:08.803 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Adding newly assigned partitions: sku-clear-topic-0
24-06-08.10:57:08.803 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Adding newly assigned partitions: sku-deduct-topic-0
24-06-08.10:57:08.812 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Found no committed offset for partition sku-deduct-topic-0
24-06-08.10:57:08.812 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Found no committed offset for partition sku-clear-topic-0
24-06-08.10:57:08.818 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  SubscriptionState      - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting offset for partition sku-deduct-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}.
24-06-08.10:57:08.818 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  SubscriptionState      - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting offset for partition sku-clear-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}.
24-06-08.10:57:08.818 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions assigned: [sku-clear-topic-0]
24-06-08.10:57:08.818 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions assigned: [sku-deduct-topic-0]
24-06-08.10:57:08.840 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR ActivitySkuStockZeroMessageListener - Kafka清空库存消费失败！Topic:sku-clear-topic,Message:{"data":9011,"id":"04408948439","timestamp":1717815426494}
java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Long
	at cn.matthew.trigger.listener.ActivitySkuStockZeroMessageListener.consumeActivitySkuStockZeroMessage(ActivitySkuStockZeroMessageListener.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.10:57:08.869 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"16471721466","timestamp":1717815426117}
24-06-08.10:57:08.874 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"22893109498","timestamp":1717815426217}
24-06-08.10:57:08.879 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"88555625019","timestamp":1717815426244}
24-06-08.10:57:08.883 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"49117284094","timestamp":1717815426255}
24-06-08.10:57:08.886 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"24348769551","timestamp":1717815426266}
24-06-08.10:57:08.889 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"05916654245","timestamp":1717815426277}
24-06-08.10:57:08.893 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"58853909273","timestamp":1717815426287}
24-06-08.10:57:08.895 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"06897672622","timestamp":1717815426297}
24-06-08.10:57:08.898 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"88707969030","timestamp":1717815426308}
24-06-08.10:57:08.901 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"88305109791","timestamp":1717815426323}
24-06-08.10:57:08.906 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"71304127245","timestamp":1717815426338}
24-06-08.10:57:08.909 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"64088212158","timestamp":1717815426355}
24-06-08.10:57:08.911 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"67744525317","timestamp":1717815426379}
24-06-08.10:57:08.914 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"46717799787","timestamp":1717815426407}
24-06-08.10:57:08.916 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94770049716","timestamp":1717815426442}
24-06-08.10:57:08.919 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"93330002233","timestamp":1717815426453}
24-06-08.10:57:08.921 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"81266821737","timestamp":1717815426467}
24-06-08.10:57:08.923 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"51646792551","timestamp":1717815426476}
24-06-08.10:57:08.925 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"69668408318","timestamp":1717815426484}
24-06-08.10:57:08.928 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"19075507163","timestamp":1717815426498}
24-06-08.10:58:09.497 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Revoke previously assigned partitions sku-deduct-topic-0
24-06-08.10:58:09.497 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Revoke previously assigned partitions sku-clear-topic-0
24-06-08.10:58:09.498 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions revoked: [sku-deduct-topic-0]
24-06-08.10:58:09.498 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions revoked: [sku-clear-topic-0]
24-06-08.10:58:09.498 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Member consumer-sku-clear-group-2-1c0713c5-e4e3-44ee-95ee-f170a0a72fca sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:58:09.498 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Member consumer-sku-deduct-group-1-75f27a07-d420-4ba3-b3e4-aa5dc58085ed sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.10:58:09.499 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:58:09.499 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:58:09.499 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:58:09.499 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:58:09.499 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:58:09.499 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.10:58:09.500 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:58:09.500 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:58:09.501 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.10:58:09.501 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.10:58:09.510 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:58:09.510 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:58:09.510 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:58:09.510 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:58:09.510 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:58:09.511 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.10:58:09.514 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-clear-group-2 unregistered
24-06-08.10:58:09.514 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: Consumer stopped
24-06-08.10:58:09.517 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-deduct-group-1 unregistered
24-06-08.10:58:09.517 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: Consumer stopped
24-06-08.10:58:09.521 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.10:58:09.524 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.10:58:09.525 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.10:58:09.525 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.10:58:09.525 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.10:58:31.741 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 81902 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.10:58:31.742 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.10:58:32.257 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.10:58:32.259 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.10:58:32.278 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
24-06-08.10:58:33.218 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.10:58:33.269 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.10:58:33.404 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:58:33.414 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.10:58:34.617 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.10:58:34.708 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-deduct-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-deduct-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:58:34.793 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:58:34.794 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:58:34.794 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815514792
24-06-08.10:58:34.808 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Subscribed to topic(s): sku-deduct-topic
24-06-08.10:58:34.818 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-clear-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-clear-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.10:58:34.823 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:58:34.824 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:58:34.824 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815514823
24-06-08.10:58:34.831 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Subscribed to topic(s): sku-clear-topic
24-06-08.10:58:34.852 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.358 seconds (JVM running for 3.919)
24-06-08.10:58:35.078 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:58:35.169 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-08.10:58:35.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-08.10:58:35.170 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:58:35.170 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:58:35.172 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:58:35.172 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.10:58:35.175 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-08.10:58:35.175 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-08.10:58:35.196 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:58:35.196 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: need to re-join with the given member-id
24-06-08.10:58:35.196 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-08.10:58:35.196 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-08.10:58:35.348 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:58:35.378 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.10:58:35.427 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.10:58:35.428 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 342772980039 sku: 9011 outBusinessNo: 1516845039
24-06-08.10:58:35.561 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.561 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.562 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.567 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.587 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.10:58:35.587 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.10:58:35.618 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.10:58:35.618 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.10:58:35.618 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815515618
24-06-08.10:58:35.627 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.10:58:35.635 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-08.10:58:35.650 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"62266634987","timestamp":1717815515570}
24-06-08.10:58:35.652 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:58:35.669 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:58:35.691 [main            ] INFO  RaffleOrderTest        - 测试结果：355081937766
24-06-08.10:58:35.691 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 740443146160 sku: 9011 outBusinessNo: 1917474075
24-06-08.10:58:35.695 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.695 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.695 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.697 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.697 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"12732784408","timestamp":1717815515697}
24-06-08.10:58:35.705 [main            ] INFO  RaffleOrderTest        - 测试结果：627068661289
24-06-08.10:58:35.705 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 763275584933 sku: 9011 outBusinessNo: 11427746904
24-06-08.10:58:35.708 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.708 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.708 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.709 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.709 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"05169671116","timestamp":1717815515709}
24-06-08.10:58:35.709 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.10:58:35.721 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.10:58:35.729 [main            ] INFO  RaffleOrderTest        - 测试结果：948802922020
24-06-08.10:58:35.729 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 148446084451 sku: 9011 outBusinessNo: 12115136010
24-06-08.10:58:35.732 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.732 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.732 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.733 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.733 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"88667687252","timestamp":1717815515733}
24-06-08.10:58:35.739 [main            ] INFO  RaffleOrderTest        - 测试结果：584746142112
24-06-08.10:58:35.739 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 755450234970 sku: 9011 outBusinessNo: 1-432999731
24-06-08.10:58:35.742 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.742 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.742 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.743 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.743 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"94407423860","timestamp":1717815515743}
24-06-08.10:58:35.750 [main            ] INFO  RaffleOrderTest        - 测试结果：218509801098
24-06-08.10:58:35.750 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 401447553147 sku: 9011 outBusinessNo: 1778360037
24-06-08.10:58:35.755 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.755 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.756 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.757 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.758 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"51787257076","timestamp":1717815515757}
24-06-08.10:58:35.777 [main            ] INFO  RaffleOrderTest        - 测试结果：546273383923
24-06-08.10:58:35.777 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 696212472122 sku: 9011 outBusinessNo: 1-26861092
24-06-08.10:58:35.781 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.781 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.781 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.783 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.784 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"80192557485","timestamp":1717815515783}
24-06-08.10:58:35.797 [main            ] INFO  RaffleOrderTest        - 测试结果：665233292433
24-06-08.10:58:35.797 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 516769792942 sku: 9011 outBusinessNo: 1746635881
24-06-08.10:58:35.802 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.802 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.802 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.806 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.807 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"42096346160","timestamp":1717815515807}
24-06-08.10:58:35.825 [main            ] INFO  RaffleOrderTest        - 测试结果：607524421688
24-06-08.10:58:35.825 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 274184266759 sku: 9011 outBusinessNo: 1480351473
24-06-08.10:58:35.841 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.841 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.841 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.843 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.844 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"03790476560","timestamp":1717815515844}
24-06-08.10:58:35.860 [main            ] INFO  RaffleOrderTest        - 测试结果：788048515101
24-06-08.10:58:35.860 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 426333481385 sku: 9011 outBusinessNo: 1528396614
24-06-08.10:58:35.864 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.865 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.865 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.874 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.874 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"05494686668","timestamp":1717815515874}
24-06-08.10:58:35.893 [main            ] INFO  RaffleOrderTest        - 测试结果：780857085946
24-06-08.10:58:35.893 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 329891762264 sku: 9011 outBusinessNo: 11290471215
24-06-08.10:58:35.902 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.902 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.902 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.904 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.904 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"06696447318","timestamp":1717815515904}
24-06-08.10:58:35.916 [main            ] INFO  RaffleOrderTest        - 测试结果：945822714189
24-06-08.10:58:35.916 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 541742398518 sku: 9011 outBusinessNo: 12010908968
24-06-08.10:58:35.919 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.919 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.919 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.921 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.921 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"30206977509","timestamp":1717815515921}
24-06-08.10:58:35.931 [main            ] INFO  RaffleOrderTest        - 测试结果：651398236950
24-06-08.10:58:35.931 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 967893348712 sku: 9011 outBusinessNo: 16800248
24-06-08.10:58:35.934 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.934 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.934 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.935 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.936 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"49703614018","timestamp":1717815515936}
24-06-08.10:58:35.944 [main            ] INFO  RaffleOrderTest        - 测试结果：413578120449
24-06-08.10:58:35.944 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 197855239805 sku: 9011 outBusinessNo: 1146962235
24-06-08.10:58:35.950 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.950 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.950 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.952 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.952 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"04114461618","timestamp":1717815515952}
24-06-08.10:58:35.961 [main            ] INFO  RaffleOrderTest        - 测试结果：875697677073
24-06-08.10:58:35.961 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 314293495451 sku: 9011 outBusinessNo: 1-1711844895
24-06-08.10:58:35.966 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.966 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.966 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.967 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.967 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"64579724869","timestamp":1717815515967}
24-06-08.10:58:35.973 [main            ] INFO  RaffleOrderTest        - 测试结果：351681529977
24-06-08.10:58:35.973 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 409313043049 sku: 9011 outBusinessNo: 11815959076
24-06-08.10:58:35.976 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.976 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.976 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.977 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.977 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"64657092716","timestamp":1717815515977}
24-06-08.10:58:35.985 [main            ] INFO  RaffleOrderTest        - 测试结果：505136447538
24-06-08.10:58:35.986 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 108905153217 sku: 9011 outBusinessNo: 11076325569
24-06-08.10:58:35.989 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:35.989 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:35.989 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:35.991 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:35.991 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"77284065861","timestamp":1717815515991}
24-06-08.10:58:36.000 [main            ] INFO  RaffleOrderTest        - 测试结果：079425888544
24-06-08.10:58:36.000 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 016111338452 sku: 9011 outBusinessNo: 1-519273132
24-06-08.10:58:36.006 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:36.006 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:36.006 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:36.008 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:36.008 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"14749033180","timestamp":1717815516008}
24-06-08.10:58:36.018 [main            ] INFO  RaffleOrderTest        - 测试结果：634356209396
24-06-08.10:58:36.018 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 553283581283 sku: 9011 outBusinessNo: 1926527041
24-06-08.10:58:36.024 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:36.024 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:36.024 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:36.025 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:36.026 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"00288345141","timestamp":1717815516025}
24-06-08.10:58:36.041 [main            ] INFO  RaffleOrderTest        - 测试结果：503465270946
24-06-08.10:58:36.042 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 147316490504 sku: 9011 outBusinessNo: 1787052380
24-06-08.10:58:36.048 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.10:58:36.048 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.10:58:36.048 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.10:58:36.053 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-08.10:58:36.053 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-clear-topic message:{"data":9011,"id":"57704360913","timestamp":1717815516049}
24-06-08.10:58:36.057 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.10:58:36.058 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"48429887033","timestamp":1717815516057}
24-06-08.10:58:36.073 [main            ] INFO  RaffleOrderTest        - 测试结果：982913271070
24-06-08.10:58:38.205 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-sku-clear-group-2-36452d2b-b089-4a08-9509-ce95a5ad6756', protocol='range'}
24-06-08.10:58:38.205 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-sku-deduct-group-1-241a83ca-c35d-40bc-ac76-e1a40d1897e6', protocol='range'}
24-06-08.10:58:38.210 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Finished assignment for group at generation 3: {consumer-sku-deduct-group-1-241a83ca-c35d-40bc-ac76-e1a40d1897e6=Assignment(partitions=[sku-deduct-topic-0])}
24-06-08.10:58:38.210 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Finished assignment for group at generation 3: {consumer-sku-clear-group-2-36452d2b-b089-4a08-9509-ce95a5ad6756=Assignment(partitions=[sku-clear-topic-0])}
24-06-08.10:58:38.223 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-sku-deduct-group-1-241a83ca-c35d-40bc-ac76-e1a40d1897e6', protocol='range'}
24-06-08.10:58:38.223 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-sku-clear-group-2-36452d2b-b089-4a08-9509-ce95a5ad6756', protocol='range'}
24-06-08.10:58:38.224 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Notifying assignor about the new Assignment(partitions=[sku-clear-topic-0])
24-06-08.10:58:38.224 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Notifying assignor about the new Assignment(partitions=[sku-deduct-topic-0])
24-06-08.10:58:38.229 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Adding newly assigned partitions: sku-clear-topic-0
24-06-08.10:58:38.229 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Adding newly assigned partitions: sku-deduct-topic-0
24-06-08.10:58:38.240 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Found no committed offset for partition sku-clear-topic-0
24-06-08.10:58:38.241 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Setting offset for partition sku-deduct-topic-0 to the committed offset FetchPosition{offset=20, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.10:58:38.242 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions assigned: [sku-deduct-topic-0]
24-06-08.10:58:38.248 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  SubscriptionState      - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting offset for partition sku-clear-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}.
24-06-08.10:58:38.248 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions assigned: [sku-clear-topic-0]
24-06-08.10:58:38.267 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR ActivitySkuStockZeroMessageListener - Kafka清空库存消费失败！Topic:sku-clear-topic,Message:{"data":9011,"id":"04408948439","timestamp":1717815426494}
java.lang.NumberFormatException: For input string: "{"data":9011,"id":"04408948439","timestamp":1717815426494}"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:589)
	at java.lang.Long.parseLong(Long.java:631)
	at cn.matthew.trigger.listener.ActivitySkuStockZeroMessageListener.consumeActivitySkuStockZeroMessage(ActivitySkuStockZeroMessageListener.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.10:58:38.270 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ERROR ActivitySkuStockZeroMessageListener - Kafka清空库存消费失败！Topic:sku-clear-topic,Message:{"data":9011,"id":"57704360913","timestamp":1717815516049}
java.lang.NumberFormatException: For input string: "{"data":9011,"id":"57704360913","timestamp":1717815516049}"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:589)
	at java.lang.Long.parseLong(Long.java:631)
	at cn.matthew.trigger.listener.ActivitySkuStockZeroMessageListener.consumeActivitySkuStockZeroMessage(ActivitySkuStockZeroMessageListener.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2645)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2625)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2552)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2433)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2311)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1982)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1366)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1357)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1252)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:750)
24-06-08.10:58:38.293 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"62266634987","timestamp":1717815515570}
24-06-08.10:58:38.296 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"12732784408","timestamp":1717815515697}
24-06-08.10:58:38.299 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"05169671116","timestamp":1717815515709}
24-06-08.10:58:38.301 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"88667687252","timestamp":1717815515733}
24-06-08.10:58:38.303 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"94407423860","timestamp":1717815515743}
24-06-08.10:58:38.305 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"51787257076","timestamp":1717815515757}
24-06-08.10:58:38.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"80192557485","timestamp":1717815515783}
24-06-08.10:58:38.310 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"42096346160","timestamp":1717815515807}
24-06-08.10:58:38.312 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"03790476560","timestamp":1717815515844}
24-06-08.10:58:38.314 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"05494686668","timestamp":1717815515874}
24-06-08.10:58:38.316 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"06696447318","timestamp":1717815515904}
24-06-08.10:58:38.318 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"30206977509","timestamp":1717815515921}
24-06-08.10:58:38.321 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"49703614018","timestamp":1717815515936}
24-06-08.10:58:38.323 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"04114461618","timestamp":1717815515952}
24-06-08.10:58:38.326 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"64579724869","timestamp":1717815515967}
24-06-08.10:58:38.328 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"64657092716","timestamp":1717815515977}
24-06-08.10:58:38.330 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"77284065861","timestamp":1717815515991}
24-06-08.10:58:38.333 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"14749033180","timestamp":1717815516008}
24-06-08.10:58:38.335 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00288345141","timestamp":1717815516025}
24-06-08.10:58:38.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"48429887033","timestamp":1717815516057}
24-06-08.11:02:38.518 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Revoke previously assigned partitions sku-deduct-topic-0
24-06-08.11:02:38.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Revoke previously assigned partitions sku-clear-topic-0
24-06-08.11:02:38.518 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions revoked: [sku-deduct-topic-0]
24-06-08.11:02:38.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions revoked: [sku-clear-topic-0]
24-06-08.11:02:38.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Member consumer-sku-clear-group-2-36452d2b-b089-4a08-9509-ce95a5ad6756 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.11:02:38.519 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Member consumer-sku-deduct-group-1-241a83ca-c35d-40bc-ac76-e1a40d1897e6 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.11:02:38.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.11:02:38.519 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.11:02:38.520 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.11:02:38.520 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.11:02:38.520 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.11:02:38.520 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.11:02:38.522 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.11:02:38.522 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.11:02:38.522 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.11:02:38.522 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.11:02:38.533 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.11:02:38.533 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.11:02:38.533 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.11:02:38.533 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.11:02:38.533 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.11:02:38.533 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.11:02:38.539 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-deduct-group-1 unregistered
24-06-08.11:02:38.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-clear-group-2 unregistered
24-06-08.11:02:38.540 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: Consumer stopped
24-06-08.11:02:38.540 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: Consumer stopped
24-06-08.11:02:38.544 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.11:02:38.546 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.11:02:38.546 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.11:02:38.546 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.11:02:38.546 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-08.11:05:39.324 [main            ] INFO  RaffleOrderTest        - Starting RaffleOrderTest using Java 1.8.0_402 on MacBook-Air.local with PID 90978 (started by matthew in /Users/matthew/Desktop/lottery/lottery-app)
24-06-08.11:05:39.324 [main            ] INFO  RaffleOrderTest        - The following 1 profile is active: "dev"
24-06-08.11:05:40.133 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-08.11:05:40.135 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-08.11:05:40.166 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
24-06-08.11:05:41.283 [main            ] INFO  Version                - Redisson 3.26.0
24-06-08.11:05:41.330 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-08.11:05:41.448 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.11:05:41.457 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-08.11:05:42.732 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-08.11:05:42.807 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-deduct-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-deduct-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.11:05:42.876 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.11:05:42.877 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.11:05:42.877 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815942876
24-06-08.11:05:42.892 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Subscribed to topic(s): sku-deduct-topic
24-06-08.11:05:42.901 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-clear-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-clear-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-08.11:05:42.908 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.11:05:42.908 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.11:05:42.908 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815942908
24-06-08.11:05:42.914 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Subscribed to topic(s): sku-clear-topic
24-06-08.11:05:42.927 [main            ] INFO  RaffleOrderTest        - Started RaffleOrderTest in 3.968 seconds (JVM running for 4.576)
24-06-08.11:05:43.147 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.11:05:43.250 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-08.11:05:43.251 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-08.11:05:43.251 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.11:05:43.251 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.11:05:43.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.11:05:43.252 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-08.11:05:43.256 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-08.11:05:43.256 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-08.11:05:43.283 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: need to re-join with the given member-id
24-06-08.11:05:43.283 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-08.11:05:43.284 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: need to re-join with the given member-id
24-06-08.11:05:43.284 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-08.11:05:43.409 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.11:05:43.438 [main            ] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 9011 库存总量为: 20
24-06-08.11:05:43.474 [main            ] INFO  RaffleOrderTest        - 装配活动：true
24-06-08.11:05:43.475 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 906792021654 sku: 9011 outBusinessNo: 11914257416
24-06-08.11:05:43.587 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.587 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.587 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.589 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.598 [main            ] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-08.11:05:43.598 [main            ] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-08.11:05:43.615 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-08.11:05:43.616 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-08.11:05:43.616 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1717815943615
24-06-08.11:05:43.622 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-08.11:05:43.631 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-08.11:05:43.648 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"59724856976","timestamp":1717815943591}
24-06-08.11:05:43.651 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.11:05:43.683 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.11:05:43.715 [main            ] INFO  RaffleOrderTest        - 测试结果：656793415712
24-06-08.11:05:43.716 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 215019199353 sku: 9011 outBusinessNo: 1-927456551
24-06-08.11:05:43.721 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.721 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.722 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.724 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.724 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"07679943034","timestamp":1717815943724}
24-06-08.11:05:43.724 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-08.11:05:43.736 [main            ] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-08.11:05:43.742 [main            ] INFO  RaffleOrderTest        - 测试结果：835757386477
24-06-08.11:05:43.743 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 067942802774 sku: 9011 outBusinessNo: 143006805
24-06-08.11:05:43.745 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.745 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.745 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.746 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.746 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"97937004839","timestamp":1717815943746}
24-06-08.11:05:43.750 [main            ] INFO  RaffleOrderTest        - 测试结果：932537381866
24-06-08.11:05:43.750 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 970131783540 sku: 9011 outBusinessNo: 1-1899446815
24-06-08.11:05:43.752 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.753 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.753 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.753 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.754 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"31952932340","timestamp":1717815943753}
24-06-08.11:05:43.759 [main            ] INFO  RaffleOrderTest        - 测试结果：224219368241
24-06-08.11:05:43.759 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 527237431977 sku: 9011 outBusinessNo: 1-1877631402
24-06-08.11:05:43.761 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.761 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.761 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.762 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.762 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"00451397040","timestamp":1717815943762}
24-06-08.11:05:43.768 [main            ] INFO  RaffleOrderTest        - 测试结果：339181489293
24-06-08.11:05:43.768 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 372643291784 sku: 9011 outBusinessNo: 1-862240574
24-06-08.11:05:43.771 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.771 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.771 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.772 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.772 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"43362919372","timestamp":1717815943772}
24-06-08.11:05:43.776 [main            ] INFO  RaffleOrderTest        - 测试结果：598857563844
24-06-08.11:05:43.776 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 170564525669 sku: 9011 outBusinessNo: 1-1531933918
24-06-08.11:05:43.778 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.778 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.778 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.779 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.779 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"27005914491","timestamp":1717815943779}
24-06-08.11:05:43.783 [main            ] INFO  RaffleOrderTest        - 测试结果：382323209582
24-06-08.11:05:43.783 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 839085704723 sku: 9011 outBusinessNo: 11197923443
24-06-08.11:05:43.785 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.785 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.785 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.786 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.786 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"52641082699","timestamp":1717815943786}
24-06-08.11:05:43.795 [main            ] INFO  RaffleOrderTest        - 测试结果：895767777784
24-06-08.11:05:43.795 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 923108844733 sku: 9011 outBusinessNo: 1-908465762
24-06-08.11:05:43.797 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.797 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.797 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.798 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.798 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"32120534265","timestamp":1717815943798}
24-06-08.11:05:43.804 [main            ] INFO  RaffleOrderTest        - 测试结果：379333782997
24-06-08.11:05:43.804 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 297118440495 sku: 9011 outBusinessNo: 1685374720
24-06-08.11:05:43.806 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.806 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.806 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.807 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.807 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"09716981133","timestamp":1717815943807}
24-06-08.11:05:43.815 [main            ] INFO  RaffleOrderTest        - 测试结果：464071422253
24-06-08.11:05:43.815 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 903974391383 sku: 9011 outBusinessNo: 1-1503183565
24-06-08.11:05:43.817 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.818 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.818 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.819 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.819 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"28591750795","timestamp":1717815943819}
24-06-08.11:05:43.829 [main            ] INFO  RaffleOrderTest        - 测试结果：965541947472
24-06-08.11:05:43.830 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 374091950899 sku: 9011 outBusinessNo: 11734930573
24-06-08.11:05:43.835 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.835 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.835 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.837 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.837 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"60274539260","timestamp":1717815943837}
24-06-08.11:05:43.858 [main            ] INFO  RaffleOrderTest        - 测试结果：683333400696
24-06-08.11:05:43.859 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 738567976866 sku: 9011 outBusinessNo: 1-1519006829
24-06-08.11:05:43.868 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.868 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.869 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.876 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.876 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"08793993596","timestamp":1717815943876}
24-06-08.11:05:43.891 [main            ] INFO  RaffleOrderTest        - 测试结果：925550865871
24-06-08.11:05:43.891 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 926352010397 sku: 9011 outBusinessNo: 1-200414612
24-06-08.11:05:43.896 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.896 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.896 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.907 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.907 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"69090006052","timestamp":1717815943907}
24-06-08.11:05:43.917 [main            ] INFO  RaffleOrderTest        - 测试结果：982191557799
24-06-08.11:05:43.917 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 048172094078 sku: 9011 outBusinessNo: 1524764544
24-06-08.11:05:43.925 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.925 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.925 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.928 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.928 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"43059428790","timestamp":1717815943928}
24-06-08.11:05:43.952 [main            ] INFO  RaffleOrderTest        - 测试结果：365700562523
24-06-08.11:05:43.953 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 669360114328 sku: 9011 outBusinessNo: 11405413469
24-06-08.11:05:43.960 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.960 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.960 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.961 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.962 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"91010067389","timestamp":1717815943961}
24-06-08.11:05:43.974 [main            ] INFO  RaffleOrderTest        - 测试结果：426240082286
24-06-08.11:05:43.974 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 047876154192 sku: 9011 outBusinessNo: 1-342580055
24-06-08.11:05:43.978 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.978 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.978 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.980 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.980 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"07372428221","timestamp":1717815943980}
24-06-08.11:05:43.989 [main            ] INFO  RaffleOrderTest        - 测试结果：577832582096
24-06-08.11:05:43.989 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 612356093886 sku: 9011 outBusinessNo: 1-116462576
24-06-08.11:05:43.993 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:43.993 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:43.993 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:43.995 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:43.995 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"58866428693","timestamp":1717815943995}
24-06-08.11:05:44.002 [main            ] INFO  RaffleOrderTest        - 测试结果：537677861560
24-06-08.11:05:44.002 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 476114648679 sku: 9011 outBusinessNo: 1-908038608
24-06-08.11:05:44.005 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:44.005 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:44.005 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:44.007 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:44.007 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"68797601812","timestamp":1717815944007}
24-06-08.11:05:44.014 [main            ] INFO  RaffleOrderTest        - 测试结果：283076097791
24-06-08.11:05:44.014 [main            ] INFO  AbstractRaffleActivity - 创建充值订单，userId: 124853406768 sku: 9011 outBusinessNo: 11960351558
24-06-08.11:05:44.017 [main            ] INFO  AbstractRaffleActivity - 创建充值订单 SKU 查询结果：{"activityCountId":11101,"activityId":100301,"sku":9011,"stockCount":20,"stockCountSurplus":20} {"activityId":100301,"activityName":"测试活动","beginDateTime":1709979310000,"endDateTime":2036052910000,"state":"open","strategyId":100006} {"activityCountId":11101,"dayCount":100,"monthCount":100,"totalCount":100}
24-06-08.11:05:44.017 [main            ] INFO  ActivityBaseChainNode  - 活动责任链-基础信息【有效期、状态、库存(sku)】校验开始。sku:9011 activityId:100301
24-06-08.11:05:44.017 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】开始。sku:9011 activityId:100301
24-06-08.11:05:44.021 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-08.11:05:44.021 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-clear-topic message:{"data":9011,"id":"98317467786","timestamp":1717815944018}
24-06-08.11:05:44.022 [main            ] INFO  ActivitySkuStockActionChainNode - 活动责任链-商品库存处理【有效期、状态、库存(sku)】成功。sku:9011 activityId:100301
24-06-08.11:05:44.022 [main            ] INFO  EventPublisher         - 发送MQ消息 topic:sku-deduct-topic message:{"data":{"activityId":100301,"sku":9011},"id":"54423663410","timestamp":1717815944022}
24-06-08.11:05:44.030 [main            ] INFO  RaffleOrderTest        - 测试结果：808639471408
24-06-08.11:05:46.300 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-sku-clear-group-2-d08c1fec-b93d-493a-9012-fe5321f18b8a', protocol='range'}
24-06-08.11:05:46.300 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-sku-deduct-group-1-99481c67-b7b5-4086-9198-61b00b5918b5', protocol='range'}
24-06-08.11:05:46.307 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Finished assignment for group at generation 5: {consumer-sku-clear-group-2-d08c1fec-b93d-493a-9012-fe5321f18b8a=Assignment(partitions=[sku-clear-topic-0])}
24-06-08.11:05:46.307 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Finished assignment for group at generation 5: {consumer-sku-deduct-group-1-99481c67-b7b5-4086-9198-61b00b5918b5=Assignment(partitions=[sku-deduct-topic-0])}
24-06-08.11:05:46.323 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-sku-clear-group-2-d08c1fec-b93d-493a-9012-fe5321f18b8a', protocol='range'}
24-06-08.11:05:46.323 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-sku-deduct-group-1-99481c67-b7b5-4086-9198-61b00b5918b5', protocol='range'}
24-06-08.11:05:46.324 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Notifying assignor about the new Assignment(partitions=[sku-clear-topic-0])
24-06-08.11:05:46.324 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Notifying assignor about the new Assignment(partitions=[sku-deduct-topic-0])
24-06-08.11:05:46.330 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Adding newly assigned partitions: sku-clear-topic-0
24-06-08.11:05:46.330 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Adding newly assigned partitions: sku-deduct-topic-0
24-06-08.11:05:46.341 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Found no committed offset for partition sku-clear-topic-0
24-06-08.11:05:46.343 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Setting offset for partition sku-deduct-topic-0 to the committed offset FetchPosition{offset=40, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-08.11:05:46.344 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions assigned: [sku-deduct-topic-0]
24-06-08.11:05:46.350 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  SubscriptionState      - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting offset for partition sku-clear-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}.
24-06-08.11:05:46.350 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions assigned: [sku-clear-topic-0]
24-06-08.11:05:46.409 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"59724856976","timestamp":1717815943591}
24-06-08.11:05:46.409 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ActivitySkuStockZeroMessageListener - Kafka清空库存消费成功! Topic:sku-clear-topic,Message:{"data":9011,"id":"04408948439","timestamp":1717815426494}
24-06-08.11:05:46.413 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ActivitySkuStockZeroMessageListener - Kafka清空库存消费成功! Topic:sku-clear-topic,Message:{"data":9011,"id":"57704360913","timestamp":1717815516049}
24-06-08.11:05:46.413 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"07679943034","timestamp":1717815943724}
24-06-08.11:05:46.418 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ActivitySkuStockZeroMessageListener - Kafka清空库存消费成功! Topic:sku-clear-topic,Message:{"data":9011,"id":"98317467786","timestamp":1717815944018}
24-06-08.11:05:46.418 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"97937004839","timestamp":1717815943746}
24-06-08.11:05:46.421 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"31952932340","timestamp":1717815943753}
24-06-08.11:05:46.424 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"00451397040","timestamp":1717815943762}
24-06-08.11:05:46.428 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"43362919372","timestamp":1717815943772}
24-06-08.11:05:46.431 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"27005914491","timestamp":1717815943779}
24-06-08.11:05:46.434 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"52641082699","timestamp":1717815943786}
24-06-08.11:05:46.437 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"32120534265","timestamp":1717815943798}
24-06-08.11:05:46.438 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"09716981133","timestamp":1717815943807}
24-06-08.11:05:46.440 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"28591750795","timestamp":1717815943819}
24-06-08.11:05:46.445 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"60274539260","timestamp":1717815943837}
24-06-08.11:05:46.447 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"08793993596","timestamp":1717815943876}
24-06-08.11:05:46.449 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"69090006052","timestamp":1717815943907}
24-06-08.11:05:46.452 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"43059428790","timestamp":1717815943928}
24-06-08.11:05:46.454 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"91010067389","timestamp":1717815943961}
24-06-08.11:05:46.456 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"07372428221","timestamp":1717815943980}
24-06-08.11:05:46.458 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"58866428693","timestamp":1717815943995}
24-06-08.11:05:46.459 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"68797601812","timestamp":1717815944007}
24-06-08.11:05:46.461 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ActivitySkuStockConsumeMessageListener - Kafka库存扣减消费成功! Topic:sku-deduct-topic,Message:{"data":{"activityId":100301,"sku":9011},"id":"54423663410","timestamp":1717815944022}
24-06-08.11:05:58.678 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Revoke previously assigned partitions sku-deduct-topic-0
24-06-08.11:05:58.678 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Revoke previously assigned partitions sku-clear-topic-0
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions revoked: [sku-deduct-topic-0]
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions revoked: [sku-clear-topic-0]
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Member consumer-sku-deduct-group-1-99481c67-b7b5-4086-9198-61b00b5918b5 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Member consumer-sku-clear-group-2-d08c1fec-b93d-493a-9012-fe5321f18b8a sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.11:05:58.679 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Unsubscribed all topics or patterns and assigned partitions
24-06-08.11:05:58.680 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.11:05:58.681 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.11:05:58.681 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-08.11:05:58.681 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-08.11:05:58.686 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.11:05:58.686 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.11:05:58.687 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-08.11:05:58.687 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.11:05:58.687 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.11:05:58.689 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-08.11:05:58.700 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-clear-group-2 unregistered
24-06-08.11:05:58.700 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: Consumer stopped
24-06-08.11:05:58.700 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-deduct-group-1 unregistered
24-06-08.11:05:58.700 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: Consumer stopped
24-06-08.11:05:58.708 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-08.11:05:58.712 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-08.11:05:58.712 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-08.11:05:58.712 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-08.11:05:58.712 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
