24-06-16.17:11:49.249 [main            ] INFO  Application            - Starting Application using Java 1.8.0_402 on MacBook-Air.local with PID 36180 (/Users/matthew/Desktop/lottery/lottery-app/target/classes started by matthew in /Users/matthew/Desktop/lottery)
24-06-16.17:11:49.250 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-06-16.17:11:49.775 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-16.17:11:49.777 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-16.17:11:49.795 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
24-06-16.17:11:50.236 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-06-16.17:11:50.239 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-06-16.17:11:50.240 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-06-16.17:11:50.240 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-06-16.17:11:50.294 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-06-16.17:11:50.294 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1023 ms
24-06-16.17:11:50.659 [main            ] INFO  Version                - Redisson 3.26.0
24-06-16.17:11:50.674 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-16.17:11:50.755 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-16.17:11:50.776 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-16.17:11:51.378 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-16.17:11:51.433 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-deduct-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-deduct-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-16.17:11:51.546 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.17:11:51.546 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.17:11:51.546 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1718529111545
24-06-16.17:11:51.552 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Subscribed to topic(s): sku-deduct-topic
24-06-16.17:11:51.559 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-clear-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-clear-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-16.17:11:51.562 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.17:11:51.562 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.17:11:51.562 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1718529111562
24-06-16.17:11:51.565 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Subscribed to topic(s): sku-clear-topic
24-06-16.17:11:51.566 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-06-16.17:11:51.572 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-06-16.17:11:51.581 [main            ] INFO  Application            - Started Application in 2.577 seconds (JVM running for 2.947)
24-06-16.17:11:51.832 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.17:11:51.832 [RMI TCP Connection(4)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-06-16.17:11:51.833 [RMI TCP Connection(4)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-06-16.17:11:51.834 [RMI TCP Connection(4)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-06-16.17:11:51.902 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-16.17:11:51.902 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-16.17:11:51.903 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.17:11:51.903 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.17:11:51.915 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:11:51.915 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:11:51.929 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-16.17:11:51.928 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-16.17:11:51.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: need to re-join with the given member-id
24-06-16.17:11:51.966 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: need to re-join with the given member-id
24-06-16.17:11:51.966 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-16.17:11:51.966 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-16.17:11:52.062 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.17:11:52.073 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.17:11:52.091 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.17:11:55.016 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully joined group with generation Generation{generationId=245, memberId='consumer-sku-clear-group-2-c6b2b638-7061-46c8-bfd0-00e1f8ccc5f4', protocol='range'}
24-06-16.17:11:55.018 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully joined group with generation Generation{generationId=243, memberId='consumer-sku-deduct-group-1-b623a202-f907-4a72-947b-e6653ba24ccc', protocol='range'}
24-06-16.17:11:55.024 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Finished assignment for group at generation 243: {consumer-sku-deduct-group-1-b623a202-f907-4a72-947b-e6653ba24ccc=Assignment(partitions=[sku-deduct-topic-0])}
24-06-16.17:11:55.024 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Finished assignment for group at generation 245: {consumer-sku-clear-group-2-c6b2b638-7061-46c8-bfd0-00e1f8ccc5f4=Assignment(partitions=[sku-clear-topic-0])}
24-06-16.17:11:55.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully synced group in generation Generation{generationId=243, memberId='consumer-sku-deduct-group-1-b623a202-f907-4a72-947b-e6653ba24ccc', protocol='range'}
24-06-16.17:11:55.072 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully synced group in generation Generation{generationId=245, memberId='consumer-sku-clear-group-2-c6b2b638-7061-46c8-bfd0-00e1f8ccc5f4', protocol='range'}
24-06-16.17:11:55.073 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Notifying assignor about the new Assignment(partitions=[sku-clear-topic-0])
24-06-16.17:11:55.073 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Notifying assignor about the new Assignment(partitions=[sku-deduct-topic-0])
24-06-16.17:11:55.078 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Adding newly assigned partitions: sku-deduct-topic-0
24-06-16.17:11:55.078 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Adding newly assigned partitions: sku-clear-topic-0
24-06-16.17:11:55.094 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Setting offset for partition sku-clear-topic-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-16.17:11:55.094 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Setting offset for partition sku-deduct-topic-0 to the committed offset FetchPosition{offset=80, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-16.17:11:55.094 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions assigned: [sku-clear-topic-0]
24-06-16.17:11:55.094 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions assigned: [sku-deduct-topic-0]
24-06-16.17:12:47.977 [http-nio-8091-exec-2] INFO  RaffleActivityController - 根据活动ID装配开始，活动ID为：100001
24-06-16.17:12:47.992 [http-nio-8091-exec-2] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.17:12:48.015 [http-nio-8091-exec-2] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.17:12:48.038 [http-nio-8091-exec-2] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 999 库存总量为: 1000000
24-06-16.17:12:48.135 [http-nio-8091-exec-2] INFO  RaffleActivityController - 根据活动ID装配完毕，活动ID为：100001
24-06-16.17:13:14.926 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:14.926 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:14.926 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:15.004 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1251947713675657216
24-06-16.17:13:15.004 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1251947713675657217
24-06-16.17:13:15.004 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1251947713675657218
24-06-16.17:13:15.027 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947713675657217
24-06-16.17:13:15.033 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:15.034 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:15.053 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:15.053 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:15.054 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:15.071 [http-nio-8091-exec-6] ERROR ActivityRepository     - 写入创建参与活动记录，唯一索引冲突 userId: matthew activityId: 100001
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
### The error may exist in file [/Users/matthew/Desktop/lottery/lottery-app/target/classes/mybatis/mapper/ActivityAccountDay_mapper.xml]
### The error may involve cn.matthew.infrastructure.persistent.dao.IRaffleActivityAccountDayDao.insertActivityAccountDay-Inline
### The error occurred while setting parameters
### SQL: insert into raffle_activity_account_day(         user_id, activity_id, day, day_count, day_count_surplus, create_time, update_time)         values         (?, ?, ?, ?, ?, now(), now())
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
; Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy117.insertActivityAccountDay(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy118.insertActivityAccountDay(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.lambda$saveCreatePartakeOrderAggregate$1(ActivityRepository.java:371)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.saveCreatePartakeOrderAggregate(ActivityRepository.java:301)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.saveCreatePartakeOrderAggregate(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:66)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy174.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 86 common frames omitted
24-06-16.17:13:15.072 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:15.072 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:15.078 [http-nio-8091-exec-3] ERROR ActivityRepository     - 写入创建参与活动记录，唯一索引冲突 userId: matthew activityId: 100001
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
### The error may exist in file [/Users/matthew/Desktop/lottery/lottery-app/target/classes/mybatis/mapper/ActivityAccountDay_mapper.xml]
### The error may involve cn.matthew.infrastructure.persistent.dao.IRaffleActivityAccountDayDao.insertActivityAccountDay-Inline
### The error occurred while setting parameters
### SQL: insert into raffle_activity_account_day(         user_id, activity_id, day, day_count, day_count_surplus, create_time, update_time)         values         (?, ?, ?, ?, ?, now(), now())
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
; Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy117.insertActivityAccountDay(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy118.insertActivityAccountDay(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.lambda$saveCreatePartakeOrderAggregate$1(ActivityRepository.java:371)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.saveCreatePartakeOrderAggregate(ActivityRepository.java:301)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.saveCreatePartakeOrderAggregate(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:66)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy174.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 86 common frames omitted
24-06-16.17:13:15.084 [http-nio-8091-exec-6] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.lambda$saveCreatePartakeOrderAggregate$1(ActivityRepository.java:401)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.saveCreatePartakeOrderAggregate(ActivityRepository.java:301)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.saveCreatePartakeOrderAggregate(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:66)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
### The error may exist in file [/Users/matthew/Desktop/lottery/lottery-app/target/classes/mybatis/mapper/ActivityAccountDay_mapper.xml]
### The error may involve cn.matthew.infrastructure.persistent.dao.IRaffleActivityAccountDayDao.insertActivityAccountDay-Inline
### The error occurred while setting parameters
### SQL: insert into raffle_activity_account_day(         user_id, activity_id, day, day_count, day_count_surplus, create_time, update_time)         values         (?, ?, ?, ?, ?, now(), now())
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
; Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy117.insertActivityAccountDay(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy118.insertActivityAccountDay(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.lambda$saveCreatePartakeOrderAggregate$1(ActivityRepository.java:371)
	... 68 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy174.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 86 common frames omitted
24-06-16.17:13:15.084 [http-nio-8091-exec-3] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.lambda$saveCreatePartakeOrderAggregate$1(ActivityRepository.java:401)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.saveCreatePartakeOrderAggregate(ActivityRepository.java:301)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.saveCreatePartakeOrderAggregate(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:66)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
### The error may exist in file [/Users/matthew/Desktop/lottery/lottery-app/target/classes/mybatis/mapper/ActivityAccountDay_mapper.xml]
### The error may involve cn.matthew.infrastructure.persistent.dao.IRaffleActivityAccountDayDao.insertActivityAccountDay-Inline
### The error occurred while setting parameters
### SQL: insert into raffle_activity_account_day(         user_id, activity_id, day, day_count, day_count_surplus, create_time, update_time)         values         (?, ?, ?, ?, ?, now(), now())
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
; Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy117.insertActivityAccountDay(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy118.insertActivityAccountDay(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.lambda$saveCreatePartakeOrderAggregate$1(ActivityRepository.java:371)
	... 68 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'matthew-100001-2024-06-16' for key 'raffle_activity_account_day.uq_user_id_activity_id_day'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy174.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 86 common frames omitted
24-06-16.17:13:15.272 [http-nio-8091-exec-7] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-16.17:13:15.272 [http-nio-8091-exec-7] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-16.17:13:15.339 [http-nio-8091-exec-7] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.17:13:15.339 [http-nio-8091-exec-7] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.17:13:15.339 [http-nio-8091-exec-7] INFO  AppInfoParser          - Kafka startTimeMs: 1718529195339
24-06-16.17:13:15.384 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition send-award-topic-0 to 0 since the associated topicId changed from null to 7B2TfuZETI-OeTtx5TJ86g
24-06-16.17:13:15.385 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.17:13:15.404 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"54305365865","timestamp":1718529195077}
24-06-16.17:13:15.658 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:15.658 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:15.669 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1251947716464869376
24-06-16.17:13:15.669 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1251947716464869377
24-06-16.17:13:15.677 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947716464869376
24-06-16.17:13:15.680 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:15.680 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:15.683 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947716464869377
24-06-16.17:13:15.686 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:15.686 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:15.687 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:15.687 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:15.687 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:15.688 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:15.689 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:15.691 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:15.691 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:15.694 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:15.694 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:15.694 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:15.695 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:15.696 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:15.696 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:15.697 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"21477648982","timestamp":1718529195690}
24-06-16.17:13:15.704 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"90888369606","timestamp":1718529195698}
24-06-16.17:13:15.737 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:15.737 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:15.740 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:15.745 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1251947716783636480
24-06-16.17:13:15.746 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1251947716787830784
24-06-16.17:13:15.748 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1251947716796219392
24-06-16.17:13:15.756 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947716787830784
24-06-16.17:13:15.760 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:15.760 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:15.763 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947716783636480
24-06-16.17:13:15.766 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:15.766 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:15.767 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:15.767 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:15.768 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:15.768 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:15.768 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:15.769 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:15.769 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:15.768 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:15.769 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:15.770 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:15.770 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:15.770 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:15.771 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:15.772 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947716796219392
24-06-16.17:13:15.775 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:15.775 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:15.777 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:15.777 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:15.778 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"31026628701","timestamp":1718529195771}
24-06-16.17:13:15.779 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:15.779 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:15.779 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:15.779 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"44604454307","timestamp":1718529195771}
24-06-16.17:13:15.780 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:15.780 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:15.780 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:15.790 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"74402968286","timestamp":1718529195781}
24-06-16.17:13:16.127 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:16.128 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:16.135 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1251947718419415040
24-06-16.17:13:16.137 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1251947718427803648
24-06-16.17:13:16.146 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947718419415040
24-06-16.17:13:16.149 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:16.150 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:16.151 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:16.151 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:16.152 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:16.153 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:16.153 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:16.155 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947718427803648
24-06-16.17:13:16.159 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:16.159 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:16.162 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:16.162 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:16.162 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:16.163 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:16.163 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:16.165 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"19767817642","timestamp":1718529196154}
24-06-16.17:13:16.176 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"83316896481","timestamp":1718529196171}
24-06-16.17:13:16.307 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:16.310 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:16.314 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:16.326 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1251947719220527104
24-06-16.17:13:16.327 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1251947719224721408
24-06-16.17:13:16.329 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1251947719233110016
24-06-16.17:13:16.351 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947719220527104
24-06-16.17:13:16.361 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:16.361 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:16.389 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:16.389 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:16.390 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:16.392 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947719224721408
24-06-16.17:13:16.392 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:16.392 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:16.398 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:16.398 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:16.401 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:16.401 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:16.402 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:16.404 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:16.404 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:16.410 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947719233110016
24-06-16.17:13:16.411 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"00647120960","timestamp":1718529196396}
24-06-16.17:13:16.418 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:16.418 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:16.422 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:16.422 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:16.423 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"88111755644","timestamp":1718529196407}
24-06-16.17:13:16.423 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:16.425 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:16.426 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:16.440 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"13839609449","timestamp":1718529196428}
24-06-16.17:13:16.664 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:16.672 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:16.674 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1251947720680144896
24-06-16.17:13:16.680 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1251947720705310720
24-06-16.17:13:16.684 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947720680144896
24-06-16.17:13:16.688 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:16.688 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:16.691 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:16.692 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:16.692 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:16.693 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:16.694 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:16.696 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947720705310720
24-06-16.17:13:16.698 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:16.698 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:16.700 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:16.700 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:16.701 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:16.703 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:16.703 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:16.703 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"23288474176","timestamp":1718529196694}
24-06-16.17:13:16.711 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"79685601516","timestamp":1718529196704}
24-06-16.17:13:17.058 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.067 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.068 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.079 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1251947722378838016
24-06-16.17:13:17.080 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1251947722383032320
24-06-16.17:13:17.082 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1251947722391420928
24-06-16.17:13:17.098 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947722378838016
24-06-16.17:13:17.102 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:17.102 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:17.105 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:17.106 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:17.106 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:17.107 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:17.107 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:17.110 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947722383032320
24-06-16.17:13:17.115 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:17.115 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:17.118 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:17.118 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:17.118 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:17.119 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:17.119 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:17.122 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"51259744492","timestamp":1718529197109}
24-06-16.17:13:17.123 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947722391420928
24-06-16.17:13:17.127 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:17.127 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:17.130 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:17.130 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:17.131 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:17.132 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:17.132 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:17.133 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"45241792026","timestamp":1718529197121}
24-06-16.17:13:17.157 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"48812208510","timestamp":1718529197136}
24-06-16.17:13:17.335 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.341 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.347 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1251947723502911488
24-06-16.17:13:17.351 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1251947723519688704
24-06-16.17:13:17.374 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947723502911488
24-06-16.17:13:17.390 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.17:13:17.390 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.17:13:17.400 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.17:13:17.400 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.17:13:17.404 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:17.404 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:17.404 [http-nio-8091-exec-6] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.17:13:17.404 [http-nio-8091-exec-6] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.17:13:17.404 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.17:13:17.404 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.17:13:17.405 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947723519688704
24-06-16.17:13:17.416 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:17.416 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:17.426 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:17.427 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:17.431 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:17.435 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:17.435 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:17.474 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"48269924163","timestamp":1718529197408}
24-06-16.17:13:17.485 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"07934541667","timestamp":1718529197440}
24-06-16.17:13:17.770 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.777 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.777 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.779 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1251947725314850816
24-06-16.17:13:17.783 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1251947725331628032
24-06-16.17:13:17.785 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1251947725340016640
24-06-16.17:13:17.788 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947725314850816
24-06-16.17:13:17.790 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:17.790 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:17.791 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:17.791 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:17.791 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:17.792 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:17.792 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:17.792 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947725331628032
24-06-16.17:13:17.794 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:17.794 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:17.796 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:17.796 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:17.796 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:17.798 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:17.798 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:17.799 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"40469777620","timestamp":1718529197792}
24-06-16.17:13:17.800 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947725340016640
24-06-16.17:13:17.802 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:17.802 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:17.804 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:17.804 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:17.804 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:17.805 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:17.805 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:17.806 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"45018792502","timestamp":1718529197799}
24-06-16.17:13:17.817 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"38645431587","timestamp":1718529197807}
24-06-16.17:13:17.975 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.975 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:17.983 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1251947726170488832
24-06-16.17:13:17.993 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1251947726212431872
24-06-16.17:13:18.000 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947726170488832
24-06-16.17:13:18.003 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:18.003 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:18.004 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:18.004 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:18.005 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:18.005 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:18.005 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:18.006 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:18.007 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:18.007 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:18.007 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947726212431872
24-06-16.17:13:18.010 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:18.010 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:18.011 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:18.012 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:18.013 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:18.013 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:18.013 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:18.014 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"71531992963","timestamp":1718529198008}
24-06-16.17:13:18.014 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:18.015 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:18.015 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:18.024 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"02314229511","timestamp":1718529198016}
24-06-16.17:13:18.369 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:18.377 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:18.377 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:18.380 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1251947727835627520
24-06-16.17:13:18.384 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1251947727852404737
24-06-16.17:13:18.384 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1251947727852404736
24-06-16.17:13:18.409 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947727835627520
24-06-16.17:13:18.415 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:18.415 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:18.417 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:18.417 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:18.417 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:18.418 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:18.419 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:18.424 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947727852404736
24-06-16.17:13:18.428 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:18.428 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:18.429 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"06003154878","timestamp":1718529198420}
24-06-16.17:13:18.430 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:18.430 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:18.431 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:18.432 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:18.432 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:18.435 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947727852404737
24-06-16.17:13:18.440 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:18.440 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:18.444 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:18.444 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:18.444 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:18.445 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:18.445 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:18.445 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"13033254505","timestamp":1718529198433}
24-06-16.17:13:18.455 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"11282643277","timestamp":1718529198447}
24-06-16.17:13:18.560 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:18.571 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1251947728636739584
24-06-16.17:13:18.572 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:18.585 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1251947728695459840
24-06-16.17:13:18.593 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947728636739584
24-06-16.17:13:18.601 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:18.601 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:18.603 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:18.604 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:18.605 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:18.605 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:18.605 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:18.610 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947728695459840
24-06-16.17:13:18.613 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:18.613 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:18.614 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:18.614 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:18.615 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"78255630222","timestamp":1718529198607}
24-06-16.17:13:18.615 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:18.616 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:18.616 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:18.629 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"39156579192","timestamp":1718529198618}
24-06-16.17:13:19.066 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:19.070 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:19.072 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:19.078 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1251947730763251712
24-06-16.17:13:19.081 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1251947730775834624
24-06-16.17:13:19.084 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1251947730788417536
24-06-16.17:13:19.085 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:19.092 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:19.100 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947730763251712
24-06-16.17:13:19.106 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:19.106 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:19.107 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1251947730884886528
24-06-16.17:13:19.108 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:19.108 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:19.108 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:19.109 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:19.110 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:19.121 [http-nio-8091-exec-9] INFO  AbstractRaffleActivityPartake - 创建参与活动订单 userId:matthew activityId:100001 userRaffleOrderEntity:{"activityId":100001,"activityName":"测试活动","orderId":"1251947730763251712","orderState":"create","orderTime":1718529199000,"strategyId":100006,"userId":"matthew"}
24-06-16.17:13:19.121 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947730763251712
24-06-16.17:13:19.127 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947730775834624
24-06-16.17:13:19.129 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:19.129 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:19.133 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:19.133 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:19.134 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.17:13:19.134 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.17:13:19.134 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:19.136 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:19.136 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:19.138 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.17:13:19.138 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.17:13:19.144 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:19.144 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:19.144 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.17:13:19.144 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.17:13:19.144 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.17:13:19.144 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.17:13:19.144 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"78008820628","timestamp":1718529199114}
24-06-16.17:13:19.152 [http-nio-8091-exec-9] ERROR AwardRepository        - 写入中奖记录，唯一索引冲突 userId: matthew activityId: 100001 awardId: 104
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'
### The error may exist in file [/Users/matthew/Desktop/lottery/lottery-app/target/classes/mybatis/mapper/UserAwardRecordMapple.xml]
### The error may involve cn.matthew.infrastructure.persistent.dao.IUserAwardRecordDao.insert-Inline
### The error occurred while setting parameters
### SQL: insert into user_award_record_000(             user_id, activity_id, strategy_id, order_id, award_id, award_title, award_time, award_state, create_time, update_time         ) values (                      ?,?,?,?,?,?,?,?,now(),now()                  )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'
; Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy134.insert(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.AwardRepository.lambda$saveUserAwardRecord$0(AwardRepository.java:78)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at cn.matthew.infrastructure.persistent.repository.AwardRepository.saveUserAwardRecord(AwardRepository.java:75)
	at cn.matthew.domain.award.service.AwardService.saveUserAwardRecord(AwardService.java:47)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:118)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at sun.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy174.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 64 common frames omitted
24-06-16.17:13:19.175 [http-nio-8091-exec-9] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.infrastructure.persistent.repository.AwardRepository.lambda$saveUserAwardRecord$0(AwardRepository.java:92)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at cn.matthew.infrastructure.persistent.repository.AwardRepository.saveUserAwardRecord(AwardRepository.java:75)
	at cn.matthew.domain.award.service.AwardService.saveUserAwardRecord(AwardService.java:47)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:118)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'
### The error may exist in file [/Users/matthew/Desktop/lottery/lottery-app/target/classes/mybatis/mapper/UserAwardRecordMapple.xml]
### The error may involve cn.matthew.infrastructure.persistent.dao.IUserAwardRecordDao.insert-Inline
### The error occurred while setting parameters
### SQL: insert into user_award_record_000(             user_id, activity_id, strategy_id, order_id, award_id, award_title, award_time, award_state, create_time, update_time         ) values (                      ?,?,?,?,?,?,?,?,now(),now()                  )
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'
; Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy134.insert(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.AwardRepository.lambda$saveUserAwardRecord$0(AwardRepository.java:78)
	... 57 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1251947730763251712' for key 'user_award_record_000.uq_order_id'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at sun.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy174.update(Unknown Source)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.GeneratedMethodAccessor56.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 64 common frames omitted
24-06-16.17:13:19.178 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947730788417536
24-06-16.17:13:19.185 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:19.185 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:19.188 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:19.188 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:19.190 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"65773626221","timestamp":1718529199149}
24-06-16.17:13:19.190 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:19.192 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:19.192 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:19.204 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947730884886528
24-06-16.17:13:19.207 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"25513921730","timestamp":1718529199194}
24-06-16.17:13:19.210 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:19.211 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:19.214 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:19.214 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:19.221 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:19.221 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:19.222 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:19.224 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:19.226 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:19.226 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:19.243 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"69361220934","timestamp":1718529199230}
24-06-16.17:13:19.910 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:19.912 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:19.935 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1251947734357770240
24-06-16.17:13:19.935 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1251947734357770241
24-06-16.17:13:19.945 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947734357770241
24-06-16.17:13:19.949 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:19.949 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:19.950 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:19.950 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:19.951 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:19.951 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:19.951 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:19.959 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947734357770240
24-06-16.17:13:19.961 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"12754420870","timestamp":1718529199952}
24-06-16.17:13:19.963 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:19.963 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:19.966 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:19.966 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:19.966 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:19.967 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:19.967 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:19.975 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"96545183880","timestamp":1718529199969}
24-06-16.17:13:20.018 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.021 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.022 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.025 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1251947734735257600
24-06-16.17:13:20.026 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1251947734739451904
24-06-16.17:13:20.027 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1251947734743646208
24-06-16.17:13:20.030 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947734735257600
24-06-16.17:13:20.032 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:20.032 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:20.033 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:20.033 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:20.033 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:20.034 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:20.034 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:20.037 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947734739451904
24-06-16.17:13:20.039 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:20.039 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:20.041 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:20.041 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:20.041 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:20.041 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"27591829271","timestamp":1718529200034}
24-06-16.17:13:20.042 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:20.042 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:20.044 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947734743646208
24-06-16.17:13:20.046 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.17:13:20.046 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.17:13:20.047 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.17:13:20.047 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.17:13:20.048 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:20.048 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:20.048 [http-nio-8091-exec-3] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.17:13:20.048 [http-nio-8091-exec-3] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.17:13:20.048 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.17:13:20.048 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.17:13:20.049 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"66506363479","timestamp":1718529200043}
24-06-16.17:13:20.062 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"67655683444","timestamp":1718529200050}
24-06-16.17:13:20.377 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.382 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.389 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1251947736261984256
24-06-16.17:13:20.390 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1251947736266178560
24-06-16.17:13:20.405 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947736261984256
24-06-16.17:13:20.410 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:20.410 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:20.412 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:20.412 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:20.413 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:20.413 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:20.413 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:20.414 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:20.414 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:20.414 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:20.416 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947736266178560
24-06-16.17:13:20.417 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:20.417 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:20.418 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:20.418 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:20.418 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:20.419 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:20.419 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:20.420 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"90455486488","timestamp":1718529200415}
24-06-16.17:13:20.426 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"94056021806","timestamp":1718529200419}
24-06-16.17:13:20.639 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.644 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.644 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.649 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1251947737352503296
24-06-16.17:13:20.654 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1251947737373474817
24-06-16.17:13:20.654 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1251947737373474816
24-06-16.17:13:20.663 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947737352503296
24-06-16.17:13:20.668 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:20.668 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:20.670 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:20.670 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:20.671 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:20.672 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:20.672 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:20.678 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947737373474816
24-06-16.17:13:20.687 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:20.687 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:20.688 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"38278382400","timestamp":1718529200673}
24-06-16.17:13:20.690 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:20.690 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:20.692 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:20.692 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:20.692 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:20.693 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:20.693 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947737373474817
24-06-16.17:13:20.694 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:20.694 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:20.696 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:20.696 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:20.698 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:20.698 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:20.699 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:20.700 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:20.700 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:20.700 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:20.701 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:20.701 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:20.704 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"70935853087","timestamp":1718529200695}
24-06-16.17:13:20.715 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"52528443615","timestamp":1718529200702}
24-06-16.17:13:20.830 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.831 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:20.835 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1251947738132643840
24-06-16.17:13:20.835 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1251947738132643841
24-06-16.17:13:20.842 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947738132643840
24-06-16.17:13:20.864 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:20.864 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:20.867 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:20.867 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:20.868 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:20.869 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:20.869 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:20.875 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947738132643841
24-06-16.17:13:20.879 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.17:13:20.879 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.17:13:20.881 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.17:13:20.881 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.17:13:20.882 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"79207374495","timestamp":1718529200871}
24-06-16.17:13:20.882 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:20.882 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:20.883 [http-nio-8091-exec-2] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.17:13:20.883 [http-nio-8091-exec-2] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.17:13:20.883 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.17:13:20.883 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.17:13:20.889 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"88167651060","timestamp":1718529200883}
24-06-16.17:13:21.276 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.280 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.286 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1251947740024274944
24-06-16.17:13:21.287 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1251947740028469248
24-06-16.17:13:21.298 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947740024274944
24-06-16.17:13:21.303 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:21.303 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:21.306 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:21.306 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:21.307 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:21.308 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:21.308 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:21.310 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.311 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947740028469248
24-06-16.17:13:21.314 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.317 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.17:13:21.317 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.17:13:21.317 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.318 [http-nio-8091-exec-3] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy121.queryNoUsedRaffleOrder(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at cn.bugstack.middleware.db.router.DBRouterJoinPoint.doRouter(DBRouterJoinPoint.java:65)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy122.queryNoUsedRaffleOrder(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.queryNoUsedRaffleOrder(ActivityRepository.java:275)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.queryNoUsedRaffleOrder(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:50)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:80)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 91 common frames omitted
24-06-16.17:13:21.319 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.17:13:21.319 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.17:13:21.322 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:21.322 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:21.322 [http-nio-8091-exec-6] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.17:13:21.322 [http-nio-8091-exec-6] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.17:13:21.322 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.17:13:21.322 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.17:13:21.322 [http-nio-8091-exec-9] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy121.queryNoUsedRaffleOrder(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at cn.bugstack.middleware.db.router.DBRouterJoinPoint.doRouter(DBRouterJoinPoint.java:65)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy122.queryNoUsedRaffleOrder(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.queryNoUsedRaffleOrder(ActivityRepository.java:275)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.queryNoUsedRaffleOrder(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:50)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:80)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 91 common frames omitted
24-06-16.17:13:21.322 [http-nio-8091-exec-8] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy121.queryNoUsedRaffleOrder(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at cn.bugstack.middleware.db.router.DBRouterJoinPoint.doRouter(DBRouterJoinPoint.java:65)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy122.queryNoUsedRaffleOrder(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.queryNoUsedRaffleOrder(ActivityRepository.java:275)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.queryNoUsedRaffleOrder(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:50)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:80)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 91 common frames omitted
24-06-16.17:13:21.324 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"57616334463","timestamp":1718529201310}
24-06-16.17:13:21.337 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"94937317191","timestamp":1718529201324}
24-06-16.17:13:21.776 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.776 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.792 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1251947742146592768
24-06-16.17:13:21.793 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1251947742150787072
24-06-16.17:13:21.805 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947742146592768
24-06-16.17:13:21.808 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:21.808 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:21.810 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:21.810 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:21.812 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:21.812 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:21.812 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:21.813 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:21.813 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:21.813 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:21.815 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947742150787072
24-06-16.17:13:21.817 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:21.817 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:21.819 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:21.819 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:21.820 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:21.820 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:21.820 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:21.823 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"70065926476","timestamp":1718529201815}
24-06-16.17:13:21.831 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"54873972037","timestamp":1718529201821}
24-06-16.17:13:21.983 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.987 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.988 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:21.998 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1251947743010619392
24-06-16.17:13:21.999 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1251947743014813696
24-06-16.17:13:21.999 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1251947743014813697
24-06-16.17:13:22.011 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947743010619392
24-06-16.17:13:22.014 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:22.014 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:22.015 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:22.015 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:22.015 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:22.016 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.016 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:22.020 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947743014813696
24-06-16.17:13:22.021 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:22.022 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:22.023 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"26006674884","timestamp":1718529202016}
24-06-16.17:13:22.023 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:22.023 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:22.023 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:22.024 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.024 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:22.027 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947743014813697
24-06-16.17:13:22.029 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:22.029 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:22.030 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:22.030 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:22.032 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:22.032 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:22.032 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:22.032 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:22.033 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"24690474438","timestamp":1718529202025}
24-06-16.17:13:22.033 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.033 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:22.047 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"45243369304","timestamp":1718529202035}
24-06-16.17:13:22.285 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:22.289 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:22.293 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1251947744247939072
24-06-16.17:13:22.295 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1251947744256327680
24-06-16.17:13:22.307 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947744247939072
24-06-16.17:13:22.309 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:22.309 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:22.310 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:22.310 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:22.312 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:22.312 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:22.312 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:22.312 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:22.313 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.313 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:22.314 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947744256327680
24-06-16.17:13:22.316 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:22.316 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:22.317 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:22.317 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:22.318 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:22.318 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.319 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:22.320 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"06793955207","timestamp":1718529202313}
24-06-16.17:13:22.324 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"99389905988","timestamp":1718529202319}
24-06-16.17:13:22.757 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:22.760 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:22.784 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:22.784 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1251947746307342336
24-06-16.17:13:22.785 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1251947746311536640
24-06-16.17:13:22.787 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:22.787 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:22.788 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1251947746324119552
24-06-16.17:13:22.791 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1251947746336702464
24-06-16.17:13:22.792 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1251947746340896768
24-06-16.17:13:22.794 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947746307342336
24-06-16.17:13:22.797 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:22.797 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:22.798 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:22.798 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:22.799 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:22.799 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.799 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:22.801 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947746311536640
24-06-16.17:13:22.802 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.17:13:22.802 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.17:13:22.803 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.17:13:22.803 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.17:13:22.804 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:22.804 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:22.804 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.17:13:22.804 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.17:13:22.804 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.17:13:22.804 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.17:13:22.804 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"95517468763","timestamp":1718529202800}
24-06-16.17:13:22.806 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947746324119552
24-06-16.17:13:22.807 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:22.807 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:22.808 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:22.808 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:22.810 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:22.810 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:22.810 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:22.810 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:22.810 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.810 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:22.811 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"56601041351","timestamp":1718529202804}
24-06-16.17:13:22.814 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947746336702464
24-06-16.17:13:22.816 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:22.816 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:22.817 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:22.817 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:22.818 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:22.818 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.818 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:22.819 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"39498564891","timestamp":1718529202811}
24-06-16.17:13:22.822 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947746340896768
24-06-16.17:13:22.826 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:22.826 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:22.826 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"11179336537","timestamp":1718529202818}
24-06-16.17:13:22.828 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:22.828 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:22.830 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:22.830 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:22.830 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:22.830 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:22.831 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:22.832 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:22.841 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"02412330894","timestamp":1718529202833}
24-06-16.17:13:23.239 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:23.242 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:23.253 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1251947748274470913
24-06-16.17:13:23.253 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1251947748274470912
24-06-16.17:13:23.261 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947748274470912
24-06-16.17:13:23.265 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:23.265 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:23.266 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:23.266 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:23.267 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:23.267 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:23.267 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:23.270 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947748274470913
24-06-16.17:13:23.273 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:23.273 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:23.274 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:23.275 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:23.275 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:23.276 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:23.276 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:23.276 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"97470974880","timestamp":1718529203268}
24-06-16.17:13:23.286 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"71564091968","timestamp":1718529203278}
24-06-16.17:13:23.470 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:23.472 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:23.473 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:23.476 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1251947749209800704
24-06-16.17:13:23.477 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1251947749213995008
24-06-16.17:13:23.478 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1251947749218189312
24-06-16.17:13:23.487 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947749209800704
24-06-16.17:13:23.489 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.17:13:23.489 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.17:13:23.490 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.17:13:23.490 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:23.492 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:23.492 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:23.492 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.17:13:23.493 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.17:13:23.493 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:23.493 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.17:13:23.495 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947749213995008
24-06-16.17:13:23.498 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:23.498 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:23.500 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:23.500 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:23.501 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"89012218557","timestamp":1718529203494}
24-06-16.17:13:23.502 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:23.502 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:23.502 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:23.503 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:23.504 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:23.504 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:23.505 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947749218189312
24-06-16.17:13:23.508 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:23.508 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:23.510 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:23.510 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:23.511 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:23.512 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:23.512 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:23.512 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:23.512 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:23.513 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:23.513 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"22981466206","timestamp":1718529203505}
24-06-16.17:13:23.526 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"19406159501","timestamp":1718529203514}
24-06-16.17:13:23.749 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:23.754 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:23.755 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1251947750380011520
24-06-16.17:13:23.761 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1251947750405177344
24-06-16.17:13:23.786 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947750380011520
24-06-16.17:13:23.789 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.17:13:23.789 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.17:13:23.790 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.17:13:23.790 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.17:13:23.791 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.17:13:23.791 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:23.791 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.17:13:23.796 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947750405177344
24-06-16.17:13:23.799 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.17:13:23.800 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.17:13:23.802 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.17:13:23.802 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.17:13:23.802 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.17:13:23.803 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"91208346515","timestamp":1718529203792}
24-06-16.17:13:23.804 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:23.804 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.17:13:23.814 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"49538606306","timestamp":1718529203805}
24-06-16.17:13:24.233 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:24.236 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:24.236 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:24.240 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1251947752414248960
24-06-16.17:13:24.241 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1251947752418443264
24-06-16.17:13:24.241 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1251947752418443265
24-06-16.17:13:24.259 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947752414248960
24-06-16.17:13:24.261 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:24.262 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:24.263 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:24.263 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:24.264 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:24.264 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:24.264 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:24.265 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:24.265 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:24.265 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:24.267 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947752418443264
24-06-16.17:13:24.268 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:24.268 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:24.269 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:24.269 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:24.270 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:24.270 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:24.270 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:24.273 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"09815120726","timestamp":1718529204266}
24-06-16.17:13:24.274 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947752418443265
24-06-16.17:13:24.275 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:24.275 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:24.277 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:24.277 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:24.277 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:24.277 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"01229971292","timestamp":1718529204271}
24-06-16.17:13:24.278 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:24.278 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:24.283 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"56021315171","timestamp":1718529204278}
24-06-16.17:13:24.358 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:24.363 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:24.365 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1251947752938536960
24-06-16.17:13:24.367 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1251947752946925568
24-06-16.17:13:24.371 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947752938536960
24-06-16.17:13:24.373 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:24.373 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:24.374 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:24.374 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:24.375 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:24.375 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:24.375 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:24.375 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:24.375 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:24.375 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:24.376 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947752946925568
24-06-16.17:13:24.378 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.17:13:24.378 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.17:13:24.379 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.17:13:24.379 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.17:13:24.379 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.17:13:24.379 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:24.379 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.17:13:24.381 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"93877136875","timestamp":1718529204376}
24-06-16.17:13:24.387 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"45625969512","timestamp":1718529204380}
24-06-16.17:13:25.235 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:25.235 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:25.265 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1251947756713410560
24-06-16.17:13:25.265 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1251947756713410561
24-06-16.17:13:25.291 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947756713410561
24-06-16.17:13:25.306 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.17:13:25.306 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.17:13:25.314 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:25.316 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.17:13:25.316 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.17:13:25.317 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947756713410560
24-06-16.17:13:25.317 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.17:13:25.318 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:25.318 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.17:13:25.320 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.17:13:25.320 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.17:13:25.320 [http-nio-8091-exec-9] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy121.queryNoUsedRaffleOrder(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at cn.bugstack.middleware.db.router.DBRouterJoinPoint.doRouter(DBRouterJoinPoint.java:65)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy122.queryNoUsedRaffleOrder(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.queryNoUsedRaffleOrder(ActivityRepository.java:275)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.queryNoUsedRaffleOrder(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:50)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:80)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 91 common frames omitted
24-06-16.17:13:25.322 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.17:13:25.322 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.17:13:25.323 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.17:13:25.324 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:25.324 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.17:13:25.325 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:25.331 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"92601276947","timestamp":1718529205320}
24-06-16.17:13:25.330 [http-nio-8091-exec-8] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:96)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy104.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy121.queryNoUsedRaffleOrder(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor74.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at cn.bugstack.middleware.db.router.DBRouterJoinPoint.doRouter(DBRouterJoinPoint.java:65)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at com.sun.proxy.$Proxy122.queryNoUsedRaffleOrder(Unknown Source)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository.queryNoUsedRaffleOrder(ActivityRepository.java:275)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$FastClassBySpringCGLIB$$8e55dbe6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at cn.matthew.infrastructure.persistent.repository.ActivityRepository$$EnhancerBySpringCGLIB$$9f362167.queryNoUsedRaffleOrder(<generated>)
	at cn.matthew.domain.activity.service.partake.AbstractRaffleActivityPartakeService.createOrder(AbstractRaffleActivityPartake.java:50)
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:99)
	at sun.reflect.GeneratedMethodAccessor73.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:80)
	at sun.reflect.GeneratedMethodAccessor29.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 91 common frames omitted
24-06-16.17:13:25.334 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"99970311329","timestamp":1718529205326}
24-06-16.17:13:25.341 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.17:13:25.361 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1251947757116063744
24-06-16.17:13:25.385 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1251947757116063744
24-06-16.17:13:25.398 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.17:13:25.398 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.17:13:25.404 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.17:13:25.404 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:25.406 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.17:13:25.406 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.17:13:25.406 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.17:13:25.407 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.17:13:25.408 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.17:13:25.408 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.17:13:25.423 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"17121343156","timestamp":1718529205410}
24-06-16.17:20:52.065 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Node -1 disconnected.
24-06-16.17:20:52.065 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Node -1 disconnected.
24-06-16.17:22:15.405 [kafka-producer-network-thread | producer-1] INFO  NetworkClient          - [Producer clientId=producer-1] Node -1 disconnected.
24-06-16.17:50:27.901 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Disconnecting from node 1 due to request timeout.
24-06-16.17:50:27.901 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Disconnecting from node 1 due to request timeout.
24-06-16.17:50:27.917 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Cancelled in-flight FETCH request with correlation id 3258 due to node 1 being disconnected (elapsed time since creation: 911812ms, elapsed time since send: 911812ms, request timeout: 30000ms)
24-06-16.17:50:27.917 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Cancelled in-flight FETCH request with correlation id 3258 due to node 1 being disconnected (elapsed time since creation: 911812ms, elapsed time since send: 911812ms, request timeout: 30000ms)
24-06-16.17:50:27.921 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.17:50:27.928 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.17:50:27.929 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.929 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.931 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Client requested disconnect from node 2147483646
24-06-16.17:50:27.931 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Client requested disconnect from node 2147483646
24-06-16.17:50:27.933 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  FetchSessionHandler    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Error sending fetch request (sessionId=197064028, epoch=2779) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
24-06-16.17:50:27.933 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  FetchSessionHandler    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Error sending fetch request (sessionId=1465000770, epoch=2779) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
24-06-16.17:50:27.943 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.943 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.944 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.944 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.944 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.944 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.944 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.17:50:27.945 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.17:50:27.945 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:27.945 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:28.060 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:28.062 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.17:50:29.654 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=15m41s349ms).
24-06-16.17:50:33.690 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=15m41s351ms).
24-06-16.17:50:33.704 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=15m41s357ms).
24-06-16.17:53:45.131 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=45s446ms).
24-06-16.17:53:49.169 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=45s455ms).
24-06-16.17:53:49.202 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=45s455ms).
24-06-16.18:15:12.828 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.18:15:12.828 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.18:15:12.829 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.829 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.829 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Client requested disconnect from node 2147483646
24-06-16.18:15:12.829 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Client requested disconnect from node 2147483646
24-06-16.18:15:12.832 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.832 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.833 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.833 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.833 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.833 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.18:15:12.833 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.879 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:12.940 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.18:15:17.450 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=17m20s502ms).
24-06-16.18:15:21.487 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=17m20s502ms).
24-06-16.18:15:21.531 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=17m20s502ms).
24-06-16.19:03:59.967 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:03:59.967 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:03:59.967 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:03:59.967 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:03:59.967 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Client requested disconnect from node 2147483646
24-06-16.19:03:59.967 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Client requested disconnect from node 2147483646
24-06-16.19:03:59.971 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:03:59.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:03:59.971 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:03:59.971 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:03:59.971 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:03:59.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:03:59.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:03:59.971 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:04:00.086 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:04:00.086 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:04:08.088 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=16m50s173ms).
24-06-16.19:04:12.126 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=16m50s164ms).
24-06-16.19:04:12.176 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=16m50s164ms).
24-06-16.19:20:53.846 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:20:53.846 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:20:53.851 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.851 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.851 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Client requested disconnect from node 2147483646
24-06-16.19:20:53.852 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Client requested disconnect from node 2147483646
24-06-16.19:20:53.857 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.857 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.857 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.857 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.858 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.858 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.858 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:20:53.858 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:20:53.858 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.858 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:20:53.963 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:21:14.898 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=16m36s834ms).
24-06-16.19:21:18.952 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=16m36s836ms).
24-06-16.19:21:18.994 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=16m36s830ms).
24-06-16.19:35:39.841 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:35:39.841 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:35:39.841 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:39.841 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:39.842 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Client requested disconnect from node 2147483646
24-06-16.19:35:39.842 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Client requested disconnect from node 2147483646
24-06-16.19:35:39.846 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:39.846 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:35:39.846 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:39.846 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:39.847 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:39.847 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:35:39.847 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:40.021 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:40.022 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:35:45.061 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=10m30s95ms).
24-06-16.19:35:49.103 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=10m30s95ms).
24-06-16.19:35:49.152 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=10m30s95ms).
24-06-16.19:48:10.476 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:48:10.477 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:10.477 [kafka-coordinator-heartbeat-thread | sku-clear-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Client requested disconnect from node 2147483646
24-06-16.19:48:10.476 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:48:10.477 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:10.477 [kafka-coordinator-heartbeat-thread | sku-deduct-group] INFO  NetworkClient          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Client requested disconnect from node 2147483646
24-06-16.19:48:10.515 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:10.519 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:10.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:10.519 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:10.519 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Group coordinator kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
24-06-16.19:48:10.519 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Requesting disconnect from last known coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:10.579 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:10.623 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.19:48:25.599 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=8m9s26ms).
24-06-16.19:48:29.633 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=8m9s27ms).
24-06-16.19:48:29.686 [Retail_HikariCP housekeeper] WARN  HikariPool             - Retail_HikariCP - Thread starvation or clock leap detected (housekeeper delta=8m9s27ms).
24-06-16.21:04:12.487 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Revoke previously assigned partitions sku-deduct-topic-0
24-06-16.21:04:12.487 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Revoke previously assigned partitions sku-clear-topic-0
24-06-16.21:04:12.488 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions revoked: [sku-clear-topic-0]
24-06-16.21:04:12.488 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions revoked: [sku-deduct-topic-0]
24-06-16.21:04:12.488 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Member consumer-sku-deduct-group-1-b623a202-f907-4a72-947b-e6653ba24ccc sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-16.21:04:12.488 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Member consumer-sku-clear-group-2-c6b2b638-7061-46c8-bfd0-00e1f8ccc5f4 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-16.21:04:12.491 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:04:12.491 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:04:12.491 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:04:12.491 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:04:12.491 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Unsubscribed all topics or patterns and assigned partitions
24-06-16.21:04:12.491 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Unsubscribed all topics or patterns and assigned partitions
24-06-16.21:04:12.492 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:04:12.492 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:04:12.492 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:04:12.492 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:04:12.538 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:04:12.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:04:12.538 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:04:12.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:04:12.538 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-16.21:04:12.538 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-16.21:04:12.542 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-deduct-group-1 unregistered
24-06-16.21:04:12.542 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-clear-group-2 unregistered
24-06-16.21:04:12.542 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: Consumer stopped
24-06-16.21:04:12.542 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: Consumer stopped
24-06-16.21:04:12.551 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-16.21:04:12.552 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:04:12.552 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:04:12.552 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-16.21:04:12.552 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-16.21:07:41.515 [main            ] INFO  Application            - Starting Application using Java 1.8.0_402 on MacBook-Air.local with PID 60419 (/Users/matthew/Desktop/lottery/lottery-app/target/classes started by matthew in /Users/matthew/Desktop/lottery)
24-06-16.21:07:41.517 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-06-16.21:07:42.102 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-16.21:07:42.104 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-16.21:07:42.123 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
24-06-16.21:07:42.513 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-06-16.21:07:42.518 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-06-16.21:07:42.518 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-06-16.21:07:42.518 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-06-16.21:07:42.562 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-06-16.21:07:42.562 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1019 ms
24-06-16.21:07:42.928 [main            ] INFO  Version                - Redisson 3.26.0
24-06-16.21:07:42.945 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-16.21:07:43.032 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-16.21:07:43.043 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-16.21:07:43.717 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-16.21:07:43.783 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-deduct-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-deduct-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-16.21:07:43.905 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.21:07:43.905 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.21:07:43.905 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1718543263904
24-06-16.21:07:43.912 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Subscribed to topic(s): sku-deduct-topic
24-06-16.21:07:43.919 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-clear-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-clear-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-16.21:07:43.924 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.21:07:43.924 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.21:07:43.924 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1718543263924
24-06-16.21:07:43.928 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Subscribed to topic(s): sku-clear-topic
24-06-16.21:07:43.929 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-06-16.21:07:43.935 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-06-16.21:07:43.946 [main            ] INFO  Application            - Started Application in 2.693 seconds (JVM running for 3.139)
24-06-16.21:07:44.093 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-16.21:07:44.093 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-16.21:07:44.094 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.21:07:44.094 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.21:07:44.108 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.21:07:44.108 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.21:07:44.115 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-16.21:07:44.119 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-16.21:07:44.141 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: need to re-join with the given member-id
24-06-16.21:07:44.141 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: need to re-join with the given member-id
24-06-16.21:07:44.141 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-16.21:07:44.141 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-16.21:07:44.190 [RMI TCP Connection(1)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-06-16.21:07:44.190 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-06-16.21:07:44.191 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.21:07:44.218 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 28 ms
24-06-16.21:07:44.693 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.21:07:44.706 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.21:07:44.733 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.21:07:47.174 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully joined group with generation Generation{generationId=245, memberId='consumer-sku-deduct-group-1-716bc80c-cf2b-451f-b674-ccd55053ce74', protocol='range'}
24-06-16.21:07:47.178 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully joined group with generation Generation{generationId=247, memberId='consumer-sku-clear-group-2-426a99a1-7b98-429f-aaf1-05ae8be33456', protocol='range'}
24-06-16.21:07:47.180 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Finished assignment for group at generation 245: {consumer-sku-deduct-group-1-716bc80c-cf2b-451f-b674-ccd55053ce74=Assignment(partitions=[sku-deduct-topic-0])}
24-06-16.21:07:47.180 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Finished assignment for group at generation 247: {consumer-sku-clear-group-2-426a99a1-7b98-429f-aaf1-05ae8be33456=Assignment(partitions=[sku-clear-topic-0])}
24-06-16.21:07:47.217 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully synced group in generation Generation{generationId=245, memberId='consumer-sku-deduct-group-1-716bc80c-cf2b-451f-b674-ccd55053ce74', protocol='range'}
24-06-16.21:07:47.217 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully synced group in generation Generation{generationId=247, memberId='consumer-sku-clear-group-2-426a99a1-7b98-429f-aaf1-05ae8be33456', protocol='range'}
24-06-16.21:07:47.218 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Notifying assignor about the new Assignment(partitions=[sku-clear-topic-0])
24-06-16.21:07:47.218 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Notifying assignor about the new Assignment(partitions=[sku-deduct-topic-0])
24-06-16.21:07:47.223 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Adding newly assigned partitions: sku-clear-topic-0
24-06-16.21:07:47.223 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Adding newly assigned partitions: sku-deduct-topic-0
24-06-16.21:07:47.240 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Setting offset for partition sku-deduct-topic-0 to the committed offset FetchPosition{offset=80, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-16.21:07:47.240 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Setting offset for partition sku-clear-topic-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-16.21:07:47.240 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions assigned: [sku-deduct-topic-0]
24-06-16.21:07:47.240 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions assigned: [sku-clear-topic-0]
24-06-16.21:07:55.125 [http-nio-8091-exec-2] INFO  RaffleActivityController - 根据活动ID装配开始，活动ID为：100001
24-06-16.21:07:55.138 [http-nio-8091-exec-2] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.21:07:55.171 [http-nio-8091-exec-2] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.21:07:55.204 [http-nio-8091-exec-2] INFO  ActivityRepository     - 预热SKU缓存成功，SKU: 999 库存总量为: 1000000
24-06-16.21:07:55.261 [http-nio-8091-exec-2] INFO  RaffleActivityController - 根据活动ID装配完毕，活动ID为：100001
24-06-16.21:08:11.730 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:11.730 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:11.730 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:11.745 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:11.745 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:11.747 [http-nio-8091-exec-3] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:11.747 [http-nio-8091-exec-7] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:11.808 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252006839957061632
24-06-16.21:08:11.859 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006839957061632
24-06-16.21:08:11.875 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:08:11.876 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:08:11.892 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:08:11.892 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:08:11.893 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:08:11.910 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:11.910 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:08:12.159 [http-nio-8091-exec-5] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-16.21:08:12.159 [http-nio-8091-exec-5] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-16.21:08:12.177 [http-nio-8091-exec-5] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.21:08:12.177 [http-nio-8091-exec-5] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.21:08:12.177 [http-nio-8091-exec-5] INFO  AppInfoParser          - Kafka startTimeMs: 1718543292177
24-06-16.21:08:12.184 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.21:08:12.190 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition send-award-topic-0 to 0 since the associated topicId changed from null to 7B2TfuZETI-OeTtx5TJ86g
24-06-16.21:08:12.208 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"21321908034","timestamp":1718543291915}
24-06-16.21:08:12.539 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:12.539 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:12.544 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:12.550 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252006843069235200
24-06-16.21:08:12.550 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:12.550 [http-nio-8091-exec-8] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:12.559 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:12.559 [http-nio-8091-exec-10] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:12.575 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006843069235200
24-06-16.21:08:12.580 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:08:12.581 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:08:12.594 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:08:12.594 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:08:12.597 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:08:12.597 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:08:12.597 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:08:12.598 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:08:12.600 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:12.600 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:08:12.624 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"56323351052","timestamp":1718543292604}
24-06-16.21:08:12.731 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:12.733 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:12.734 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:12.743 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252006843878735872
24-06-16.21:08:12.744 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:12.744 [http-nio-8091-exec-6] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:12.747 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:12.747 [http-nio-8091-exec-7] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:12.757 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006843878735872
24-06-16.21:08:12.765 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:08:12.766 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:08:12.779 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:08:12.779 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:08:12.781 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:08:12.784 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:12.785 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:08:12.807 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"10111135805","timestamp":1718543292790}
24-06-16.21:08:13.374 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:13.374 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:13.374 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:13.386 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:13.388 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:13.390 [http-nio-8091-exec-5] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:13.390 [http-nio-8091-exec-8] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:13.405 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252006846655365120
24-06-16.21:08:13.423 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006846655365120
24-06-16.21:08:13.429 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:08:13.429 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:08:13.432 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:08:13.432 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:08:13.433 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:08:13.433 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:13.433 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:08:13.441 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"28790901328","timestamp":1718543293435}
24-06-16.21:08:13.583 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:13.584 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:13.594 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:13.595 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:13.595 [http-nio-8091-exec-1] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:13.617 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:13.618 [http-nio-8091-exec-4] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:13.620 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252006847557140480
24-06-16.21:08:13.650 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006847557140480
24-06-16.21:08:13.657 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:08:13.658 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:08:13.662 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:08:13.662 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:08:13.664 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:08:13.666 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:13.666 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:08:13.695 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"76471095677","timestamp":1718543293669}
24-06-16.21:08:14.072 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.072 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.074 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.082 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:14.082 [http-nio-8091-exec-3] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:14.084 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252006849503297536
24-06-16.21:08:14.085 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:14.085 [http-nio-8091-exec-7] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:14.096 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006849503297536
24-06-16.21:08:14.103 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:08:14.103 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:08:14.108 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:08:14.108 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:08:14.112 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:08:14.112 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:08:14.112 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:08:14.113 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:08:14.114 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:14.114 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:08:14.123 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"25999536348","timestamp":1718543294116}
24-06-16.21:08:14.434 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.434 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.438 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.444 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252006851013246976
24-06-16.21:08:14.445 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:14.445 [http-nio-8091-exec-5] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:14.449 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:14.449 [http-nio-8091-exec-8] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:14.466 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006851013246976
24-06-16.21:08:14.470 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:08:14.470 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:08:14.474 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:08:14.474 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:08:14.477 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:08:14.477 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:08:14.477 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:08:14.477 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:08:14.478 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:14.478 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:08:14.488 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"92912435870","timestamp":1718543294479}
24-06-16.21:08:14.844 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.845 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.846 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:14.856 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:14.856 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:14.856 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252006852741300224
24-06-16.21:08:14.856 [http-nio-8091-exec-4] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:14.856 [http-nio-8091-exec-1] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:14.882 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006852741300224
24-06-16.21:08:14.891 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:08:14.891 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:08:14.908 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:08:14.908 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:08:14.913 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:08:14.913 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:08:14.913 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:08:14.914 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:08:14.915 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:14.916 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:08:14.949 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"22458012378","timestamp":1718543294920}
24-06-16.21:08:15.818 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:15.822 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:15.826 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:15.833 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:15.834 [http-nio-8091-exec-3] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:15.837 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:15.837 [http-nio-8091-exec-7] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:15.850 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252006856910438400
24-06-16.21:08:15.885 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:15.889 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:15.891 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:15.895 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:15.895 [http-nio-8091-exec-6] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:15.900 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:15.904 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:15.904 [http-nio-8091-exec-5] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:15.904 [http-nio-8091-exec-8] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:15.912 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006856910438400
24-06-16.21:08:15.945 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:08:15.945 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:08:15.970 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:08:15.970 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:08:15.992 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:08:15.992 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:08:15.993 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:08:15.993 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:08:15.993 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:08:15.993 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:08:16.217 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"51097993391","timestamp":1718543296007}
24-06-16.21:08:16.758 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:16.758 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:16.758 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:16.769 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:16.769 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:16.775 [http-nio-8091-exec-2] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:16.775 [http-nio-8091-exec-1] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:16.788 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252006860844695552
24-06-16.21:08:16.816 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006860844695552
24-06-16.21:08:16.821 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:08:16.821 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:08:16.825 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:08:16.825 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:08:16.828 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:08:16.828 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:08:16.828 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:08:16.831 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:08:16.840 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:16.840 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:08:16.862 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"24380253576","timestamp":1718543296844}
24-06-16.21:08:17.297 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:17.303 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:17.309 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:08:17.314 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:17.314 [http-nio-8091-exec-3] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:17.318 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252006863067676672
24-06-16.21:08:17.319 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:08:17.320 [http-nio-8091-exec-7] ERROR RaffleActivityController - 活动抽奖失败 userId:matthew activityId:100001
cn.matthew.types.exception.AppException: null
	at cn.matthew.trigger.http.RaffleActivityController.draw(RaffleActivityController.java:110)
	at sun.reflect.GeneratedMethodAccessor41.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-06-16.21:08:17.336 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252006863067676672
24-06-16.21:08:17.342 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:08:17.342 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:08:17.346 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:08:17.346 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:08:17.347 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:08:17.348 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:08:17.349 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:08:17.362 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"20543757914","timestamp":1718543297351}
24-06-16.21:10:46.118 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Revoke previously assigned partitions sku-deduct-topic-0
24-06-16.21:10:46.118 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Revoke previously assigned partitions sku-clear-topic-0
24-06-16.21:10:46.119 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions revoked: [sku-clear-topic-0]
24-06-16.21:10:46.119 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions revoked: [sku-deduct-topic-0]
24-06-16.21:10:46.119 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Member consumer-sku-deduct-group-1-716bc80c-cf2b-451f-b674-ccd55053ce74 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-16.21:10:46.119 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Member consumer-sku-clear-group-2-426a99a1-7b98-429f-aaf1-05ae8be33456 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-16.21:10:46.122 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:10:46.122 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:10:46.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:10:46.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:10:46.122 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Unsubscribed all topics or patterns and assigned partitions
24-06-16.21:10:46.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Unsubscribed all topics or patterns and assigned partitions
24-06-16.21:10:46.123 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:10:46.124 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:10:46.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:10:46.124 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:10:46.131 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:10:46.131 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:10:46.131 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:10:46.131 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:10:46.131 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-16.21:10:46.131 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-16.21:10:46.135 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-clear-group-2 unregistered
24-06-16.21:10:46.135 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-deduct-group-1 unregistered
24-06-16.21:10:46.136 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: Consumer stopped
24-06-16.21:10:46.136 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: Consumer stopped
24-06-16.21:10:46.142 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-16.21:10:46.143 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:10:46.143 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:10:46.143 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-16.21:10:46.143 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
24-06-16.21:10:51.270 [main            ] INFO  Application            - Starting Application using Java 1.8.0_402 on MacBook-Air.local with PID 60899 (/Users/matthew/Desktop/lottery/lottery-app/target/classes started by matthew in /Users/matthew/Desktop/lottery)
24-06-16.21:10:51.271 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-06-16.21:10:51.873 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-16.21:10:51.874 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-16.21:10:51.892 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
24-06-16.21:10:52.322 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-06-16.21:10:52.364 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1070 ms
24-06-16.21:10:52.744 [main            ] INFO  Version                - Redisson 3.26.0
24-06-16.21:10:52.761 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-16.21:10:52.840 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-16.21:10:52.849 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-16.21:10:53.499 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-16.21:10:53.659 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-deduct-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-deduct-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-16.21:10:55.279 [main            ] INFO  Application            - Starting Application using Java 1.8.0_402 on MacBook-Air.local with PID 60918 (/Users/matthew/Desktop/lottery/lottery-app/target/classes started by matthew in /Users/matthew/Desktop/lottery)
24-06-16.21:10:55.280 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-06-16.21:10:55.722 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-06-16.21:10:55.723 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-06-16.21:10:55.739 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
24-06-16.21:10:56.162 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-06-16.21:10:56.166 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-06-16.21:10:56.166 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-06-16.21:10:56.166 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-06-16.21:10:56.208 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-06-16.21:10:56.209 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 910 ms
24-06-16.21:10:56.570 [main            ] INFO  Version                - Redisson 3.26.0
24-06-16.21:10:56.584 [main            ] WARN  DnsServerAddressStreamProviders - Can not find io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider in the classpath, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'
24-06-16.21:10:56.651 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-16.21:10:56.659 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-06-16.21:10:57.166 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-06-16.21:10:57.221 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-deduct-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-deduct-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-16.21:10:57.343 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.21:10:57.343 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.21:10:57.343 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1718543457342
24-06-16.21:10:57.351 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Subscribed to topic(s): sku-deduct-topic
24-06-16.21:10:57.357 [main            ] INFO  ConsumerConfig         - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 1000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sku-clear-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sku-clear-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

24-06-16.21:10:57.360 [main            ] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.21:10:57.360 [main            ] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.21:10:57.361 [main            ] INFO  AppInfoParser          - Kafka startTimeMs: 1718543457360
24-06-16.21:10:57.363 [main            ] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Subscribed to topic(s): sku-clear-topic
24-06-16.21:10:57.364 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-06-16.21:10:57.370 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-06-16.21:10:57.379 [main            ] INFO  Application            - Started Application in 2.316 seconds (JVM running for 2.607)
24-06-16.21:10:57.517 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting the last seen epoch of partition sku-clear-topic-0 to 0 since the associated topicId changed from null to dpyYmhqySGOjKUa7M-VmvQ
24-06-16.21:10:57.517 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting the last seen epoch of partition sku-deduct-topic-0 to 0 since the associated topicId changed from null to OUAQupDCTI6kGFJOV16ciA
24-06-16.21:10:57.518 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.21:10:57.518 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metadata               - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.21:10:57.519 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.21:10:57.520 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null)
24-06-16.21:10:57.533 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-16.21:10:57.534 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-16.21:10:57.571 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: need to re-join with the given member-id
24-06-16.21:10:57.572 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] (Re-)joining group
24-06-16.21:10:57.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: need to re-join with the given member-id
24-06-16.21:10:57.576 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] (Re-)joining group
24-06-16.21:10:57.589 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.21:10:57.590 [RMI TCP Connection(3)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-06-16.21:10:57.590 [RMI TCP Connection(3)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-06-16.21:10:57.591 [RMI TCP Connection(3)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-06-16.21:10:58.041 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.21:10:58.054 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.21:10:58.078 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.21:11:00.590 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully joined group with generation Generation{generationId=249, memberId='consumer-sku-clear-group-2-30b2b352-a6b8-426c-acfb-f260b5d7e467', protocol='range'}
24-06-16.21:11:00.593 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully joined group with generation Generation{generationId=247, memberId='consumer-sku-deduct-group-1-01751584-0ab3-4ccb-85bd-cc563ab56b91', protocol='range'}
24-06-16.21:11:00.596 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Finished assignment for group at generation 247: {consumer-sku-deduct-group-1-01751584-0ab3-4ccb-85bd-cc563ab56b91=Assignment(partitions=[sku-deduct-topic-0])}
24-06-16.21:11:00.596 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Finished assignment for group at generation 249: {consumer-sku-clear-group-2-30b2b352-a6b8-426c-acfb-f260b5d7e467=Assignment(partitions=[sku-clear-topic-0])}
24-06-16.21:11:00.616 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Successfully synced group in generation Generation{generationId=249, memberId='consumer-sku-clear-group-2-30b2b352-a6b8-426c-acfb-f260b5d7e467', protocol='range'}
24-06-16.21:11:00.616 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Successfully synced group in generation Generation{generationId=247, memberId='consumer-sku-deduct-group-1-01751584-0ab3-4ccb-85bd-cc563ab56b91', protocol='range'}
24-06-16.21:11:00.617 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Notifying assignor about the new Assignment(partitions=[sku-clear-topic-0])
24-06-16.21:11:00.617 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Notifying assignor about the new Assignment(partitions=[sku-deduct-topic-0])
24-06-16.21:11:00.621 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Adding newly assigned partitions: sku-clear-topic-0
24-06-16.21:11:00.621 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Adding newly assigned partitions: sku-deduct-topic-0
24-06-16.21:11:00.636 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Setting offset for partition sku-clear-topic-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-16.21:11:00.636 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Setting offset for partition sku-deduct-topic-0 to the committed offset FetchPosition{offset=80, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 1 rack: null)], epoch=0}}
24-06-16.21:11:00.636 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions assigned: [sku-deduct-topic-0]
24-06-16.21:11:00.636 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions assigned: [sku-clear-topic-0]
24-06-16.21:11:06.196 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:06.196 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:06.196 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:06.246 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:06.246 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:06.267 [http-nio-8091-exec-4] INFO  HikariDataSource       - Retail_HikariCP - Starting...
24-06-16.21:11:06.295 [http-nio-8091-exec-4] INFO  HikariDataSource       - Retail_HikariCP - Start completed.
24-06-16.21:11:06.360 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007572081213440
24-06-16.21:11:06.393 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007572081213440
24-06-16.21:11:06.427 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:11:06.428 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:11:06.448 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:11:06.448 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:11:06.455 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:11:06.456 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:11:06.457 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:11:06.462 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:11:06.529 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:06.529 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:11:06.682 [http-nio-8091-exec-4] INFO  ProducerConfig         - Idempotence will be disabled because acks is set to 1, not set to 'all'.
24-06-16.21:11:06.682 [http-nio-8091-exec-4] INFO  ProducerConfig         - ProducerConfig values: 
	acks = 1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 1
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

24-06-16.21:11:06.704 [http-nio-8091-exec-4] INFO  AppInfoParser          - Kafka version: 3.1.2
24-06-16.21:11:06.704 [http-nio-8091-exec-4] INFO  AppInfoParser          - Kafka commitId: f8c67dc3ae0a3265
24-06-16.21:11:06.704 [http-nio-8091-exec-4] INFO  AppInfoParser          - Kafka startTimeMs: 1718543466704
24-06-16.21:11:06.712 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Cluster ID: eJaca9rYT_ikyV0wtNEGPA
24-06-16.21:11:06.717 [kafka-producer-network-thread | producer-1] INFO  Metadata               - [Producer clientId=producer-1] Resetting the last seen epoch of partition send-award-topic-0 to 0 since the associated topicId changed from null to 7B2TfuZETI-OeTtx5TJ86g
24-06-16.21:11:06.725 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"45132332032","timestamp":1718543466556}
24-06-16.21:11:06.757 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:06.760 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:06.773 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:06.777 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252007573830238208
24-06-16.21:11:06.800 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007573830238208
24-06-16.21:11:06.804 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:11:06.804 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:11:06.808 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:11:06.808 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:11:06.809 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:11:06.811 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:06.811 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:11:06.826 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"50690956161","timestamp":1718543466814}
24-06-16.21:11:07.063 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.074 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.074 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.083 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007575113695232
24-06-16.21:11:07.084 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.085 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.111 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007575113695232
24-06-16.21:11:07.117 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:11:07.118 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:11:07.120 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:11:07.120 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:11:07.121 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:11:07.122 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:07.122 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:11:07.139 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"11885027031","timestamp":1718543467125}
24-06-16.21:11:07.479 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.485 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.486 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.495 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.497 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.503 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007576875302912
24-06-16.21:11:07.521 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007576875302912
24-06-16.21:11:07.529 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:11:07.530 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:11:07.536 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:11:07.536 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:11:07.538 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:11:07.540 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:07.540 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:11:07.558 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"30727808906","timestamp":1718543467544}
24-06-16.21:11:07.747 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.749 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.749 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.750 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.758 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.759 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.761 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.772 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252007577999376384
24-06-16.21:11:07.788 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007577999376384
24-06-16.21:11:07.793 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:11:07.794 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:11:07.797 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:11:07.797 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:11:07.802 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:11:07.802 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:11:07.802 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:11:07.803 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:11:07.805 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:07.805 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:11:07.820 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"40552822370","timestamp":1718543467808}
24-06-16.21:11:07.847 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.848 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.854 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:07.859 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.879 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:07.887 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252007578485915648
24-06-16.21:11:07.904 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007578485915648
24-06-16.21:11:07.910 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:11:07.910 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:11:07.912 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:11:07.913 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:11:07.913 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:11:07.914 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:07.915 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:11:07.931 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"77237773273","timestamp":1718543467918}
24-06-16.21:11:08.362 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:08.375 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:08.381 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252007580557901824
24-06-16.21:11:08.386 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:08.387 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:08.398 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:08.408 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007580557901824
24-06-16.21:11:08.415 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:11:08.415 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:11:08.418 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:11:08.419 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:11:08.419 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:11:08.421 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:08.421 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:11:08.433 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"42051019563","timestamp":1718543468422}
24-06-16.21:11:08.645 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:08.645 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:08.650 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:08.656 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:08.661 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:08.662 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252007581736501248
24-06-16.21:11:08.707 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007581736501248
24-06-16.21:11:08.716 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:11:08.716 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:11:08.725 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:11:08.725 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:11:08.738 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:11:08.738 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:11:08.738 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:11:08.740 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:11:08.743 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:08.743 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:11:08.767 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"33165462819","timestamp":1718543468748}
24-06-16.21:11:09.248 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.248 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.252 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.258 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:09.263 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:09.281 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252007584332775424
24-06-16.21:11:09.301 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007584332775424
24-06-16.21:11:09.311 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:11:09.311 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:11:09.321 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:11:09.321 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:11:09.323 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:11:09.325 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:09.326 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:11:09.341 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"91878101002","timestamp":1718543469328}
24-06-16.21:11:09.360 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.368 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.369 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.377 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252007584735428608
24-06-16.21:11:09.379 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:09.379 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:09.401 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007584735428608
24-06-16.21:11:09.406 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:11:09.406 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:11:09.410 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:11:09.410 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:11:09.415 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:11:09.415 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:11:09.415 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:11:09.416 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:11:09.417 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:09.417 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:11:09.431 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"08144231627","timestamp":1718543469420}
24-06-16.21:11:09.456 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.479 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252007585159053312
24-06-16.21:11:09.503 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007585159053312
24-06-16.21:11:09.509 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:11:09.509 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:11:09.513 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:11:09.513 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:11:09.514 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:11:09.516 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:09.516 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:11:09.537 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"04283729503","timestamp":1718543469519}
24-06-16.21:11:09.692 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.701 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.709 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252007586127937536
24-06-16.21:11:09.711 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:09.712 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:09.723 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:09.731 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007586127937536
24-06-16.21:11:09.739 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:11:09.739 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:11:09.745 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:11:09.745 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:11:09.751 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:11:09.751 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:11:09.751 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:11:09.751 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:11:09.752 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:11:09.752 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:11:09.770 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"09799102321","timestamp":1718543469755}
24-06-16.21:11:10.092 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:10.093 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:10.099 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:10.104 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:10.107 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007587797270528
24-06-16.21:11:10.110 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:10.126 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007587797270528
24-06-16.21:11:10.133 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:11:10.133 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:11:10.138 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:11:10.138 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:11:10.138 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:11:10.140 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:10.140 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:11:10.177 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"22334726503","timestamp":1718543470143}
24-06-16.21:11:10.714 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:10.715 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:10.716 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:10.727 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:10.727 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:10.734 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007590427099136
24-06-16.21:11:10.771 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007590427099136
24-06-16.21:11:10.798 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:11:10.799 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:11:10.804 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:11:10.805 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:11:10.806 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:11:10.808 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:10.808 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:11:10.823 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"89592295837","timestamp":1718543470810}
24-06-16.21:11:11.010 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.010 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.012 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.022 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:11.022 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.022 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:11.032 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007591677001728
24-06-16.21:11:11.034 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:11.039 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.050 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.050 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:11.050 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.054 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007591677001728
24-06-16.21:11:11.060 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:11:11.060 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:11:11.062 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:11.062 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:11.065 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:11:11.065 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:11:11.067 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:11:11.069 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:11.069 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:11:11.091 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"76724278672","timestamp":1718543471074}
24-06-16.21:11:11.632 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.632 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.637 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:11.644 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:11.647 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:11.658 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252007594302636032
24-06-16.21:11:11.695 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007594302636032
24-06-16.21:11:11.702 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:11:11.702 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:11:11.707 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:11:11.707 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:11:11.711 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:11:11.711 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:11:11.711 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:11:11.712 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:11:11.714 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:11.714 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:11:11.737 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"75651351076","timestamp":1718543471719}
24-06-16.21:11:12.006 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:12.012 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:12.012 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:11:12.020 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252007595820974080
24-06-16.21:11:12.023 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:12.023 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:11:12.035 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007595820974080
24-06-16.21:11:12.039 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:11:12.039 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:11:12.042 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:11:12.042 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:11:12.045 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:11:12.045 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:11:12.045 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:11:12.046 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:11:12.047 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:11:12.047 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:11:12.062 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"34970685248","timestamp":1718543472048}
24-06-16.21:12:10.187 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:10.188 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:10.188 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:10.199 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:10.199 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:10.210 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007839887523840
24-06-16.21:12:10.244 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007839887523840
24-06-16.21:12:10.250 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:10.250 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:10.255 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:10.255 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:10.260 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:10.260 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:10.260 [http-nio-8091-exec-2] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:10.260 [http-nio-8091-exec-2] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:10.260 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:10.260 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:10.301 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"25961745868","timestamp":1718543530266}
24-06-16.21:12:10.891 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:10.893 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:10.894 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:10.904 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:10.904 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:10.912 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252007842831925248
24-06-16.21:12:10.934 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007842831925248
24-06-16.21:12:10.940 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:10.940 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:10.943 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:10.943 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:10.946 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:10.946 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:10.946 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:10.946 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:10.946 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:10.946 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:10.958 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"41486806589","timestamp":1718543530949}
24-06-16.21:12:11.052 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.052 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.058 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.062 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:11.069 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:11.073 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007843507208192
24-06-16.21:12:11.090 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007843507208192
24-06-16.21:12:11.094 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:11.094 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:11.098 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:11.099 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:11.099 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:11.100 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:11.101 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:11.115 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"52223781417","timestamp":1718543531103}
24-06-16.21:12:11.458 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.472 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007845180735488
24-06-16.21:12:11.492 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007845180735488
24-06-16.21:12:11.496 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:11.496 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:11.498 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:11.498 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:11.499 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:11.500 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:11.500 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:11.511 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"68102719635","timestamp":1718543531502}
24-06-16.21:12:11.541 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.541 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.551 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:11.553 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.556 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007845533057024
24-06-16.21:12:11.564 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:11.575 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007845533057024
24-06-16.21:12:11.578 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:12:11.578 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:12:11.580 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:12:11.580 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:11.583 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:11.583 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:11.583 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:12:11.584 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:11.584 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:11.584 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:12:11.593 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"24006579119","timestamp":1718543531585}
24-06-16.21:12:11.749 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.752 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.752 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:11.764 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:11.764 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:11.774 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252007846447415296
24-06-16.21:12:11.794 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007846447415296
24-06-16.21:12:11.801 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:12:11.802 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:12:11.807 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:12:11.807 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:12:11.808 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:12:11.809 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:11.809 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:12:11.823 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"84618043067","timestamp":1718543531811}
24-06-16.21:12:12.129 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.132 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.133 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.143 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.145 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.158 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252007848058028032
24-06-16.21:12:12.179 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007848058028032
24-06-16.21:12:12.183 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:12:12.183 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:12:12.185 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:12:12.185 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:12:12.186 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:12:12.187 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:12.187 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:12:12.197 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"38972184305","timestamp":1718543532188}
24-06-16.21:12:12.365 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.367 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.367 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.372 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.377 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.377 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.384 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.387 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007849018523648
24-06-16.21:12:12.406 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007849018523648
24-06-16.21:12:12.410 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:12.411 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:12.413 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:12.413 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:12.417 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:12.417 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:12.417 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:12.417 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:12.419 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:12.419 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:12.433 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"27563345946","timestamp":1718543532421}
24-06-16.21:12:12.449 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.449 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.454 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.459 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252007849320513536
24-06-16.21:12:12.461 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.465 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.481 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007849320513536
24-06-16.21:12:12.485 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:12:12.485 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:12:12.487 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:12:12.487 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:12:12.487 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:12:12.488 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:12.488 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:12:12.502 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"72884572230","timestamp":1718543532490}
24-06-16.21:12:12.729 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.738 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.741 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252007850503307264
24-06-16.21:12:12.742 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:12.749 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.752 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:12.757 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007850503307264
24-06-16.21:12:12.761 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:12:12.761 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:12:12.763 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:12:12.763 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:12:12.764 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:12:12.765 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:12.765 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:12:12.777 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"31389200493","timestamp":1718543532767}
24-06-16.21:12:13.252 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.258 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.258 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.266 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007852705316864
24-06-16.21:12:13.270 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:13.270 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:13.282 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007852705316864
24-06-16.21:12:13.286 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:13.286 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:13.290 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:13.290 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:13.290 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:13.291 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:13.291 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:13.307 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"38571175575","timestamp":1718543533294}
24-06-16.21:12:13.380 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.385 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.387 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.388 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.396 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:13.397 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:13.400 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:13.414 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007853326073856
24-06-16.21:12:13.417 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.419 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.422 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:13.428 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:13.429 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:13.433 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:13.443 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007853326073856
24-06-16.21:12:13.448 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:13.448 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:13.451 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:13.451 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:13.452 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:13.453 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:13.453 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:13.473 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"68528424234","timestamp":1718543533456}
24-06-16.21:12:14.013 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.013 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.020 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.025 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.032 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.040 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007855951708160
24-06-16.21:12:14.064 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007855951708160
24-06-16.21:12:14.072 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:12:14.072 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:12:14.075 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:12:14.075 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:14.077 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:14.077 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:14.077 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:12:14.078 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:14.078 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:14.078 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:12:14.091 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"16705343956","timestamp":1718543534080}
24-06-16.21:12:14.100 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.102 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.103 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.110 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252007856245309440
24-06-16.21:12:14.113 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.114 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.123 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007856245309440
24-06-16.21:12:14.127 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:14.127 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:14.133 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:14.133 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:14.134 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:14.135 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:14.136 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:14.154 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"19868808299","timestamp":1718543534139}
24-06-16.21:12:14.824 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.824 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.825 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.831 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.834 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.835 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.835 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.840 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.842 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:14.843 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.845 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.851 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.853 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:14.860 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252007859391037440
24-06-16.21:12:14.883 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007859391037440
24-06-16.21:12:14.890 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:12:14.890 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:12:14.894 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:12:14.894 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:12:14.895 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:12:14.896 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:14.896 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:12:14.922 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"09051941587","timestamp":1718543534899}
24-06-16.21:12:15.064 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.068 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.071 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.078 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252007860305395712
24-06-16.21:12:15.080 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:15.082 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:15.098 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007860305395712
24-06-16.21:12:15.105 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:15.105 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:15.110 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:15.111 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:15.116 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:15.116 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:15.116 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:15.116 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:15.116 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:15.116 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:15.133 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"00075210135","timestamp":1718543535119}
24-06-16.21:12:15.684 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.683 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.683 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.694 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:15.694 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:15.712 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007862964584448
24-06-16.21:12:15.736 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007862964584448
24-06-16.21:12:15.741 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:15.741 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:15.744 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:15.744 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:15.747 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:15.747 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:15.747 [http-nio-8091-exec-2] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:15.747 [http-nio-8091-exec-2] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:15.747 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:15.747 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:15.762 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"98129988704","timestamp":1718543535749}
24-06-16.21:12:15.809 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.811 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.813 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.821 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:15.823 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:15.827 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252007863446929408
24-06-16.21:12:15.862 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007863446929408
24-06-16.21:12:15.865 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:12:15.865 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:12:15.866 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:12:15.866 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:12:15.866 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:12:15.867 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:15.867 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:12:15.876 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"72366830361","timestamp":1718543535869}
24-06-16.21:12:15.986 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.991 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.994 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:15.998 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:16.004 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:16.004 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:16.005 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252007864193515520
24-06-16.21:12:16.009 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:16.018 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007864193515520
24-06-16.21:12:16.023 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:16.023 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:16.037 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:16.037 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:16.045 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:16.045 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:16.045 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:16.046 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:16.047 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:16.047 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:16.062 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"62318239565","timestamp":1718543536050}
24-06-16.21:12:16.689 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:16.689 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:16.693 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:16.694 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:16.698 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:16.701 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:16.704 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252007867125334016
24-06-16.21:12:16.704 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:16.705 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:16.709 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:16.713 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:16.724 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:16.730 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007867125334016
24-06-16.21:12:16.736 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:12:16.736 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:12:16.740 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:12:16.740 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:12:16.740 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:12:16.742 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:16.742 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:12:16.763 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"73775144741","timestamp":1718543536745}
24-06-16.21:12:17.808 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:17.808 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:17.812 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:17.819 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:17.823 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:17.884 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252007872074612736
24-06-16.21:12:17.926 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007872074612736
24-06-16.21:12:17.945 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:12:17.945 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:12:17.955 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:12:17.955 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:12:17.959 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:12:17.973 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:17.974 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:12:18.010 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"36007441125","timestamp":1718543537982}
24-06-16.21:12:18.699 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.699 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.702 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.710 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:18.715 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:18.744 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007875681714176
24-06-16.21:12:18.746 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.756 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.757 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:18.761 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.766 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:18.773 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:18.779 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007875681714176
24-06-16.21:12:18.784 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:12:18.784 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:12:18.788 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:12:18.788 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:18.796 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:18.796 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:18.797 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:12:18.798 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:18.800 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:18.800 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:12:18.821 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"96999125796","timestamp":1718543538803}
24-06-16.21:12:18.972 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.972 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.976 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.979 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:18.981 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252007876675764224
24-06-16.21:12:18.983 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:18.986 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:18.990 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:18.999 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007876675764224
24-06-16.21:12:19.006 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:19.006 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:19.009 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:19.009 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:19.010 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:19.011 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:19.011 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:19.035 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"76501347763","timestamp":1718543539014}
24-06-16.21:12:19.622 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:19.622 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:19.622 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:19.632 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:19.634 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:19.638 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007879431421952
24-06-16.21:12:19.661 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007879431421952
24-06-16.21:12:19.667 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:19.667 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:19.671 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:19.671 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:19.675 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:19.675 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:19.675 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:19.676 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:19.677 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:19.677 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:19.694 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"91256560803","timestamp":1718543539679}
24-06-16.21:12:19.953 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:19.955 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:19.955 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:19.967 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:19.967 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:19.971 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007880828125184
24-06-16.21:12:19.988 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007880828125184
24-06-16.21:12:19.992 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:19.992 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:19.996 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:19.996 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:20.003 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:20.003 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:20.003 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:20.004 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:20.005 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:20.006 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:20.028 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"36085289935","timestamp":1718543540010}
24-06-16.21:12:20.382 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:20.382 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:20.391 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:20.394 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:20.396 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:20.400 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252007882627481600
24-06-16.21:12:20.402 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:20.407 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:20.415 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007882627481600
24-06-16.21:12:20.421 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:20.421 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:20.425 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:20.425 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:20.426 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:20.428 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:20.428 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:20.446 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"15545117504","timestamp":1718543540431}
24-06-16.21:12:20.548 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:20.549 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:20.559 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252007883294375936
24-06-16.21:12:20.560 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:20.572 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007883294375936
24-06-16.21:12:20.575 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:20.575 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:20.576 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:20.577 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:20.579 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:20.579 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:20.579 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:20.580 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:20.580 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:20.580 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:20.592 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"20990607314","timestamp":1718543540582}
24-06-16.21:12:20.728 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:20.742 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007884061933568
24-06-16.21:12:20.762 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007884061933568
24-06-16.21:12:20.766 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:20.766 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:20.768 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:20.769 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:20.772 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:20.772 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:20.772 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:20.773 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:20.774 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:20.774 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:20.792 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"85476653279","timestamp":1718543540776}
24-06-16.21:12:21.007 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:21.007 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:21.017 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:21.017 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:21.023 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007885240532992
24-06-16.21:12:21.027 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:21.046 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007885240532992
24-06-16.21:12:21.052 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:21.052 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:21.058 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:21.058 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:21.065 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:21.065 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:21.065 [http-nio-8091-exec-2] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:21.066 [http-nio-8091-exec-2] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:21.066 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:21.066 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:21.084 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"64078366579","timestamp":1718543541068}
24-06-16.21:12:21.740 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:21.740 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:21.742 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:21.751 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252007888293986304
24-06-16.21:12:21.751 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:21.753 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:21.764 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007888293986304
24-06-16.21:12:21.769 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:12:21.769 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:12:21.775 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:12:21.775 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:12:21.776 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:12:21.779 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:21.780 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:12:21.808 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"00016625586","timestamp":1718543541785}
24-06-16.21:12:22.124 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.128 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.129 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.131 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.139 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:22.140 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:22.142 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:22.144 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252007889942347776
24-06-16.21:12:22.166 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007889942347776
24-06-16.21:12:22.170 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:22.170 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:22.172 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:22.172 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:22.177 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:22.177 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:22.177 [http-nio-8091-exec-7] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:22.177 [http-nio-8091-exec-7] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:22.177 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:22.177 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:22.192 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"82504798383","timestamp":1718543542179}
24-06-16.21:12:22.223 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.226 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.228 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.238 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:22.239 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252007890340806656
24-06-16.21:12:22.240 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:22.270 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007890340806656
24-06-16.21:12:22.275 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:12:22.275 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:12:22.277 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:12:22.277 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:12:22.278 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:12:22.279 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:22.279 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:12:22.293 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"07192485230","timestamp":1718543542281}
24-06-16.21:12:22.744 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.745 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.755 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:22.755 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:22.759 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252007892521844736
24-06-16.21:12:22.766 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:22.789 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007892521844736
24-06-16.21:12:22.796 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:12:22.796 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:12:22.801 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:12:22.801 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:22.806 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:22.807 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:22.807 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:12:22.808 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:22.810 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:22.810 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:12:22.871 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"05983826526","timestamp":1718543542822}
24-06-16.21:12:23.832 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:23.832 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:23.832 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:23.844 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:23.844 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:23.913 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252007897362071552
24-06-16.21:12:23.940 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007897362071552
24-06-16.21:12:23.946 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:12:23.946 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:12:23.952 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:12:23.952 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:12:23.953 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:12:23.955 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:23.955 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:12:23.980 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"15234770418","timestamp":1718543543957}
24-06-16.21:12:24.097 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:24.105 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:24.105 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:24.115 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:24.117 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:24.119 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:24.125 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252007898251264000
24-06-16.21:12:24.130 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:24.161 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007898251264000
24-06-16.21:12:24.168 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:12:24.168 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:12:24.171 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:12:24.171 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:12:24.171 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:12:24.172 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:24.172 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:12:24.189 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"87650324621","timestamp":1718543544175}
24-06-16.21:12:24.221 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:24.224 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:24.228 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:24.231 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252007898695860224
24-06-16.21:12:24.236 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:24.239 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:24.245 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007898695860224
24-06-16.21:12:24.250 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:24.250 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:24.253 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:24.253 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:24.256 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:24.257 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:24.257 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:24.258 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:24.259 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:24.259 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:24.281 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"37668714799","timestamp":1718543544262}
24-06-16.21:12:25.146 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:25.146 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:25.146 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:25.165 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:25.166 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:25.192 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007902726586368
24-06-16.21:12:25.238 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007902726586368
24-06-16.21:12:25.249 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:12:25.249 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:12:25.259 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:12:25.259 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:12:25.263 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:12:25.265 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:25.265 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:12:25.282 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"29261952218","timestamp":1718543545267}
24-06-16.21:12:26.086 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.086 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.085 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.098 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:26.098 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:26.119 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007906614706176
24-06-16.21:12:26.163 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007906614706176
24-06-16.21:12:26.173 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:12:26.173 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:12:26.179 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:12:26.179 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:12:26.180 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:12:26.182 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:26.182 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:12:26.210 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"45788103004","timestamp":1718543546185}
24-06-16.21:12:26.376 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.376 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.380 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.383 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252007907722002432
24-06-16.21:12:26.387 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:26.391 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:26.393 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007907722002432
24-06-16.21:12:26.397 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:12:26.397 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:12:26.401 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:12:26.401 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:12:26.402 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:12:26.403 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:26.403 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:12:26.419 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"13754501398","timestamp":1718543546405}
24-06-16.21:12:26.813 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.813 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.813 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.814 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:26.823 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:26.823 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:26.825 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:26.837 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252007909626216448
24-06-16.21:12:26.861 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007909626216448
24-06-16.21:12:26.869 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:12:26.869 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:12:26.874 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:12:26.874 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:12:26.875 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:12:26.876 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:26.876 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:12:26.891 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"32147924683","timestamp":1718543546878}
24-06-16.21:12:27.958 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:27.958 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:27.958 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:27.969 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:27.969 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:27.986 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:28.005 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:28.031 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007914630021120
24-06-16.21:12:28.038 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:28.042 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:28.050 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:28.052 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:28.105 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007914630021120
24-06-16.21:12:28.122 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:28.122 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:28.131 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:28.132 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:28.137 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:28.137 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:28.137 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:28.138 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:28.145 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:28.145 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:28.194 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"38863804483","timestamp":1718543548153}
24-06-16.21:12:29.818 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:29.818 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:29.818 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:29.835 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:29.839 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:29.938 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252007922632753152
24-06-16.21:12:29.964 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007922632753152
24-06-16.21:12:29.978 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:12:29.978 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:12:29.989 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:12:29.989 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:12:29.991 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:12:29.993 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:29.993 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:12:30.011 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"16574977686","timestamp":1718543549995}
24-06-16.21:12:31.067 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.067 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.067 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.079 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:31.080 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:31.117 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.117 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.123 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.127 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:31.127 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:31.135 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:31.136 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007927657529344
24-06-16.21:12:31.165 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007927657529344
24-06-16.21:12:31.169 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:12:31.169 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:12:31.172 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:12:31.172 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:31.175 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:31.175 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:31.175 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:12:31.175 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:31.177 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:31.177 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:12:31.190 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"89260830958","timestamp":1718543551179}
24-06-16.21:12:31.447 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.452 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.463 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:31.465 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.476 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:31.479 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007929096175616
24-06-16.21:12:31.480 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:31.490 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:31.514 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007929096175616
24-06-16.21:12:31.520 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:31.521 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:31.530 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:31.530 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:31.535 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:31.535 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:31.535 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:31.536 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:31.537 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:31.537 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:31.552 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"75529656842","timestamp":1718543551539}
24-06-16.21:12:32.919 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:32.919 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:32.919 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:32.930 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:32.932 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:32.984 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252007935408603136
24-06-16.21:12:33.024 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007935408603136
24-06-16.21:12:33.030 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:12:33.030 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:12:33.034 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:12:33.034 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:12:33.035 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:12:33.037 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:33.038 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:12:33.064 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"47672945520","timestamp":1718543553040}
24-06-16.21:12:34.468 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:34.468 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:34.468 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:34.480 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:34.482 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:34.508 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252007941800722432
24-06-16.21:12:34.531 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007941800722432
24-06-16.21:12:34.539 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:12:34.540 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:12:34.545 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:12:34.545 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:12:34.546 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:12:34.548 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:34.548 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:12:34.568 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"19571216740","timestamp":1718543554551}
24-06-16.21:12:34.664 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:34.665 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:34.669 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:34.673 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007942492782592
24-06-16.21:12:34.677 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:34.679 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:34.689 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007942492782592
24-06-16.21:12:34.694 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:34.694 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:34.697 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:34.697 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:34.700 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:34.700 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:34.700 [http-nio-8091-exec-4] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:34.700 [http-nio-8091-exec-4] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:34.701 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:34.701 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:34.721 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"01002758875","timestamp":1718543554703}
24-06-16.21:12:35.403 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:35.408 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:35.414 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:35.415 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:35.416 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007945609150464
24-06-16.21:12:35.419 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:35.424 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:35.425 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:35.434 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007945609150464
24-06-16.21:12:35.438 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:12:35.438 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:12:35.441 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:12:35.441 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:12:35.442 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:12:35.444 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:35.444 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:12:35.522 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"70444599728","timestamp":1718543555446}
24-06-16.21:12:36.148 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:36.148 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:36.149 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:36.159 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:36.161 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:36.161 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:36.163 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:36.166 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:36.171 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:36.173 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:36.179 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:36.201 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007948901679104
24-06-16.21:12:36.232 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007948901679104
24-06-16.21:12:36.237 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:36.237 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:36.241 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:36.241 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:36.242 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:36.243 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:36.243 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:36.268 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"88248670244","timestamp":1718543556246}
24-06-16.21:12:37.659 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:37.659 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:37.659 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:37.671 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:37.672 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:37.701 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252007955193135104
24-06-16.21:12:37.728 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007955193135104
24-06-16.21:12:37.739 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:37.739 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:37.744 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:37.744 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:37.749 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:37.749 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:37.749 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:37.749 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:37.749 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:37.749 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:37.763 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"70475895030","timestamp":1718543557751}
24-06-16.21:12:38.122 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:38.124 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:38.126 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:38.130 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:38.133 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007957005074432
24-06-16.21:12:38.136 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:38.137 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:38.141 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:38.152 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007957005074432
24-06-16.21:12:38.172 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:38.172 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:38.175 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:38.175 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:38.176 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:38.178 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:38.178 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:38.206 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"10168451406","timestamp":1718543558179}
24-06-16.21:12:39.593 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:39.593 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:39.593 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:39.607 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:39.607 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:39.722 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007963669823488
24-06-16.21:12:39.764 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007963669823488
24-06-16.21:12:39.769 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:12:39.769 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:12:39.772 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:12:39.772 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:12:39.773 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:12:39.775 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:39.775 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:12:39.795 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"00775256575","timestamp":1718543559777}
24-06-16.21:12:39.970 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:39.972 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:39.976 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:39.983 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:39.985 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252007964772925440
24-06-16.21:12:39.987 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:40.012 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007964772925440
24-06-16.21:12:40.017 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:40.017 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:40.021 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:40.021 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:40.025 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:40.025 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:40.025 [http-nio-8091-exec-3] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:40.025 [http-nio-8091-exec-3] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:40.025 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:40.025 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:40.040 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"28641231070","timestamp":1718543560027}
24-06-16.21:12:42.690 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.691 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.691 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.703 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.703 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.748 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252007976361787392
24-06-16.21:12:42.780 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.783 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.783 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.785 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.794 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.794 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.798 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:42.799 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007976361787392
24-06-16.21:12:42.800 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.800 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.800 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.800 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.806 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.812 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.812 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:42.815 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:12:42.815 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:12:42.822 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:12:42.822 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:12:42.823 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:12:42.824 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:42.824 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:12:42.842 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"52298329514","timestamp":1718543562827}
24-06-16.21:12:44.522 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:44.523 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:44.522 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:44.534 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:44.535 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:44.555 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252007983940894720
24-06-16.21:12:44.600 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007983940894720
24-06-16.21:12:44.608 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:12:44.608 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:12:44.611 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:12:44.611 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:44.615 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:44.615 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:44.615 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:12:44.616 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:12:44.618 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:44.618 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:12:44.634 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"67281968165","timestamp":1718543564620}
24-06-16.21:12:45.062 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.063 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.063 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.073 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:45.074 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:45.075 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252007986121932800
24-06-16.21:12:45.089 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007986121932800
24-06-16.21:12:45.092 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:45.092 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:45.095 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:45.095 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:45.095 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:45.096 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:45.096 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:45.120 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"43277518912","timestamp":1718543565098}
24-06-16.21:12:45.291 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.293 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.297 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.299 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.305 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:45.307 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:45.310 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:45.324 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252007987166314496
24-06-16.21:12:45.384 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007987166314496
24-06-16.21:12:45.404 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:45.405 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:45.415 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:45.415 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:45.425 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:45.425 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:45.425 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:45.429 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:45.435 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:45.436 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:45.478 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"50937867250","timestamp":1718543565439}
24-06-16.21:12:45.855 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.855 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.858 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:45.865 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:45.869 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:45.869 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252007989452210176
24-06-16.21:12:45.890 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007989452210176
24-06-16.21:12:45.895 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:12:45.895 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:12:45.898 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:12:45.898 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:45.905 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:45.906 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:45.906 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:12:45.906 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:12:45.909 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:45.910 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:12:45.938 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"64784937770","timestamp":1718543565914}
24-06-16.21:12:47.820 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.822 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.820 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.820 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.825 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.825 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.831 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.832 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.838 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.838 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.838 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.838 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.841 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.875 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252007997865984000
24-06-16.21:12:47.893 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252007997865984000
24-06-16.21:12:47.895 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.898 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.898 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:12:47.899 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:12:47.902 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:12:47.902 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:12:47.902 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:12:47.904 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:47.904 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:47.904 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:12:47.906 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.908 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.914 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:47.927 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"06310444996","timestamp":1718543567906}
24-06-16.21:12:49.644 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:49.645 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:49.645 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:49.644 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:49.644 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:49.644 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:49.655 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:49.656 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:49.657 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:49.657 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:49.658 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:49.690 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008005478645760
24-06-16.21:12:49.717 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008005478645760
24-06-16.21:12:49.722 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:12:49.722 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:12:49.724 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:12:49.724 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:12:49.724 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:12:49.725 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:49.725 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:12:49.739 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"32282470472","timestamp":1718543569727}
24-06-16.21:12:51.046 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:51.046 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:51.046 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:51.046 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:51.057 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:51.058 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:51.060 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:51.110 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008011434557440
24-06-16.21:12:51.137 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008011434557440
24-06-16.21:12:51.146 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:51.146 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:51.152 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:51.152 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:51.157 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:51.157 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:51.157 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:51.157 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:51.157 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:51.157 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:51.173 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"10910902152","timestamp":1718543571159}
24-06-16.21:12:51.900 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:51.900 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:51.900 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:51.910 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:51.911 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:51.920 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008014831943680
24-06-16.21:12:51.950 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008014831943680
24-06-16.21:12:51.956 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:51.956 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:51.959 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:51.959 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:51.960 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:51.961 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:51.961 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:51.982 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"37931346437","timestamp":1718543571964}
24-06-16.21:12:52.635 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:52.671 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008017981865984
24-06-16.21:12:52.695 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008017981865984
24-06-16.21:12:52.706 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:12:52.706 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:12:52.713 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:12:52.713 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:12:52.714 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:12:52.717 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:52.717 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:52.717 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:12:52.729 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:52.733 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"22364474781","timestamp":1718543572721}
24-06-16.21:12:52.750 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:52.768 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008018388713472
24-06-16.21:12:52.784 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008018388713472
24-06-16.21:12:52.789 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:12:52.790 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:12:52.794 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:12:52.794 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:12:52.795 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:12:52.796 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:52.797 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:12:52.812 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"14193870297","timestamp":1718543572799}
24-06-16.21:12:53.535 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:53.534 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:53.538 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:53.548 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:53.548 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:53.564 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008021727379456
24-06-16.21:12:53.593 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008021727379456
24-06-16.21:12:53.598 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:53.598 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:53.601 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:53.601 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:53.602 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:53.604 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:53.604 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:53.619 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"55842494189","timestamp":1718543573607}
24-06-16.21:12:55.866 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:55.866 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:55.866 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:55.866 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:55.878 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:55.878 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:55.879 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:55.939 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008031684657152
24-06-16.21:12:55.972 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008031684657152
24-06-16.21:12:55.978 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:12:55.978 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:12:55.982 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:12:55.982 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:12:55.983 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:12:55.985 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:55.985 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:12:56.006 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"35697743313","timestamp":1718543575988}
24-06-16.21:12:56.091 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:56.104 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008032380911616
24-06-16.21:12:56.108 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:56.116 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:56.119 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:56.124 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008032380911616
24-06-16.21:12:56.127 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:56.128 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:12:56.128 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:12:56.131 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:12:56.131 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:12:56.137 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:12:56.137 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:12:56.137 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:12:56.138 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:12:56.138 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:12:56.138 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:12:56.156 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"25619662441","timestamp":1718543576139}
24-06-16.21:12:56.280 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:56.281 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:56.297 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:56.329 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008033324630016
24-06-16.21:12:56.386 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:56.412 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:56.421 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008033324630016
24-06-16.21:12:56.478 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:12:56.478 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:12:56.482 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:12:56.482 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:12:56.484 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:12:56.488 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:56.489 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:12:56.520 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"94109949052","timestamp":1718543576492}
24-06-16.21:12:58.281 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.281 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.284 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.293 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:58.294 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:58.309 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008041629351936
24-06-16.21:12:58.325 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.330 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.332 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008041629351936
24-06-16.21:12:58.332 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.335 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:58.337 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:12:58.337 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:12:58.341 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:12:58.341 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:12:58.341 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:58.341 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:12:58.342 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:58.342 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:58.342 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:12:58.364 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"14550932324","timestamp":1718543578344}
24-06-16.21:12:58.465 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.466 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.470 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.474 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:12:58.476 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008042329800704
24-06-16.21:12:58.477 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:58.481 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:58.485 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:12:58.490 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008042329800704
24-06-16.21:12:58.495 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:12:58.495 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:12:58.498 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:12:58.498 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:12:58.499 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:12:58.501 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:12:58.501 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:12:58.517 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"82384992650","timestamp":1718543578504}
24-06-16.21:13:00.328 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:00.328 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:00.327 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:00.341 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:00.341 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:00.362 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008050240258048
24-06-16.21:13:00.381 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008050240258048
24-06-16.21:13:00.386 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:00.386 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:00.390 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:00.390 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:00.393 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:00.393 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:00.394 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:00.394 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:00.395 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:00.396 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:00.413 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"82681956788","timestamp":1718543580397}
24-06-16.21:13:00.523 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:00.523 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:00.528 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:00.529 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008050940706816
24-06-16.21:13:00.534 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:00.535 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008050940706816
24-06-16.21:13:00.537 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:13:00.537 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:13:00.538 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:13:00.538 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:13:00.538 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:13:00.539 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:00.539 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:00.539 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:13:00.545 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"83723875065","timestamp":1718543580540}
24-06-16.21:13:01.820 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:01.820 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:01.820 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:01.820 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:01.833 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:01.834 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:01.835 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:01.857 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008056510742528
24-06-16.21:13:01.876 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008056510742528
24-06-16.21:13:01.883 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:13:01.883 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:13:01.887 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:13:01.887 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:13:01.888 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:13:01.889 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:01.889 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:13:01.915 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"31837593394","timestamp":1718543581891}
24-06-16.21:13:02.285 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:02.288 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:02.288 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:02.299 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:02.299 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008058364624896
24-06-16.21:13:02.299 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:02.317 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008058364624896
24-06-16.21:13:02.321 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:13:02.321 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:13:02.323 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:13:02.323 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:13:02.324 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:13:02.325 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:02.325 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:13:02.338 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"34364131174","timestamp":1718543582327}
24-06-16.21:13:03.190 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:03.190 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:03.190 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:03.202 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:03.202 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:03.228 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008062261133312
24-06-16.21:13:03.272 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008062261133312
24-06-16.21:13:03.281 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:13:03.281 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:13:03.286 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:13:03.286 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:13:03.287 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:13:03.288 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:03.289 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:13:03.301 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"54739278032","timestamp":1718543583291}
24-06-16.21:13:04.127 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:04.133 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:04.138 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:04.145 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:04.146 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008066111504384
24-06-16.21:13:04.149 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:04.165 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008066111504384
24-06-16.21:13:04.170 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:13:04.170 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:13:04.173 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:13:04.173 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:04.177 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:04.177 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:04.177 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:13:04.178 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:04.179 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:04.179 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:13:04.195 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"67228246947","timestamp":1718543584181}
24-06-16.21:13:04.992 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:04.992 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:04.992 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:05.003 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:05.003 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:05.017 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008069764743168
24-06-16.21:13:05.053 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008069764743168
24-06-16.21:13:05.059 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:05.059 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:05.062 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:05.062 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:05.065 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:05.065 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:05.065 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:05.066 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:05.070 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:05.070 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:05.092 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"51397978663","timestamp":1718543585073}
24-06-16.21:13:06.757 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:06.757 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:06.757 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:06.768 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:06.768 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:06.785 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008077180272640
24-06-16.21:13:06.806 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008077180272640
24-06-16.21:13:06.811 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:13:06.811 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:13:06.815 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:13:06.815 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:06.818 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:06.819 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:06.819 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:13:06.819 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:06.821 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:06.821 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:13:06.837 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"37816207500","timestamp":1718543586823}
24-06-16.21:13:08.114 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:08.114 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:08.114 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:08.126 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:08.128 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:08.157 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008082934857728
24-06-16.21:13:08.178 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008082934857728
24-06-16.21:13:08.183 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:13:08.183 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:13:08.186 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:13:08.186 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:08.189 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:08.189 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:08.189 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:13:08.190 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:08.191 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:08.191 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:13:08.207 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"74277114266","timestamp":1718543588194}
24-06-16.21:13:08.341 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:08.343 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:08.346 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:08.349 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:08.353 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008083756941312
24-06-16.21:13:08.353 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:08.356 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:08.359 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:08.373 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008083756941312
24-06-16.21:13:08.379 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:13:08.379 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:13:08.382 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:13:08.382 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:13:08.383 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:13:08.385 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:08.385 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:13:08.402 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"09024689420","timestamp":1718543588387}
24-06-16.21:13:09.688 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:09.688 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:09.688 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:09.702 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:09.703 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:09.750 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008089612189696
24-06-16.21:13:09.799 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008089612189696
24-06-16.21:13:09.818 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:13:09.818 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:13:09.822 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:13:09.822 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:13:09.823 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:13:09.825 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:09.825 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:13:09.844 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"35912997069","timestamp":1718543589828}
24-06-16.21:13:10.856 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:10.856 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:10.856 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:10.872 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:10.872 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:10.940 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008094607605760
24-06-16.21:13:10.969 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008094607605760
24-06-16.21:13:10.980 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:13:10.980 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:13:10.984 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:13:10.984 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:13:10.989 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:10.989 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:10.989 [http-nio-8091-exec-4] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:13:10.990 [http-nio-8091-exec-4] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:13:10.990 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:13:10.990 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:13:11.013 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"41778014001","timestamp":1718543590994}
24-06-16.21:13:11.117 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:11.117 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:11.122 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:11.128 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:11.131 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008095408717824
24-06-16.21:13:11.132 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:11.159 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008095408717824
24-06-16.21:13:11.167 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:13:11.167 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:13:11.173 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:13:11.173 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:13:11.176 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:13:11.181 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:11.181 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:13:11.209 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"39129204276","timestamp":1718543591188}
24-06-16.21:13:12.594 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:12.594 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:12.594 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:12.606 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:12.606 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:12.622 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008101662425088
24-06-16.21:13:12.650 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008101662425088
24-06-16.21:13:12.656 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:12.656 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:12.659 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:12.659 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:12.661 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:12.661 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:12.661 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:12.662 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:12.663 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:12.663 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:12.676 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"66775517483","timestamp":1718543592665}
24-06-16.21:13:13.915 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:13.915 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:13.918 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:13.927 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:13.928 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:13.962 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008107282792448
24-06-16.21:13:13.984 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008107282792448
24-06-16.21:13:13.996 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:13:13.996 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:13:14.001 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:13:14.001 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:13:14.004 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:14.004 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:14.004 [http-nio-8091-exec-7] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:13:14.004 [http-nio-8091-exec-7] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:13:14.004 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:13:14.004 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:13:14.016 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"83785940245","timestamp":1718543594005}
24-06-16.21:13:14.379 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:14.383 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:14.386 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:14.387 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:14.392 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008109086343168
24-06-16.21:13:14.396 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:14.396 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:14.398 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:14.406 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008109086343168
24-06-16.21:13:14.410 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:13:14.410 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:13:14.412 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:13:14.412 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:13:14.412 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:13:14.413 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:14.413 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:13:14.427 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"60438741464","timestamp":1718543594415}
24-06-16.21:13:15.370 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:15.371 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:15.370 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:15.382 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:15.382 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:15.417 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008113385504768
24-06-16.21:13:15.437 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008113385504768
24-06-16.21:13:15.444 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:15.444 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:15.448 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:15.448 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:15.452 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:15.452 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:15.452 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:15.453 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:15.455 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:15.456 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:15.475 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"89101669009","timestamp":1718543595458}
24-06-16.21:13:16.717 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:16.717 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:16.717 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:16.728 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:16.729 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:16.754 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008118993289216
24-06-16.21:13:16.775 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008118993289216
24-06-16.21:13:16.780 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:13:16.780 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:13:16.783 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:13:16.783 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:13:16.784 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:13:16.786 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:16.786 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:13:16.804 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"20442577190","timestamp":1718543596788}
24-06-16.21:13:16.831 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:16.831 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:16.836 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:16.842 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:16.846 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008119379165184
24-06-16.21:13:16.847 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:16.881 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008119379165184
24-06-16.21:13:16.887 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:13:16.887 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:13:16.890 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:13:16.890 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:13:16.891 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:13:16.893 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:16.893 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:13:16.911 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"58106909958","timestamp":1718543596894}
24-06-16.21:13:18.287 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:18.287 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:18.287 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:18.300 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:18.301 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:18.354 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008125704175616
24-06-16.21:13:18.407 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008125704175616
24-06-16.21:13:18.416 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:13:18.416 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:13:18.423 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:13:18.423 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:13:18.424 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:13:18.427 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:18.427 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:13:18.462 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"94620200931","timestamp":1718543598431}
24-06-16.21:13:19.106 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:19.106 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:19.106 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:19.113 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:19.118 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:19.118 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:19.124 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:19.133 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008128971538432
24-06-16.21:13:19.150 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008128971538432
24-06-16.21:13:19.153 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:13:19.154 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:13:19.156 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:13:19.156 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:13:19.157 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:13:19.157 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:19.157 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:13:19.175 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"58459724507","timestamp":1718543599161}
24-06-16.21:13:21.256 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:21.276 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:21.286 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:21.300 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008138056400896
24-06-16.21:13:21.316 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:21.327 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:21.336 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008138056400896
24-06-16.21:13:21.343 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:13:21.343 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:13:21.347 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:13:21.347 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:13:21.348 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:13:21.350 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:21.350 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:13:21.372 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"81509205069","timestamp":1718543601352}
24-06-16.21:13:22.391 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:22.444 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008142858878976
24-06-16.21:13:22.445 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:22.457 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:22.470 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008142858878976
24-06-16.21:13:22.479 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:22.479 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:22.484 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:22.484 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:22.488 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:22.488 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:22.488 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:22.489 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:22.491 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:22.491 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:22.491 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:22.501 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:22.511 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"49345714577","timestamp":1718543602493}
24-06-16.21:13:23.405 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:23.405 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:23.407 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:23.418 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:23.419 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:23.429 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008146990268416
24-06-16.21:13:23.462 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008146990268416
24-06-16.21:13:23.471 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:13:23.471 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:13:23.488 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:13:23.488 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:13:23.490 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:13:23.493 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:23.493 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:13:23.521 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"42714419680","timestamp":1718543603497}
24-06-16.21:13:24.858 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:24.858 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:24.861 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:24.869 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:24.871 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:24.875 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008153055232000
24-06-16.21:13:24.889 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008153055232000
24-06-16.21:13:24.893 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:24.893 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:24.896 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:24.896 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:24.898 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:24.899 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:24.899 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:24.899 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:24.901 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:24.901 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:24.916 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"61778669162","timestamp":1718543604904}
24-06-16.21:13:24.926 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:24.930 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:24.933 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:24.937 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:24.940 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:24.943 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008153340444672
24-06-16.21:13:24.957 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008153340444672
24-06-16.21:13:24.960 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:13:24.960 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:13:24.963 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:13:24.963 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:13:24.963 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:13:24.964 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:24.964 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:13:24.975 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"36201271235","timestamp":1718543604966}
24-06-16.21:13:25.261 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:25.263 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:25.263 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:25.265 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:25.274 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:25.274 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:25.275 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:25.275 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008154732953600
24-06-16.21:13:25.294 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008154732953600
24-06-16.21:13:25.299 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:13:25.299 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:13:25.301 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:13:25.302 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:25.305 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:25.305 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:25.306 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:13:25.307 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:25.310 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:25.310 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:13:25.335 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"44249483665","timestamp":1718543605312}
24-06-16.21:13:26.823 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:26.823 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:26.823 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:26.838 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:26.838 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:26.939 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008161712275456
24-06-16.21:13:26.975 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:26.979 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008161712275456
24-06-16.21:13:26.985 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:13:26.985 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:13:26.987 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:26.988 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:13:26.988 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:26.992 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:26.992 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:26.992 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:13:26.993 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:26.994 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:26.994 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:13:27.001 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:27.012 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:27.016 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:27.018 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"81779816066","timestamp":1718543606999}
24-06-16.21:13:27.026 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:27.965 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:27.966 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:27.968 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:27.970 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:27.975 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:27.978 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:27.982 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:27.989 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008166116294656
24-06-16.21:13:28.010 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008166116294656
24-06-16.21:13:28.014 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:13:28.014 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:13:28.016 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:13:28.016 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:13:28.017 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:13:28.018 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:28.018 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:13:28.030 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"11813975863","timestamp":1718543608019}
24-06-16.21:13:29.237 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:29.237 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:29.242 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:29.248 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:29.253 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:29.254 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:29.256 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:29.258 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008171438866432
24-06-16.21:13:29.260 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:29.266 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:29.268 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:29.271 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:29.286 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008171438866432
24-06-16.21:13:29.292 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:13:29.292 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:13:29.295 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:13:29.295 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:13:29.296 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:13:29.297 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:29.297 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:13:29.312 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"35116931732","timestamp":1718543609299}
24-06-16.21:13:31.711 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:31.711 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:31.711 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:31.724 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:31.724 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:31.759 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008181928820736
24-06-16.21:13:31.809 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008181928820736
24-06-16.21:13:31.822 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:13:31.822 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:13:31.831 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:13:31.832 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:13:31.833 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:13:31.836 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:31.836 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:13:31.865 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"74137139683","timestamp":1718543611840}
24-06-16.21:13:32.660 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:32.661 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:32.665 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:32.672 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:32.677 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:32.680 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008185791774720
24-06-16.21:13:32.698 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008185791774720
24-06-16.21:13:32.703 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:13:32.704 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:13:32.708 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:13:32.708 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:13:32.709 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:13:32.710 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:32.711 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:13:32.726 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"94781549544","timestamp":1718543612713}
24-06-16.21:13:32.758 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:32.760 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:32.761 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:32.764 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:32.768 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008186160873472
24-06-16.21:13:32.771 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:32.773 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:32.774 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:32.782 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008186160873472
24-06-16.21:13:32.785 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:13:32.785 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:13:32.787 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:13:32.787 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:13:32.788 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:13:32.789 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:32.789 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:13:32.803 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"43755460562","timestamp":1718543612792}
24-06-16.21:13:33.946 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:33.947 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:33.947 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:33.957 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:33.958 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:33.966 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008191185649664
24-06-16.21:13:33.983 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008191185649664
24-06-16.21:13:33.987 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:13:33.987 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:13:33.990 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:13:33.990 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:13:33.992 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:33.993 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:33.993 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:13:33.993 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:13:33.993 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:13:33.993 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:13:34.006 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"87518988648","timestamp":1718543613994}
24-06-16.21:13:34.943 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:34.943 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:34.946 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:34.953 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:34.957 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008195342204928
24-06-16.21:13:34.957 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:34.980 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008195342204928
24-06-16.21:13:34.987 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:13:34.987 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:13:34.994 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:13:34.994 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:13:34.995 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:13:34.999 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:34.999 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:13:35.022 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"68962291930","timestamp":1718543615005}
24-06-16.21:13:35.300 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:35.304 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:35.305 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:35.307 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:35.310 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008196822794240
24-06-16.21:13:35.316 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:35.317 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:35.317 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:35.331 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008196822794240
24-06-16.21:13:35.335 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:35.335 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:35.337 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:35.337 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:35.339 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:35.339 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:35.340 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:35.340 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:35.341 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:35.341 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:35.356 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"47925448797","timestamp":1718543615343}
24-06-16.21:13:37.149 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:37.149 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:37.160 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:37.162 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:37.174 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:37.175 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008204645171200
24-06-16.21:13:37.194 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008204645171200
24-06-16.21:13:37.198 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:13:37.198 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:13:37.201 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:13:37.201 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:13:37.202 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:13:37.203 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:37.203 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:13:37.215 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"40155659987","timestamp":1718543617205}
24-06-16.21:13:37.918 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:37.918 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:37.922 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:37.929 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:37.933 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:37.937 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008207841230848
24-06-16.21:13:37.953 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008207841230848
24-06-16.21:13:37.957 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:13:37.957 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:13:37.960 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:13:37.960 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:13:37.960 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:13:37.962 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:37.962 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:13:37.974 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"52755348990","timestamp":1718543617964}
24-06-16.21:13:38.766 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:38.766 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:38.766 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:38.769 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:38.778 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:38.778 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:38.779 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:38.803 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008211473498112
24-06-16.21:13:38.825 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008211473498112
24-06-16.21:13:38.831 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:13:38.831 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:13:38.834 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:13:38.834 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:13:38.835 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:13:38.835 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:38.836 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:13:38.856 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"23762447481","timestamp":1718543618838}
24-06-16.21:13:40.184 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:40.184 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:40.184 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:40.196 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:40.196 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:40.222 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008217425215488
24-06-16.21:13:40.243 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008217425215488
24-06-16.21:13:40.248 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:13:40.248 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:13:40.250 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:13:40.250 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:13:40.251 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:13:40.252 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:40.252 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:13:40.267 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"77506899135","timestamp":1718543620256}
24-06-16.21:13:41.252 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:41.252 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:41.254 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:41.264 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:41.266 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:41.268 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008221812457472
24-06-16.21:13:41.285 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008221812457472
24-06-16.21:13:41.292 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:13:41.292 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:13:41.296 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:13:41.296 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:13:41.297 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:13:41.298 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:41.298 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:13:41.320 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"18847659399","timestamp":1718543621301}
24-06-16.21:13:42.755 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:42.755 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:42.755 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:42.767 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:42.768 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:42.772 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:42.789 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:42.887 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008228603035648
24-06-16.21:13:42.953 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008228603035648
24-06-16.21:13:42.967 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:13:42.967 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:13:42.987 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:13:42.987 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:13:42.989 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:13:42.995 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:42.996 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:13:43.067 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"40011175517","timestamp":1718543623011}
24-06-16.21:13:44.351 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:44.351 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:44.351 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:44.362 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:44.363 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:44.380 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008234865131520
24-06-16.21:13:44.396 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008234865131520
24-06-16.21:13:44.400 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:13:44.400 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:13:44.402 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:13:44.402 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:13:44.403 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:13:44.404 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:44.404 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:13:44.415 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"30456532836","timestamp":1718543624406}
24-06-16.21:13:45.291 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:45.294 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:45.295 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:45.304 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:45.306 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:45.311 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008238770028544
24-06-16.21:13:45.331 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008238770028544
24-06-16.21:13:45.343 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:13:45.343 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:13:45.348 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:13:45.348 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:13:45.357 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:45.357 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:45.357 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:13:45.357 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:13:45.357 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:13:45.357 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:13:45.373 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"73675378354","timestamp":1718543625360}
24-06-16.21:13:46.188 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:46.188 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:46.198 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:46.211 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:46.220 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008242582650880
24-06-16.21:13:46.223 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:46.249 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008242582650880
24-06-16.21:13:46.258 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:46.258 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:46.263 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:46.264 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:46.269 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:46.269 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:46.269 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:46.270 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:46.273 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:46.273 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:46.303 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"58598211257","timestamp":1718543626276}
24-06-16.21:13:49.249 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:49.249 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:49.249 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:49.249 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:49.261 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:49.261 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:49.262 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:49.315 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008255559827456
24-06-16.21:13:49.357 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008255559827456
24-06-16.21:13:49.361 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:13:49.361 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:13:49.364 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:13:49.364 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:49.366 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:49.366 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:49.366 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:13:49.367 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:49.368 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:49.368 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:13:49.381 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"74432197949","timestamp":1718543629370}
24-06-16.21:13:49.605 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:49.610 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:49.615 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:49.621 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:49.625 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:49.628 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008256876838912
24-06-16.21:13:49.674 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008256876838912
24-06-16.21:13:49.686 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:49.686 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:49.696 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:49.696 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:49.704 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:49.704 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:49.704 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:49.707 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:49.709 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:49.709 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:49.774 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"48343903087","timestamp":1718543629713}
24-06-16.21:13:50.136 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:50.139 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:50.144 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:50.149 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:50.150 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008259066265600
24-06-16.21:13:50.155 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:50.175 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008259066265600
24-06-16.21:13:50.182 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:13:50.182 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:13:50.185 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:13:50.185 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:13:50.186 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:13:50.188 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:50.188 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:13:50.201 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"43353659374","timestamp":1718543630190}
24-06-16.21:13:52.646 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:52.648 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:52.659 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:52.671 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:52.674 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008269652688896
24-06-16.21:13:52.682 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:52.707 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008269652688896
24-06-16.21:13:52.720 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:52.720 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:52.726 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:52.727 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:52.742 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:52.742 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:52.742 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:52.743 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:52.745 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:52.745 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:52.774 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"21292812157","timestamp":1718543632748}
24-06-16.21:13:53.366 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:53.367 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:53.372 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:53.378 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:53.382 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:53.384 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008272630644736
24-06-16.21:13:53.397 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:53.408 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:53.438 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008272630644736
24-06-16.21:13:53.446 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:13:53.446 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:13:53.450 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:13:53.450 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:13:53.459 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:53.459 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:53.460 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:13:53.460 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:13:53.460 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:13:53.460 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:13:53.522 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"60081942452","timestamp":1718543633464}
24-06-16.21:13:53.624 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:53.645 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008273725358080
24-06-16.21:13:53.668 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:53.673 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008273725358080
24-06-16.21:13:53.679 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:53.679 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:13:53.679 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:13:53.683 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:13:53.683 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:13:53.685 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:13:53.685 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:53.686 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:13:53.706 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:53.708 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"61045839316","timestamp":1718543633688}
24-06-16.21:13:53.717 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:55.762 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:55.762 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:55.762 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:55.799 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:55.800 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:55.837 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008282919272448
24-06-16.21:13:55.937 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008282919272448
24-06-16.21:13:55.945 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:13:55.945 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:13:55.955 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:13:55.956 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:13:55.957 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:13:55.958 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:55.958 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:13:56.026 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:56.033 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:56.035 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:56.038 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:56.053 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:56.053 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:56.150 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"26294085526","timestamp":1718543635960}
24-06-16.21:13:57.996 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:57.996 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:58.006 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:58.019 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008292071243776
24-06-16.21:13:58.025 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:58.035 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:58.057 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008292071243776
24-06-16.21:13:58.062 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:58.062 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:58.064 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:58.065 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:58.067 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:58.068 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:58.068 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:58.068 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:58.069 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:58.069 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:58.089 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"21379607867","timestamp":1718543638071}
24-06-16.21:13:59.226 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.232 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.236 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.241 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.243 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:59.244 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008297209266176
24-06-16.21:13:59.247 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:59.252 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:59.265 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008297209266176
24-06-16.21:13:59.270 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:13:59.270 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:13:59.273 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:13:59.273 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:59.275 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:59.275 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:59.275 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:13:59.276 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:13:59.277 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:59.277 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:13:59.298 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"91018448667","timestamp":1718543639279}
24-06-16.21:13:59.726 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.741 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008299293835264
24-06-16.21:13:59.753 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.754 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.764 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:59.765 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:59.770 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008299293835264
24-06-16.21:13:59.774 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:13:59.774 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:13:59.777 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:13:59.777 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:13:59.781 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:59.781 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:59.781 [http-nio-8091-exec-6] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:13:59.781 [http-nio-8091-exec-6] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:13:59.781 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:13:59.781 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:13:59.810 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"34777686095","timestamp":1718543639784}
24-06-16.21:13:59.847 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.861 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008299797151744
24-06-16.21:13:59.886 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008299797151744
24-06-16.21:13:59.890 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:13:59.890 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:13:59.892 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:13:59.892 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:59.892 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.895 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:13:59.895 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:13:59.895 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:13:59.896 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:13:59.896 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:13:59.896 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:13:59.897 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:13:59.903 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:59.909 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:13:59.911 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"84759628256","timestamp":1718543639898}
24-06-16.21:14:02.059 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:02.059 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:02.066 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:02.070 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:02.074 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008309079146496
24-06-16.21:14:02.076 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:02.088 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008309079146496
24-06-16.21:14:02.091 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:14:02.091 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:14:02.093 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:14:02.093 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:14:02.093 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:14:02.094 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:02.094 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:14:02.105 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"29460997167","timestamp":1718543642096}
24-06-16.21:14:02.464 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:02.471 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:02.481 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:02.483 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008310794616832
24-06-16.21:14:02.484 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:02.495 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:02.509 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008310794616832
24-06-16.21:14:02.514 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:14:02.514 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:14:02.518 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:14:02.518 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:14:02.519 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:14:02.520 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:02.530 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:14:02.550 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"32092072740","timestamp":1718543642532}
24-06-16.21:14:03.804 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:03.824 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:03.825 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:03.835 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:03.835 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:03.846 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008316511453184
24-06-16.21:14:03.921 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008316511453184
24-06-16.21:14:03.927 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:14:03.927 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:14:03.930 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:14:03.930 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:14:03.931 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:14:03.932 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:03.932 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:14:03.964 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"89467396739","timestamp":1718543643935}
24-06-16.21:14:04.228 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:04.230 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:04.231 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:04.238 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:04.239 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008318159814656
24-06-16.21:14:04.240 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:04.241 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:04.250 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:04.259 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008318159814656
24-06-16.21:14:04.264 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:14:04.264 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:14:04.267 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:14:04.267 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:14:04.273 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:04.273 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:04.273 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:14:04.273 [http-nio-8091-exec-10] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:14:04.273 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:14:04.273 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:14:04.293 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"96249193668","timestamp":1718543644275}
24-06-16.21:14:06.669 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:06.673 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:06.684 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:06.684 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:06.695 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:06.704 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008328498774016
24-06-16.21:14:07.123 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:07.127 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:07.129 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:07.181 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:07.191 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:07.303 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008328498774016
24-06-16.21:14:07.304 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:07.325 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:14:07.325 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:14:07.332 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:14:07.332 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:14:07.362 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:07.362 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:07.362 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:14:07.362 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:14:07.362 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:14:07.362 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:14:07.491 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"00679143379","timestamp":1718543647381}
24-06-16.21:14:09.867 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:09.867 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:09.867 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:10.059 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:10.060 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:10.764 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008345527648256
24-06-16.21:14:11.317 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008345527648256
24-06-16.21:14:11.363 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:14:11.363 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:14:11.379 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:14:11.380 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:14:11.384 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:14:11.393 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:11.394 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:14:11.477 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"70488285599","timestamp":1718543651407}
24-06-16.21:14:13.178 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:13.178 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:13.191 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:13.193 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:13.207 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:13.247 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008355942105088
24-06-16.21:14:13.318 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008355942105088
24-06-16.21:14:13.326 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:14:13.326 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:14:13.331 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:14:13.331 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:13.337 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:13.337 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:13.337 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:14:13.338 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:13.340 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:13.341 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:14:13.361 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"33336492353","timestamp":1718543653344}
24-06-16.21:14:16.470 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:16.471 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:16.471 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:16.510 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:16.517 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:16.561 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008369842028544
24-06-16.21:14:16.623 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008369842028544
24-06-16.21:14:16.661 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:14:16.662 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:14:16.700 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:14:16.700 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:14:16.707 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:14:16.716 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:16.717 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:14:16.857 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"49556636995","timestamp":1718543656755}
24-06-16.21:14:20.175 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:20.177 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:20.176 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:20.203 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:20.203 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:20.472 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008386237562880
24-06-16.21:14:20.599 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008386237562880
24-06-16.21:14:20.671 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:14:20.671 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:14:20.692 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:14:20.692 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:14:20.697 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:14:20.703 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:20.703 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:14:20.804 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"48872777909","timestamp":1718543660733}
24-06-16.21:14:21.457 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:21.510 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008390599639040
24-06-16.21:14:21.603 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008390599639040
24-06-16.21:14:21.654 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:14:21.654 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:14:21.668 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:14:21.668 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:14:21.674 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:14:21.681 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:21.682 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:14:21.738 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:21.740 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"98724586497","timestamp":1718543661689}
24-06-16.21:14:21.744 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:21.757 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:21.761 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:23.152 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:23.154 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:23.166 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:23.183 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:23.191 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:23.463 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008398791114752
24-06-16.21:14:24.388 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008398791114752
24-06-16.21:14:24.519 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:14:24.519 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:14:24.598 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:14:24.600 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:24.673 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:24.675 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:24.684 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:14:24.703 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:24.725 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:24.734 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:14:25.109 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"75541867620","timestamp":1718543664815}
24-06-16.21:14:27.274 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:27.275 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:27.277 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:27.286 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:27.293 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:27.429 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008415425724416
24-06-16.21:14:27.486 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008415425724416
24-06-16.21:14:27.506 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:14:27.507 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:14:27.533 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:14:27.533 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:14:27.566 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:14:27.593 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:27.594 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:14:27.637 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"12523218127","timestamp":1718543667599}
24-06-16.21:14:29.292 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:29.301 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:29.313 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:29.317 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:29.323 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:29.355 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008423503953920
24-06-16.21:14:29.402 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008423503953920
24-06-16.21:14:29.415 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:14:29.415 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:14:29.431 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:14:29.431 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:29.436 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:29.436 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:29.436 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:14:29.437 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:29.438 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:29.438 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:14:29.489 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"11626262444","timestamp":1718543669442}
24-06-16.21:14:29.643 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:29.656 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:29.665 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008424804188160
24-06-16.21:14:29.668 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:29.672 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:29.680 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:29.682 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:29.692 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:29.702 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008424804188160
24-06-16.21:14:29.707 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:14:29.707 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:14:29.710 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:14:29.710 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:14:29.711 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:14:29.713 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:29.713 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:14:29.762 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"18817759743","timestamp":1718543669715}
24-06-16.21:14:30.824 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:30.828 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:30.831 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:30.838 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008429724106752
24-06-16.21:14:30.839 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:30.841 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:30.855 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008429724106752
24-06-16.21:14:30.859 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:14:30.859 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:14:30.861 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:14:30.861 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:30.864 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:30.864 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:30.864 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:14:30.865 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:30.866 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:30.866 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:14:30.881 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"90700718786","timestamp":1718543670868}
24-06-16.21:14:31.630 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:31.732 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:31.741 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:31.753 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:31.753 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:31.800 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008433759027200
24-06-16.21:14:31.826 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008433759027200
24-06-16.21:14:31.832 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:14:31.832 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:14:31.836 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:14:31.836 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:31.843 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:31.843 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:31.843 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:14:31.845 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:31.847 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:31.848 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:14:31.921 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"95208820626","timestamp":1718543671851}
24-06-16.21:14:33.544 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:33.545 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:33.550 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:33.555 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008441120030720
24-06-16.21:14:33.556 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:33.561 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:33.567 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008441120030720
24-06-16.21:14:33.570 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:14:33.570 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:14:33.572 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:14:33.572 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:14:33.572 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:14:33.573 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:33.573 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:14:33.587 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"87893743211","timestamp":1718543673575}
24-06-16.21:14:33.884 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:33.885 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:33.888 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:33.893 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008442537705472
24-06-16.21:14:33.897 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:33.898 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:33.903 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008442537705472
24-06-16.21:14:33.905 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:14:33.905 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:14:33.907 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:14:33.907 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:14:33.908 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:33.908 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:33.909 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:14:33.909 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:14:33.909 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:14:33.909 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:14:33.917 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"98330351731","timestamp":1718543673910}
24-06-16.21:14:34.250 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:34.262 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008444085403648
24-06-16.21:14:34.277 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008444085403648
24-06-16.21:14:34.281 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:14:34.281 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:14:34.284 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:14:34.284 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:14:34.284 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:14:34.285 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:34.285 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:14:34.290 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:34.298 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"68314025657","timestamp":1718543674287}
24-06-16.21:14:34.302 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:34.306 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:34.307 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:34.319 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:34.338 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008444404170752
24-06-16.21:14:34.354 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008444404170752
24-06-16.21:14:34.358 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:14:34.358 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:14:34.360 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:14:34.360 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:34.364 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:34.364 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:34.364 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:14:34.366 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:34.368 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:34.369 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:14:34.387 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"85041495576","timestamp":1718543674371}
24-06-16.21:14:35.253 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:35.256 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:35.263 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:35.266 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008448296484864
24-06-16.21:14:35.267 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:35.351 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:35.402 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008448296484864
24-06-16.21:14:35.407 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:14:35.407 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:14:35.410 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:14:35.410 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:14:35.411 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:14:35.412 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:35.414 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:14:35.454 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"28072465310","timestamp":1718543675417}
24-06-16.21:14:36.014 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:36.017 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:36.027 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:36.027 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008451488350208
24-06-16.21:14:36.029 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:36.038 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:36.040 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008451488350208
24-06-16.21:14:36.043 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:14:36.043 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:14:36.045 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:14:36.045 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:14:36.045 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:14:36.046 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:36.046 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:14:36.057 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"22553199232","timestamp":1718543676048}
24-06-16.21:14:37.453 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:37.460 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:37.461 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:37.470 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008457540730880
24-06-16.21:14:37.471 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:37.471 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:37.489 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008457540730880
24-06-16.21:14:37.493 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:14:37.493 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:14:37.496 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:14:37.497 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:14:37.502 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:37.503 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:37.503 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:14:37.503 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:14:37.503 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:14:37.503 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:14:37.523 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"04851713446","timestamp":1718543677505}
24-06-16.21:14:38.287 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:38.297 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:38.300 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008461022003200
24-06-16.21:14:38.300 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:38.303 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:38.309 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:38.311 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:38.314 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:38.315 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008461022003200
24-06-16.21:14:38.318 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:14:38.319 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:14:38.321 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:14:38.321 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:14:38.321 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:14:38.322 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:38.322 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:14:38.334 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"03408088044","timestamp":1718543678324}
24-06-16.21:14:39.233 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:39.244 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:39.253 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:39.253 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008465019174912
24-06-16.21:14:39.254 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:39.256 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:39.263 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:39.266 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:39.267 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:39.274 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008465019174912
24-06-16.21:14:39.277 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:39.279 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:14:39.279 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:14:39.282 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:14:39.283 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:14:39.284 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:14:39.285 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:39.285 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:14:39.286 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:39.299 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:39.302 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"58935427345","timestamp":1718543679287}
24-06-16.21:14:41.134 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.137 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.144 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.149 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:41.153 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008472988352512
24-06-16.21:14:41.154 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:41.182 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008472988352512
24-06-16.21:14:41.199 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:14:41.200 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:14:41.204 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:14:41.205 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:14:41.205 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:14:41.207 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:41.207 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:14:41.234 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"16984949462","timestamp":1718543681210}
24-06-16.21:14:41.489 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.490 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.493 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.495 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.500 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008474443776000
24-06-16.21:14:41.500 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:41.503 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:41.505 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.506 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:41.516 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:41.518 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.522 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008474443776000
24-06-16.21:14:41.525 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:14:41.525 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:41.526 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:14:41.528 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:14:41.528 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:41.528 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:41.530 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:41.530 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:41.530 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:14:41.531 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:41.532 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:41.532 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:14:41.538 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:41.583 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"39693208610","timestamp":1718543681533}
24-06-16.21:14:43.268 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:43.269 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:43.268 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:43.280 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:43.280 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:43.296 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008481972551680
24-06-16.21:14:43.324 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008481972551680
24-06-16.21:14:43.329 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:14:43.329 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:14:43.332 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:14:43.332 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:43.335 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:43.335 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:43.335 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:14:43.336 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:43.336 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:43.337 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:14:43.349 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"13084940059","timestamp":1718543683338}
24-06-16.21:14:43.602 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:43.617 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008483323117568
24-06-16.21:14:43.638 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008483323117568
24-06-16.21:14:43.644 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:14:43.644 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:14:43.649 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:14:43.649 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:43.656 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:43.656 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:43.658 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:14:43.658 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:43.662 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:43.662 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:14:43.677 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:43.689 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:43.691 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"00111517470","timestamp":1718543683666}
24-06-16.21:14:43.808 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:43.823 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008484187144192
24-06-16.21:14:43.839 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008484187144192
24-06-16.21:14:43.843 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:14:43.843 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:14:43.846 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:14:43.846 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:43.852 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:43.852 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:43.852 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:14:43.853 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:43.854 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:43.854 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:14:43.879 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"76371620530","timestamp":1718543683856}
24-06-16.21:14:44.467 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:44.469 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:44.470 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:44.474 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:44.480 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:44.481 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:44.485 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:44.486 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008486967967744
24-06-16.21:14:44.500 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008486967967744
24-06-16.21:14:44.503 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:14:44.503 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:14:44.505 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:14:44.506 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:14:44.506 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:14:44.507 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:44.507 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:14:44.518 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"71484535952","timestamp":1718543684509}
24-06-16.21:14:45.401 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:45.403 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:45.407 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:45.411 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008490847698944
24-06-16.21:14:45.414 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:45.417 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:45.427 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008490847698944
24-06-16.21:14:45.431 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:14:45.431 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:14:45.433 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:14:45.433 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:14:45.434 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:14:45.434 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:45.434 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:14:45.447 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"44403555233","timestamp":1718543685436}
24-06-16.21:14:45.915 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:45.916 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:45.920 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:45.925 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008493003571200
24-06-16.21:14:45.926 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:45.931 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:45.937 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008493003571200
24-06-16.21:14:45.939 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:14:45.940 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:14:45.941 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:14:45.941 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:14:45.942 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:14:45.942 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:45.942 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:14:45.952 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"06010301507","timestamp":1718543685944}
24-06-16.21:14:47.159 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.169 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.169 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008498221285376
24-06-16.21:14:47.171 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.175 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.181 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:47.181 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:47.183 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008498221285376
24-06-16.21:14:47.186 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:14:47.186 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:14:47.186 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:47.187 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:14:47.187 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:14:47.188 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:14:47.188 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:47.188 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:14:47.200 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"46895246091","timestamp":1718543687190}
24-06-16.21:14:47.304 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.306 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.317 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:47.320 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008498854625280
24-06-16.21:14:47.328 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.339 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:47.712 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.715 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.729 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:47.758 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:47.761 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:47.768 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:47.865 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008498854625280
24-06-16.21:14:47.882 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:14:47.882 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:14:47.885 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:14:47.885 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:14:47.886 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:14:47.887 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:47.887 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:14:47.922 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"10568064529","timestamp":1718543687889}
24-06-16.21:14:49.484 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:49.488 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:49.491 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:49.497 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008507985625088
24-06-16.21:14:49.498 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:49.501 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:49.510 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008507985625088
24-06-16.21:14:49.512 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:14:49.512 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:14:49.514 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:14:49.514 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:14:49.514 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:14:49.515 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:49.515 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:14:49.524 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"85003873404","timestamp":1718543689516}
24-06-16.21:14:49.975 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:49.976 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:49.978 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:49.979 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:49.985 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008510032445440
24-06-16.21:14:49.986 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:49.988 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:49.989 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:49.998 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008510032445440
24-06-16.21:14:50.001 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:14:50.001 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:14:50.003 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:14:50.003 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:14:50.004 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:14:50.004 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:50.004 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:14:50.013 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"26028248996","timestamp":1718543690006}
24-06-16.21:14:50.302 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:50.314 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008511412371456
24-06-16.21:14:50.326 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008511412371456
24-06-16.21:14:50.329 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:14:50.329 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:14:50.332 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:14:50.332 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:14:50.334 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:50.334 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:50.334 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:14:50.334 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:14:50.334 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:14:50.334 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:14:50.343 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"90801304243","timestamp":1718543690335}
24-06-16.21:14:50.344 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:50.356 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008511588532224
24-06-16.21:14:50.369 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008511588532224
24-06-16.21:14:50.372 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:14:50.372 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:14:50.373 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:14:50.373 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:14:50.374 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:14:50.374 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:50.375 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:14:50.384 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"96061041215","timestamp":1718543690376}
24-06-16.21:14:50.423 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:50.430 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008511898910720
24-06-16.21:14:50.440 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008511898910720
24-06-16.21:14:50.443 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:14:50.443 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:14:50.444 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:14:50.444 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:50.446 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:50.446 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:50.446 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:14:50.447 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:14:50.447 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:50.447 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:14:50.471 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"23551112757","timestamp":1718543690449}
24-06-16.21:14:52.186 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:52.186 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:52.187 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:52.197 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:52.198 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:52.252 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008519540932608
24-06-16.21:14:52.280 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008519540932608
24-06-16.21:14:52.285 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:14:52.285 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:14:52.288 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:14:52.288 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:52.292 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:52.292 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:52.292 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:14:52.294 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:14:52.296 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:52.297 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:14:52.338 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"89353071611","timestamp":1718543692299}
24-06-16.21:14:53.479 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:53.480 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:53.485 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:53.490 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:53.500 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:53.579 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008525106774016
24-06-16.21:14:53.849 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008525106774016
24-06-16.21:14:53.861 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:14:53.862 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:14:53.870 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:14:53.870 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:14:53.873 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:14:53.879 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:53.879 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:14:53.923 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"31897097010","timestamp":1718543693884}
24-06-16.21:14:54.483 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:54.483 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:54.488 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:54.494 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:54.495 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008528948756480
24-06-16.21:14:54.497 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:54.500 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:54.508 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:54.508 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008528948756480
24-06-16.21:14:54.511 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:14:54.511 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:14:54.513 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:14:54.513 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:14:54.514 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:14:54.514 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:54.514 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:14:54.527 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"06174120178","timestamp":1718543694516}
24-06-16.21:14:55.078 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:55.084 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:55.089 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:55.094 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:55.095 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008531465338880
24-06-16.21:14:55.100 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:55.122 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008531465338880
24-06-16.21:14:55.129 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:14:55.129 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:14:55.134 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:14:55.134 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:14:55.139 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:55.139 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:55.140 [http-nio-8091-exec-8] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:14:55.141 [http-nio-8091-exec-8] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:14:55.141 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:14:55.141 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:14:55.161 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"92738480663","timestamp":1718543695143}
24-06-16.21:14:56.163 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:56.167 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:56.171 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:56.177 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:56.182 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:56.190 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008536053907456
24-06-16.21:14:56.216 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008536053907456
24-06-16.21:14:56.221 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:14:56.221 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:14:56.226 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:14:56.226 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:14:56.226 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:14:56.229 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:56.229 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:14:56.254 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"24689205737","timestamp":1718543696234}
24-06-16.21:14:57.605 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:57.606 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:57.614 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:57.617 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008542043373568
24-06-16.21:14:57.619 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:57.624 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:57.634 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008542043373568
24-06-16.21:14:57.637 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:14:57.637 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:14:57.639 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:14:57.639 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:14:57.640 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:14:57.640 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:57.640 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:14:57.653 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"76707796292","timestamp":1718543697642}
24-06-16.21:14:57.690 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:57.692 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:57.697 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:57.699 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008542387306496
24-06-16.21:14:57.701 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:57.703 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:57.707 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:57.711 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008542387306496
24-06-16.21:14:57.712 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:57.714 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:14:57.714 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:14:57.715 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:14:57.715 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:14:57.718 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:57.718 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:57.718 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:14:57.718 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:14:57.718 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:14:57.718 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:14:57.727 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"60916365960","timestamp":1718543697719}
24-06-16.21:14:59.026 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:59.027 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:59.039 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:59.043 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008548024451072
24-06-16.21:14:59.051 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:59.063 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008548024451072
24-06-16.21:14:59.064 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:59.072 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:14:59.072 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:14:59.075 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:14:59.076 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:14:59.076 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:14:59.078 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:14:59.078 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:14:59.097 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"02357143112","timestamp":1718543699080}
24-06-16.21:14:59.532 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:59.537 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:59.540 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:14:59.544 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008550125797376
24-06-16.21:14:59.547 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:59.550 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:14:59.559 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008550125797376
24-06-16.21:14:59.562 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:14:59.562 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:14:59.565 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:14:59.565 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:14:59.567 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:14:59.568 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:14:59.568 [http-nio-8091-exec-7] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:14:59.568 [http-nio-8091-exec-7] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:14:59.568 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:14:59.568 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:14:59.579 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"02900898063","timestamp":1718543699570}
24-06-16.21:15:01.902 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:01.902 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:01.902 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:01.902 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:01.912 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:01.914 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:01.914 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:01.927 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008560116629504
24-06-16.21:15:01.947 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008560116629504
24-06-16.21:15:01.953 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:15:01.953 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:15:01.956 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:15:01.956 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:15:01.957 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:15:01.958 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:01.959 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:15:01.973 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"33883697074","timestamp":1718543701961}
24-06-16.21:15:02.735 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:02.736 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:02.741 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:02.748 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:02.751 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:02.753 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008563585318912
24-06-16.21:15:02.771 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008563585318912
24-06-16.21:15:02.775 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:15:02.775 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:15:02.778 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:15:02.778 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:15:02.779 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:15:02.780 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:02.780 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:15:02.791 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:02.800 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:02.800 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:02.801 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:02.811 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:02.811 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:02.813 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"14373945417","timestamp":1718543702790}
24-06-16.21:15:04.800 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:04.800 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:04.807 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:04.811 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:04.819 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:04.835 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008572317859840
24-06-16.21:15:04.865 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008572317859840
24-06-16.21:15:04.872 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:15:04.872 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:15:04.880 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:04.880 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:15:04.880 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:15:04.882 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:04.883 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:15:04.886 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:04.886 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:15:04.888 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:04.891 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:04.892 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:04.897 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:04.900 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:04.908 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:04.974 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"68874094753","timestamp":1718543704892}
24-06-16.21:15:05.454 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:05.456 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:05.460 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:05.476 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:05.477 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:05.537 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008575262261248
24-06-16.21:15:05.572 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008575262261248
24-06-16.21:15:05.581 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:15:05.581 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:15:05.586 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:15:05.586 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:15:05.598 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:05.598 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:05.599 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:15:05.600 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:15:05.604 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:05.604 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:15:05.655 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"12955353524","timestamp":1718543705607}
24-06-16.21:15:07.716 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:07.716 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:07.719 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:07.726 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:07.730 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:07.740 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008584502312960
24-06-16.21:15:07.763 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008584502312960
24-06-16.21:15:07.769 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:15:07.769 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:15:07.774 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:15:07.774 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:15:07.778 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:07.778 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:07.778 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:15:07.779 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:15:07.780 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:07.780 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:15:07.795 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"22892350896","timestamp":1718543707782}
24-06-16.21:15:08.311 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:08.311 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:08.312 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:08.323 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:08.323 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:08.343 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008587031478272
24-06-16.21:15:08.359 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008587031478272
24-06-16.21:15:08.363 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:15:08.363 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:15:08.366 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:15:08.366 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:15:08.367 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:15:08.368 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:08.368 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:15:08.391 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"32807247798","timestamp":1718543708371}
24-06-16.21:15:08.887 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:08.888 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:08.890 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:08.891 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:08.899 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:08.901 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:08.902 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:08.902 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008589376094208
24-06-16.21:15:08.918 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008589376094208
24-06-16.21:15:08.922 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:15:08.923 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:15:08.925 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:15:08.925 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:15:08.929 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:08.929 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:08.930 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:15:08.930 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:15:08.930 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:15:08.930 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:15:08.956 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"71026344219","timestamp":1718543708932}
24-06-16.21:15:10.094 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:10.094 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:10.095 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:10.105 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:10.107 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:10.118 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008594472173568
24-06-16.21:15:10.139 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008594472173568
24-06-16.21:15:10.146 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:15:10.146 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:15:10.150 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:15:10.150 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:15:10.151 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:15:10.153 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:10.153 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:15:10.168 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"75950912392","timestamp":1718543710155}
24-06-16.21:15:12.316 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:12.317 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:12.321 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:12.327 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:12.332 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:12.354 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008603854831616
24-06-16.21:15:12.373 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008603854831616
24-06-16.21:15:12.380 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:15:12.380 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:15:12.383 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:15:12.383 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:15:12.384 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:15:12.386 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:12.386 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:15:12.409 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"02035045745","timestamp":1718543712388}
24-06-16.21:15:12.486 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:12.487 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:12.494 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:12.499 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:12.501 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008604471394304
24-06-16.21:15:12.504 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:12.528 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008604471394304
24-06-16.21:15:12.534 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:15:12.534 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:15:12.538 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:15:12.538 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:15:12.542 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:12.542 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:12.542 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:15:12.542 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:15:12.542 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:15:12.542 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:15:12.564 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"84040023674","timestamp":1718543712545}
24-06-16.21:15:14.242 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:14.244 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:14.248 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:14.255 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:14.258 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:14.287 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008611962421248
24-06-16.21:15:14.292 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:14.304 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:14.308 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008611962421248
24-06-16.21:15:14.318 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:15:14.318 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:15:14.331 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:15:14.331 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:14.355 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:14.355 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:14.356 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:15:14.358 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:14.366 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:14.367 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:15:14.452 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"07387115330","timestamp":1718543714373}
24-06-16.21:15:15.882 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:15.882 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:15.884 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:15.892 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:15.894 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:15.901 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008618732027904
24-06-16.21:15:15.918 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008618732027904
24-06-16.21:15:15.921 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:15:15.921 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:15:15.923 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:15:15.923 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:15:15.923 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:15:15.924 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:15.924 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:15:15.934 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"23949020979","timestamp":1718543715926}
24-06-16.21:15:16.973 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:16.977 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:16.980 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:16.987 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008623287042048
24-06-16.21:15:16.988 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:16.990 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:17.003 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008623287042048
24-06-16.21:15:17.007 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:15:17.007 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:15:17.010 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:15:17.010 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:15:17.010 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:15:17.012 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:17.012 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:15:17.032 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"23597226962","timestamp":1718543717016}
24-06-16.21:15:18.717 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:18.717 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:18.722 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:18.733 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:18.734 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:18.895 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008631289774080
24-06-16.21:15:18.930 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008631289774080
24-06-16.21:15:18.942 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:15:18.942 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:15:18.952 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:15:18.952 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:15:18.954 [http-nio-8091-exec-1] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:15:18.959 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:18.960 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:15:19.025 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"85111658269","timestamp":1718543718964}
24-06-16.21:15:21.035 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:21.035 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:21.044 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:21.046 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:21.052 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:21.055 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:21.057 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:21.072 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008640420773888
24-06-16.21:15:21.088 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008640420773888
24-06-16.21:15:21.093 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:15:21.094 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:15:21.096 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:15:21.097 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:15:21.097 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:15:21.098 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:21.098 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:15:21.115 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"40589405274","timestamp":1718543721100}
24-06-16.21:15:22.204 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:22.206 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:22.216 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:22.226 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008645261000704
24-06-16.21:15:22.231 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:22.242 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:22.246 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008645261000704
24-06-16.21:15:22.251 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:15:22.251 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:15:22.256 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:15:22.256 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:15:22.257 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:15:22.259 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:22.259 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:15:22.287 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"38450396929","timestamp":1718543722262}
24-06-16.21:15:23.518 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:23.527 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:23.538 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:23.546 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008650797481984
24-06-16.21:15:23.552 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:23.563 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:23.591 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008650797481984
24-06-16.21:15:23.603 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:15:23.604 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:15:23.608 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:15:23.608 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:15:23.609 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:15:23.610 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:23.611 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:15:23.682 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"66466667749","timestamp":1718543723615}
24-06-16.21:15:25.560 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:25.560 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:25.560 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:25.560 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:25.572 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:25.572 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:25.573 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:25.617 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008659483885568
24-06-16.21:15:25.634 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008659483885568
24-06-16.21:15:25.638 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:15:25.638 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:15:25.640 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:15:25.640 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:15:25.641 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:15:25.641 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:25.641 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:15:25.655 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"95917039517","timestamp":1718543725643}
24-06-16.21:15:26.058 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:26.064 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:26.066 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:26.067 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008661371322368
24-06-16.21:15:26.076 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:26.076 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:26.080 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008661371322368
24-06-16.21:15:26.083 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:15:26.083 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:15:26.084 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:15:26.084 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:15:26.084 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:15:26.085 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:26.085 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:15:26.097 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"84928540234","timestamp":1718543726087}
24-06-16.21:15:28.548 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:28.600 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008671991300096
24-06-16.21:15:28.601 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:28.612 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:28.630 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008671991300096
24-06-16.21:15:28.638 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:15:28.638 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:15:28.641 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:15:28.641 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:15:28.643 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:28.644 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:28.644 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:28.644 [http-nio-8091-exec-8] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:15:28.644 [http-nio-8091-exec-8] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:15:28.644 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:15:28.644 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:15:28.654 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:28.667 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"75259884759","timestamp":1718543728646}
24-06-16.21:15:29.982 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:29.983 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:29.987 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:29.993 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:29.998 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:30.000 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008677867520000
24-06-16.21:15:30.021 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008677867520000
24-06-16.21:15:30.025 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:15:30.025 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:15:30.029 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:15:30.029 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:15:30.030 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:15:30.031 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:30.031 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:15:30.043 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"53824777392","timestamp":1718543730033}
24-06-16.21:15:30.149 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:30.149 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:30.149 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:30.154 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:30.164 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:30.164 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:30.165 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:30.184 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008678639271936
24-06-16.21:15:30.218 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008678639271936
24-06-16.21:15:30.223 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:15:30.223 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:15:30.227 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:15:30.227 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:15:30.228 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:15:30.229 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:30.229 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:15:30.254 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"87892429924","timestamp":1718543730232}
24-06-16.21:15:32.209 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:32.209 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:32.219 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:32.229 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:32.229 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:32.301 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008687518613504
24-06-16.21:15:32.338 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008687518613504
24-06-16.21:15:32.345 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:15:32.345 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:15:32.350 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:15:32.350 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:32.356 [http-nio-8091-exec-2] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:32.356 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:32.356 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:15:32.357 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:32.358 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:32.358 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:15:32.369 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"46040599581","timestamp":1718543732360}
24-06-16.21:15:34.402 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:34.402 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:34.402 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:34.404 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:34.415 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:34.415 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:34.416 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:34.451 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008696536367104
24-06-16.21:15:34.467 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008696536367104
24-06-16.21:15:34.470 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:15:34.470 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:15:34.473 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:15:34.473 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:15:34.475 [http-nio-8091-exec-9] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:34.475 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:34.475 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:15:34.475 [http-nio-8091-exec-9] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:15:34.475 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:15:34.475 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:15:34.484 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"50860312729","timestamp":1718543734476}
24-06-16.21:15:36.056 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:36.057 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:36.056 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:36.067 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:36.067 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:36.089 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008703402442752
24-06-16.21:15:36.094 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:36.096 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:36.097 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:36.104 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:36.106 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:36.108 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:36.112 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008703402442752
24-06-16.21:15:36.119 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:15:36.119 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:15:36.123 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:15:36.123 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:15:36.123 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:15:36.125 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:36.125 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:15:36.145 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"99152604750","timestamp":1718543736128}
24-06-16.21:15:37.919 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:37.920 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:37.921 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:37.925 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:37.930 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:37.931 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:37.936 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:37.955 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008711233208320
24-06-16.21:15:37.987 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008711233208320
24-06-16.21:15:37.995 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 101
24-06-16.21:15:37.995 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 101 规则: rule_default
24-06-16.21:15:38.004 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:101
24-06-16.21:15:38.006 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 101
24-06-16.21:15:38.008 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:101
24-06-16.21:15:38.010 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:38.010 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: null
24-06-16.21:15:38.041 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"93882486993","timestamp":1718543738013}
24-06-16.21:15:38.081 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:38.085 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:38.086 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:38.093 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008711812022272
24-06-16.21:15:38.096 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:38.096 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:38.113 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008711812022272
24-06-16.21:15:38.118 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:15:38.118 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:15:38.121 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:15:38.121 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:38.125 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:38.125 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:38.125 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:15:38.126 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:38.128 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:38.128 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:15:38.152 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"13710918594","timestamp":1718543738131}
24-06-16.21:15:38.582 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:38.588 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:38.591 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008713900785664
24-06-16.21:15:38.593 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:38.600 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:38.604 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:38.606 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008713900785664
24-06-16.21:15:38.608 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:15:38.608 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:15:38.610 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:15:38.610 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:15:38.610 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:15:38.610 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:38.610 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:15:38.619 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"92087488747","timestamp":1718543738612}
24-06-16.21:15:40.524 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:40.524 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:40.532 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:40.536 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:40.542 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:40.557 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008722146787328
24-06-16.21:15:40.576 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008722146787328
24-06-16.21:15:40.581 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:15:40.581 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:15:40.584 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:15:40.584 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:15:40.585 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:15:40.587 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:40.587 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:15:40.600 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"65327934585","timestamp":1718543740589}
24-06-16.21:15:41.540 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:41.542 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:41.544 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:41.553 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:41.554 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:41.568 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008726387228672
24-06-16.21:15:41.585 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008726387228672
24-06-16.21:15:41.589 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:15:41.589 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:15:41.592 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:15:41.592 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:15:41.592 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:15:41.593 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:41.593 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:15:41.603 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"86272451078","timestamp":1718543741595}
24-06-16.21:15:41.673 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:41.674 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:41.679 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:41.682 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:41.686 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:41.687 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008726886350848
24-06-16.21:15:41.689 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:41.693 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:41.710 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008726886350848
24-06-16.21:15:41.714 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:15:41.714 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:15:41.715 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:15:41.715 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:15:41.716 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:15:41.716 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:41.716 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:15:41.722 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"01645486304","timestamp":1718543741717}
24-06-16.21:15:42.459 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:42.459 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:42.464 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:42.470 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:42.480 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:42.494 [http-nio-8091-exec-4] INFO  RaffleActivityPartakeService - orderId是：1252008730271154176
24-06-16.21:15:42.512 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008730271154176
24-06-16.21:15:42.523 [http-nio-8091-exec-4] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:15:42.523 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:15:42.531 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:15:42.531 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:42.534 [http-nio-8091-exec-4] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:42.534 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:42.534 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:15:42.534 [http-nio-8091-exec-4] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:42.536 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:42.536 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:15:42.551 [http-nio-8091-exec-4] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"30598785792","timestamp":1718543742538}
24-06-16.21:15:44.249 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:44.249 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:44.249 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:44.268 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:44.270 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:44.320 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008737929953280
24-06-16.21:15:44.337 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008737929953280
24-06-16.21:15:44.342 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:15:44.342 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:15:44.346 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:15:44.346 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:15:44.349 [http-nio-8091-exec-5] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:44.350 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:44.350 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:15:44.350 [http-nio-8091-exec-5] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:15:44.350 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:15:44.350 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:15:44.382 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"02891090665","timestamp":1718543744352}
24-06-16.21:15:45.408 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:45.411 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:45.416 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:45.421 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:45.427 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008742573047808
24-06-16.21:15:45.428 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:45.453 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008742573047808
24-06-16.21:15:45.460 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:15:45.460 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:15:45.464 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:15:45.464 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:45.470 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:45.470 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:45.470 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:15:45.471 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:15:45.473 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:45.473 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:15:45.503 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"47683133550","timestamp":1718543745477}
24-06-16.21:15:48.197 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:48.260 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:48.270 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:48.371 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008754921078784
24-06-16.21:15:48.421 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:48.479 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:48.850 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008754921078784
24-06-16.21:15:48.866 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 104
24-06-16.21:15:48.866 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 104 规则: rule_default
24-06-16.21:15:48.874 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:104
24-06-16.21:15:48.874 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 104
24-06-16.21:15:48.876 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:104
24-06-16.21:15:48.880 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:48.880 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 104 规则: null
24-06-16.21:15:49.039 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":104,"awardTitle":"小米台灯","userId":"matthew"},"id":"21914578090","timestamp":1718543748888}
24-06-16.21:15:49.467 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:49.471 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:49.473 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:49.480 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008759572561920
24-06-16.21:15:49.481 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:49.484 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:49.495 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008759572561920
24-06-16.21:15:49.498 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:15:49.498 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:15:49.500 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:15:49.500 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:15:49.503 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:49.503 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:49.503 [http-nio-8091-exec-7] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:15:49.503 [http-nio-8091-exec-7] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:15:49.503 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:15:49.503 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:15:49.516 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"88890563496","timestamp":1718543749505}
24-06-16.21:15:49.608 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:49.624 [http-nio-8091-exec-9] INFO  RaffleActivityPartakeService - orderId是：1252008760176541696
24-06-16.21:15:49.632 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:49.749 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:49.865 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008760176541696
24-06-16.21:15:49.882 [http-nio-8091-exec-9] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:15:49.883 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:15:49.919 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:15:49.919 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:15:49.932 [http-nio-8091-exec-9] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:15:49.947 [http-nio-8091-exec-9] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:49.948 [http-nio-8091-exec-9] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:15:49.966 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:49.977 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:49.984 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:49.989 [http-nio-8091-exec-9] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"59546520873","timestamp":1718543749956}
24-06-16.21:15:49.994 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:51.184 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:51.186 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:51.191 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:51.197 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:51.201 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008766790959104
24-06-16.21:15:51.203 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:51.222 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008766790959104
24-06-16.21:15:51.228 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:15:51.229 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:15:51.233 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:15:51.233 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:15:51.237 [http-nio-8091-exec-3] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:51.237 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:51.237 [http-nio-8091-exec-3] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:15:51.237 [http-nio-8091-exec-3] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:15:51.237 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:15:51.237 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:15:51.256 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"19039069678","timestamp":1718543751240}
24-06-16.21:15:52.799 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:52.799 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:52.803 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:52.811 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:52.814 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:52.820 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008773581537280
24-06-16.21:15:52.832 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008773581537280
24-06-16.21:15:52.837 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:15:52.837 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:15:52.840 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:15:52.840 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:15:52.843 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:52.843 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:52.843 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:15:52.843 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:15:52.843 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:15:52.843 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:15:52.855 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"32393423037","timestamp":1718543752846}
24-06-16.21:15:53.183 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:53.185 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:53.188 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:53.192 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008775141818368
24-06-16.21:15:53.196 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:53.199 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:53.204 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008775141818368
24-06-16.21:15:53.207 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 103
24-06-16.21:15:53.207 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 103 规则: rule_default
24-06-16.21:15:53.209 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:103
24-06-16.21:15:53.209 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 103
24-06-16.21:15:53.209 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:103
24-06-16.21:15:53.210 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:53.210 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 103 规则: null
24-06-16.21:15:53.221 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:53.224 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":103,"awardTitle":"支付优惠券","userId":"matthew"},"id":"33583532076","timestamp":1718543753212}
24-06-16.21:15:53.231 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:53.232 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:53.232 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:53.235 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:53.242 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:53.243 [http-nio-8091-exec-10] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:53.252 [http-nio-8091-exec-3] INFO  RaffleActivityPartakeService - orderId是：1252008775393476608
24-06-16.21:15:53.278 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008775393476608
24-06-16.21:15:53.285 [http-nio-8091-exec-3] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 102
24-06-16.21:15:53.285 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 102 规则: rule_default
24-06-16.21:15:53.289 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:102
24-06-16.21:15:53.289 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 102
24-06-16.21:15:53.290 [http-nio-8091-exec-3] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:102
24-06-16.21:15:53.291 [http-nio-8091-exec-3] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:53.291 [http-nio-8091-exec-3] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 102 规则: null
24-06-16.21:15:53.319 [http-nio-8091-exec-3] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":102,"awardTitle":"OpenAI会员卡","userId":"matthew"},"id":"29525884046","timestamp":1718543753294}
24-06-16.21:15:55.637 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:55.644 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:55.653 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:55.655 [http-nio-8091-exec-7] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:55.670 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:55.701 [http-nio-8091-exec-5] INFO  RaffleActivityPartakeService - orderId是：1252008785661132800
24-06-16.21:15:55.755 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008785661132800
24-06-16.21:15:55.763 [http-nio-8091-exec-5] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:15:55.763 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:15:55.767 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:15:55.767 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:15:55.768 [http-nio-8091-exec-5] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:15:55.770 [http-nio-8091-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:55.770 [http-nio-8091-exec-5] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:15:55.790 [http-nio-8091-exec-5] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"18128017727","timestamp":1718543755773}
24-06-16.21:15:57.877 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:57.913 [http-nio-8091-exec-2] INFO  RaffleActivityPartakeService - orderId是：1252008794943127552
24-06-16.21:15:57.933 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008794943127552
24-06-16.21:15:57.938 [http-nio-8091-exec-2] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 108
24-06-16.21:15:57.938 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 108 规则: rule_default
24-06-16.21:15:57.942 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:108
24-06-16.21:15:57.942 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 108
24-06-16.21:15:57.947 [http-nio-8091-exec-2] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:108
24-06-16.21:15:57.957 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:57.957 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:57.962 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:RuleTreeNodeVO(treeId=tree_luck_award, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_luck_award, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:57.962 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 108 规则: null
24-06-16.21:15:57.969 [http-nio-8091-exec-6] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:57.970 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:57.997 [http-nio-8091-exec-2] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":108,"awardTitle":"暴走玩偶","userId":"matthew"},"id":"36350397746","timestamp":1718543757966}
24-06-16.21:15:59.170 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:59.176 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:59.180 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:15:59.186 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:59.191 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:15:59.197 [http-nio-8091-exec-8] INFO  RaffleActivityPartakeService - orderId是：1252008800328613888
24-06-16.21:15:59.233 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008800328613888
24-06-16.21:15:59.240 [http-nio-8091-exec-8] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:15:59.240 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:15:59.246 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:15:59.246 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:15:59.249 [http-nio-8091-exec-8] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:15:59.249 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:15:59.249 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:15:59.250 [http-nio-8091-exec-8] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:15:59.251 [http-nio-8091-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:15:59.251 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:15:59.289 [http-nio-8091-exec-8] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"70933096130","timestamp":1718543759253}
24-06-16.21:16:01.652 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:01.659 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:01.666 [http-nio-8091-exec-5] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:01.668 [http-nio-8091-exec-7] INFO  RaffleActivityPartakeService - orderId是：1252008810692739072
24-06-16.21:16:01.669 [http-nio-8091-exec-1] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:16:01.676 [http-nio-8091-exec-5] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:16:01.682 [http-nio-8091-exec-7] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008810692739072
24-06-16.21:16:01.686 [http-nio-8091-exec-7] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 107
24-06-16.21:16:01.686 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 107 规则: rule_default
24-06-16.21:16:01.688 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:107
24-06-16.21:16:01.688 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:107
24-06-16.21:16:01.691 [http-nio-8091-exec-7] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:16:01.691 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=1, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:16:01.691 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 107
24-06-16.21:16:01.692 [http-nio-8091-exec-7] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:107
24-06-16.21:16:01.693 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_1 node:RuleTreeNodeVO(treeId=tree_lock_1, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_1, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:16:01.693 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 107 规则: null
24-06-16.21:16:01.709 [http-nio-8091-exec-7] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":107,"awardTitle":"小霸王游戏机","userId":"matthew"},"id":"60477772803","timestamp":1718543761694}
24-06-16.21:16:02.332 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:02.338 [http-nio-8091-exec-9] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:02.346 [http-nio-8091-exec-2] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:02.349 [http-nio-8091-exec-6] INFO  RaffleActivityPartakeService - orderId是：1252008813549060096
24-06-16.21:16:02.350 [http-nio-8091-exec-9] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:16:02.358 [http-nio-8091-exec-2] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:16:02.382 [http-nio-8091-exec-6] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008813549060096
24-06-16.21:16:02.388 [http-nio-8091-exec-6] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:16:02.388 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:16:02.391 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:16:02.391 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:16:02.396 [http-nio-8091-exec-6] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:16:02.396 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:16:02.396 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:16:02.397 [http-nio-8091-exec-6] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:16:02.398 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:16:02.398 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:16:02.416 [http-nio-8091-exec-6] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"72545279489","timestamp":1718543762400}
24-06-16.21:16:02.798 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:02.798 [http-nio-8091-exec-4] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:02.801 [http-nio-8091-exec-3] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:02.804 [http-nio-8091-exec-8] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:02.809 [http-nio-8091-exec-4] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:16:02.812 [http-nio-8091-exec-3] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:16:02.812 [http-nio-8091-exec-10] INFO  RaffleActivityPartakeService - orderId是：1252008815491022848
24-06-16.21:16:02.814 [http-nio-8091-exec-8] INFO  RaffleActivityController - 同一用户多次请求接口
24-06-16.21:16:02.836 [http-nio-8091-exec-10] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008815491022848
24-06-16.21:16:02.842 [http-nio-8091-exec-10] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 106
24-06-16.21:16:02.842 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 106 规则: rule_default
24-06-16.21:16:02.845 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:106
24-06-16.21:16:02.846 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:106
24-06-16.21:16:02.848 [http-nio-8091-exec-10] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:16:02.848 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=2, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_stock, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:16:02.849 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存节点, userId: matthew strategy: 100006 award: 106
24-06-16.21:16:02.849 [http-nio-8091-exec-10] INFO  RuleStockTreeNode      - 规则过滤-库存扣减-成功 userId:matthew strategyId:100006 awardId:106
24-06-16.21:16:02.850 [http-nio-8091-exec-10] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:RuleTreeNodeVO(treeId=tree_lock_2, ruleKey=rule_stock, ruleDesc=库存扣减规则, ruleValue=null, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_2, ruleNodeFrom=rule_stock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW)]) code:0001
24-06-16.21:16:02.850 [http-nio-8091-exec-10] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 106 规则: null
24-06-16.21:16:02.861 [http-nio-8091-exec-10] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":106,"awardTitle":"轻奢办公椅","userId":"matthew"},"id":"24153672111","timestamp":1718543762851}
24-06-16.21:16:03.407 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖 userId:matthew activityId:100001
24-06-16.21:16:03.424 [http-nio-8091-exec-1] INFO  RaffleActivityPartakeService - orderId是：1252008818057936896
24-06-16.21:16:03.450 [http-nio-8091-exec-1] INFO  RaffleActivityController - 活动抽奖，创建订单 userId:matthew activityId:100001 orderId:1252008818057936896
24-06-16.21:16:03.455 [http-nio-8091-exec-1] INFO  DefaultChainFilter     - 抽奖责任链-默认处理 userId: matthew strategyId: 100006 ruleModel: rule_default awardId: 105
24-06-16.21:16:03.455 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成责任链流程: userId: matthew strategyId: 100006 awardId: 105 规则: rule_default
24-06-16.21:16:03.460 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 进入决策树处理, userId:matthew, strategyId:100006, awardId:105
24-06-16.21:16:03.460 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 规则过滤-次数锁 userId:matthew strategyId:100006 awardId:105
24-06-16.21:16:03.470 [http-nio-8091-exec-1] INFO  RuleLockTreeNode       - 决策树-用户抽奖次数满足奖品要求-次数锁节点放行
24-06-16.21:16:03.470 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_lock, ruleDesc=限定用户已完成N次抽奖后解锁, ruleValue=3, treeNodeLineVOList=[RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=ALLOW), RuleTreeNodeLineVO(treeId=tree_lock_3, ruleNodeFrom=rule_lock, ruleNodeTo=rule_luck_award, ruleLimitType=EQUAL, ruleLimitValue=TAKE_OVER)]) code:0000
24-06-16.21:16:03.471 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 规则过滤-兜底奖品 userId:matthew strategyId:100006 awardId:105 ruleValue:101:1,100
24-06-16.21:16:03.471 [http-nio-8091-exec-1] INFO  RuleLuckAwardTreeNode  - 决策树-兜底节点接管 luckAwardId: 1,100 luckRuleValue: 1,100
24-06-16.21:16:03.471 [http-nio-8091-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_3 node:RuleTreeNodeVO(treeId=tree_lock_3, ruleKey=rule_luck_award, ruleDesc=兜底奖品随机积分, ruleValue=101:1,100, treeNodeLineVOList=null) code:0001
24-06-16.21:16:03.471 [http-nio-8091-exec-1] INFO  AbstractRaffleStrategy - 完成规则树流程: userId: matthew strategyId: 100006 awardId: 101 规则: 1,100
24-06-16.21:16:03.539 [http-nio-8091-exec-1] INFO  EventPublisher         - 发送MQ消息 topic:send-award-topic message:{"data":{"awardId":101,"awardTitle":"随机积分","userId":"matthew"},"id":"99812537562","timestamp":1718543763483}
24-06-16.21:16:07.977 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Revoke previously assigned partitions sku-clear-topic-0
24-06-16.21:16:07.977 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Revoke previously assigned partitions sku-deduct-topic-0
24-06-16.21:16:07.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: partitions revoked: [sku-deduct-topic-0]
24-06-16.21:16:07.978 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: partitions revoked: [sku-clear-topic-0]
24-06-16.21:16:07.978 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Member consumer-sku-deduct-group-1-01751584-0ab3-4ccb-85bd-cc563ab56b91 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-16.21:16:07.978 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Member consumer-sku-clear-group-2-30b2b352-a6b8-426c-acfb-f260b5d7e467 sending LeaveGroup request to coordinator kafka:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
24-06-16.21:16:07.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:16:07.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:16:07.981 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Unsubscribed all topics or patterns and assigned partitions
24-06-16.21:16:07.981 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:16:07.981 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:16:07.981 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaConsumer          - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Unsubscribed all topics or patterns and assigned partitions
24-06-16.21:16:07.982 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:16:07.982 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-deduct-group-1, groupId=sku-deduct-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:16:07.983 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Resetting generation due to: consumer pro-actively leaving the group
24-06-16.21:16:07.983 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  ConsumerCoordinator    - [Consumer clientId=consumer-sku-clear-group-2, groupId=sku-clear-group] Request joining group due to: consumer pro-actively leaving the group
24-06-16.21:16:08.011 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:16:08.011 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:16:08.011 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:16:08.011 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:16:08.011 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-16.21:16:08.011 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  Metrics                - Metrics reporters closed
24-06-16.21:16:08.019 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-deduct-group-1 unregistered
24-06-16.21:16:08.019 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  AppInfoParser          - App info kafka.consumer for consumer-sku-clear-group-2 unregistered
24-06-16.21:16:08.019 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  KafkaMessageListenerContainer - sku-deduct-group: Consumer stopped
24-06-16.21:16:08.019 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  KafkaMessageListenerContainer - sku-clear-group: Consumer stopped
24-06-16.21:16:08.031 [SpringApplicationShutdownHook] INFO  KafkaProducer          - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
24-06-16.21:16:08.034 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics scheduler closed
24-06-16.21:16:08.034 [SpringApplicationShutdownHook] INFO  Metrics                - Closing reporter org.apache.kafka.common.metrics.JmxReporter
24-06-16.21:16:08.034 [SpringApplicationShutdownHook] INFO  Metrics                - Metrics reporters closed
24-06-16.21:16:08.034 [SpringApplicationShutdownHook] INFO  AppInfoParser          - App info kafka.producer for producer-1 unregistered
