<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.matthew.infrastructure.persistent.dao.IActivitySkuDao">

    <resultMap id="dataMap" type="cn.matthew.infrastructure.persistent.po.RaffleActivitySkuPo">
        <id column="id" property="id"/>
        <result column="sku" property="sku"/>
        <result column="activity_id" property="activityId"/>
        <result column="activity_count_id" property="activityCountId"/>
        <result column="stock_count" property="stockCount"/>
        <result column="stock_count_surplus" property="stockCountSurplus"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <update id="clearActivitySkuStock">
        update raffle_activity_sku
        set stock_count_surplus = 0, update_time = now()
        where sku = #{sku}
    </update>

    <update id="updateActivitySkuStock">
        update raffle_activity_sku
        set stock_count_surplus = stock_count_surplus - 1, update_time = now()
        where sku = #{sku} and stock_count_surplus > 0
    </update>

    <select id="queryActivitySkuInfo" resultMap="dataMap">
        select id, sku, activity_id, activity_count_id, stock_count, stock_count_surplus, create_time, update_time
        from raffle_activity_sku where sku = #{sku}
    </select>

    <select id="queryActivitySkuByActivityId"
            resultMap="dataMap">
        select id, sku, activity_id, activity_count_id, stock_count, stock_count_surplus, create_time, update_time
            from raffle_activity_sku
        where activity_id = #{activityId}
    </select>


</mapper>